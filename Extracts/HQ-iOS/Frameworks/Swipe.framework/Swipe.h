//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct Core<location::nearby::IOSPlatform>;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct IOSAtomicBoolean;

struct Payload;

struct Ptr<location::nearby::IOSAtomicBoolean, ObjectDestroyer> {
    struct IOSAtomicBoolean *pointee_;
    struct RefCount *ref_count_;
};

struct Ptr<location::nearby::Runnable, ObjectDestroyer> {
    struct Runnable *pointee_;
    struct RefCount *ref_count_;
};

struct Ptr<location::nearby::connections::Core<location::nearby::IOSPlatform>, ObjectDestroyer> {
    struct Core<location::nearby::IOSPlatform> *pointee_;
    struct RefCount *ref_count_;
};

struct Ptr<location::nearby::connections::Payload, ObjectDestroyer> {
    struct Payload *_field1;
    struct RefCount *_field2;
};

struct RefCount;

struct Runnable;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

// Template types
typedef struct Ptr<location::nearby::Runnable, ObjectDestroyer> {
    struct Runnable *pointee_;
    struct RefCount *ref_count_;
} Ptr_1a5c285f;

typedef struct Ptr<location::nearby::connections::Core<location::nearby::IOSPlatform>, ObjectDestroyer> {
    struct Core<location::nearby::IOSPlatform> *pointee_;
    struct RefCount *ref_count_;
} Ptr_13b09c10;

typedef struct Ptr<location::nearby::connections::Payload, ObjectDestroyer> {
    struct Payload *_field1;
    struct RefCount *_field2;
} Ptr_f7260fc9;

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

#pragma mark -

//
// File: Payload/HQ-iOS.app/Frameworks/Swipe.framework/Swipe
// UUID: AF4673F8-C95F-3AEF-B525-B91241A0AA57
//
//                           Arch: arm64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 0.0.0.0.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: /usr/lib/swift
//                               = /usr/lib/swift
//                       Run path: @executable_path/Frameworks
//                               = Payload/HQ-iOS.app/Frameworks/Swipe.framework/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = Payload/HQ-iOS.app/Frameworks/Swipe.framework/Frameworks
//                       Run path: @executable_path/../../Frameworks
//                               = Payload/HQ-iOS.app/Frameworks/Swipe.framework/../../Frameworks
//                       Run path: @executable_path/Frameworks
//                               = Payload/HQ-iOS.app/Frameworks/Swipe.framework/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = Payload/HQ-iOS.app/Frameworks/Swipe.framework/Frameworks
//

@protocol APMAudienceFilter <NSObject>
@property(readonly, nonatomic, getter=isSequence) _Bool sequence;
@property(readonly, nonatomic, getter=isDynamic) _Bool dynamic;
@property(readonly, nonatomic, getter=isSessionScoped) _Bool sessionScoped;
@property(readonly, nonatomic) int filterID;
@property(readonly, nonatomic) int audienceID;
@end

@protocol APMEExperimentObserverDelegate <NSObject>

@optional
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (_Bool)shouldFetchExperimentsForClient:(APMEClient *)arg1;
- (void)client:(APMEClient *)arg1 didReceiveFetchError:(NSError *)arg2;
- (void)clientDidReceiveNewSnapshot:(APMEClient *)arg1;
@end

@protocol APMESDKPropertyProviderDelegate <NSObject>

@optional
- (NSDictionary *)dynamicCustomPropertiesForSDKProperty:(APMESDKProperty *)arg1;
@end

@protocol APMLogging <NSObject>
- (void)logMessage:(NSString *)arg1 logTag:(NSString *)arg2 messageCode:(long long)arg3 withLogLevel:(long long)arg4;
@end

@protocol AVCapturePhotoCaptureDelegate <NSObject>

@optional
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings *)arg2 error:(NSError *)arg3;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishProcessingLivePhotoToMovieFileAtURL:(NSURL *)arg2 duration:(CDStruct_198678f7)arg3 photoDisplayTime:(CDStruct_198678f7)arg4 resolvedSettings:(AVCaptureResolvedPhotoSettings *)arg5 error:(NSError *)arg6;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishRecordingLivePhotoMovieForEventualFileAtURL:(NSURL *)arg2 resolvedSettings:(AVCaptureResolvedPhotoSettings *)arg3;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishProcessingRawPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 previewPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg3 resolvedSettings:(AVCaptureResolvedPhotoSettings *)arg4 bracketSettings:(AVCaptureBracketedStillImageSettings *)arg5 error:(NSError *)arg6;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishProcessingPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 previewPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg3 resolvedSettings:(AVCaptureResolvedPhotoSettings *)arg4 bracketSettings:(AVCaptureBracketedStillImageSettings *)arg5 error:(NSError *)arg6;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didFinishProcessingPhoto:(AVCapturePhoto *)arg2 error:(NSError *)arg3;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 didCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings *)arg2;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 willCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings *)arg2;
- (void)captureOutput:(AVCapturePhotoOutput *)arg1 willBeginCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings *)arg2;
@end

@protocol CBCentralManagerDelegate <NSObject>
- (void)centralManagerDidUpdateState:(CBCentralManager *)arg1;

@optional
- (void)centralManager:(CBCentralManager *)arg1 didDisconnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didFailToConnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didConnectPeripheral:(CBPeripheral *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 didDiscoverPeripheral:(CBPeripheral *)arg2 advertisementData:(NSDictionary *)arg3 RSSI:(NSNumber *)arg4;
- (void)centralManager:(CBCentralManager *)arg1 willRestoreState:(NSDictionary *)arg2;
@end

@protocol CBPeripheralDelegate <NSObject>

@optional
- (void)peripheral:(CBPeripheral *)arg1 didOpenL2CAPChannel:(CBL2CAPChannel *)arg2 error:(NSError *)arg3;
- (void)peripheralIsReadyToSendWriteWithoutResponse:(CBPeripheral *)arg1;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateNotificationStateForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverCharacteristicsForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverIncludedServicesForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverServices:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didReadRSSI:(NSNumber *)arg2 error:(NSError *)arg3;
- (void)peripheralDidUpdateRSSI:(CBPeripheral *)arg1 error:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didModifyServices:(NSArray *)arg2;
- (void)peripheralDidUpdateName:(CBPeripheral *)arg1;
@end

@protocol CBPeripheralManagerDelegate <NSObject>
- (void)peripheralManagerDidUpdateState:(CBPeripheralManager *)arg1;

@optional
- (void)peripheralManager:(CBPeripheralManager *)arg1 didOpenL2CAPChannel:(CBL2CAPChannel *)arg2 error:(NSError *)arg3;
- (void)peripheralManager:(CBPeripheralManager *)arg1 didUnpublishL2CAPChannel:(unsigned short)arg2 error:(NSError *)arg3;
- (void)peripheralManager:(CBPeripheralManager *)arg1 didPublishL2CAPChannel:(unsigned short)arg2 error:(NSError *)arg3;
- (void)peripheralManagerIsReadyToUpdateSubscribers:(CBPeripheralManager *)arg1;
- (void)peripheralManager:(CBPeripheralManager *)arg1 didReceiveWriteRequests:(NSArray *)arg2;
- (void)peripheralManager:(CBPeripheralManager *)arg1 didReceiveReadRequest:(CBATTRequest *)arg2;
- (void)peripheralManager:(CBPeripheralManager *)arg1 central:(CBCentral *)arg2 didUnsubscribeFromCharacteristic:(CBCharacteristic *)arg3;
- (void)peripheralManager:(CBPeripheralManager *)arg1 central:(CBCentral *)arg2 didSubscribeToCharacteristic:(CBCharacteristic *)arg3;
- (void)peripheralManager:(CBPeripheralManager *)arg1 didAddService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)arg1 error:(NSError *)arg2;
- (void)peripheralManager:(CBPeripheralManager *)arg1 willRestoreState:(NSDictionary *)arg2;
@end

@protocol CCTClearcutAuthorizer <NSObject>
- (id <GTMFetcherAuthorizationProtocol>)authorizationForObfuscatedGaiaID:(NSString *)arg1;
@end

@protocol CCTClearcutAutoCountersDelegate <NSObject>
- (long long)maxCounterCount;
- (_Bool)shouldLogCounters;
- (void)logCounters:(CCTClearcutCounters *)arg1;
@end

@protocol CCTClearcutLogTransformer <NSObject>
- (CCTClearcutLogEvent *)transform:(CCTClearcutLogEvent *)arg1;
@end

@protocol CCTClearcutLogger <NSObject>
- (void)logWithBlock:(void (^)(CCTClearcutLogEvent *))arg1;
- (void)logWithExtension:(GPBMessage *)arg1;
- (void)log:(CCTClearcutLogEvent *)arg1;
- (CCTClearcutLogEvent *)newEvent;
@end

@protocol CCTClearcutMetaLoggerProtocol <NSObject>
- (void)logUploadTime:(unsigned long long)arg1 endTime:(unsigned long long)arg2 error:(NSError *)arg3;
- (void)logDeletingOverTTLLogFiles:(NSArray *)arg1;
- (void)logDeletingOverSizeLogFiles:(NSArray *)arg1;
- (void)logRequestUploadDelayWithCurrentTime:(long long)arg1 logFile:(CCTLogFile *)arg2;
- (void)logResponse:(NSHTTPURLResponse *)arg1 context:(CCTLogContext *)arg2 startTime:(unsigned long long)arg3 finishTime:(unsigned long long)arg4;
- (void)logRequestContentLength:(CCTLogContext *)arg1 request:(NSURLRequest *)arg2;
- (void)logFilesWillBeUploaded:(NSArray *)arg1;
@end

@protocol CCTClockProtocol <GIPClock>
- (long long)timezoneOffsetSeconds;
@end

@protocol CCTUploaderLock <NSObject>
- (void)unlock;
- (_Bool)lock:(id *)arg1;
@end

@protocol CCTUploaderLockProvider <NSObject>
- (id <CCTUploaderLock>)makeUploaderLockForFile:(NSURL *)arg1;
@end

@protocol FIRAnalyticsInterop
- (void)unregisterAnalyticsListenerWithOrigin:(NSString *)arg1;
- (void)registerAnalyticsListener:(id <FIRAnalyticsInteropListener>)arg1 withOrigin:(NSString *)arg2;
- (void)setUserPropertyWithOrigin:(NSString *)arg1 name:(NSString *)arg2 value:(id)arg3;
- (void)logEventWithOrigin:(NSString *)arg1 name:(NSString *)arg2 parameters:(NSDictionary *)arg3;
- (void)getUserPropertiesWithCallback:(void (^)(NSDictionary *))arg1;
- (long long)maxUserProperties:(NSString *)arg1;
- (NSArray *)conditionalUserProperties:(NSString *)arg1 propertyNamePrefix:(NSString *)arg2;
- (void)clearConditionalUserProperty:(NSString *)arg1 forOrigin:(NSString *)arg2 clearEventName:(NSString *)arg3 clearEventParameters:(NSDictionary *)arg4;
- (void)setConditionalUserProperty:(NSDictionary *)arg1;
@end

@protocol FIRLibrary
+ (NSArray *)componentsToRegister;

@optional
+ (void)configureWithApp:(FIRApp *)arg1;
@end

@protocol GIPClock <GIPClockProtocol>
@end

@protocol GIPClockProtocol <NSObject>
- (long long)uptimeMilliseconds;
- (long long)bootTimeMilliseconds;
- (long long)currentTimeMilliseconds;
- (void)scheduleAfterTimeInterval:(double)arg1 block:(void (^)(void))arg2;
- (NSDate *)now;
- (double)elapsedTimeSince:(NSDate *)arg1;
@end

@protocol GIPLogAppControl
- (void)stopForwardingMessagesToGTMLogger;
@end

@protocol GIPLogFilter
- (_Bool)allowLogMessage:(GIPLogMessage *)arg1;
@end

@protocol GIPLogMultiplexing
- (void)removeAsyncLogger:(id <GIPAsyncLogger>)arg1;
- (void)addAsyncLogger:(id <GIPAsyncLogger>)arg1;
- (void)removeSyncLogger:(id <GIPSyncLogger>)arg1;
- (void)addSyncLogger:(id <GIPSyncLogger>)arg1;
- (void)setLogFilter:(id <GIPLogFilter>)arg1;
- (void)logWithMessage:(GIPLogMessage *)arg1;
@end

@protocol GIPLogger
- (id <GIPLogFilter>)filter;
- (void)logWithMessage:(GIPLogMessage *)arg1;
@end

@protocol GIPPseudonymousIDObserver
- (void)pseudonymousIDDidReset:(GIPPseudonymousIDStore *)arg1;
@end

@protocol GIPSyncLogger <GIPLogger>
@end

@protocol GNCAdvertiserConnectionInfo <NSObject>
@property(readonly, copy, nonatomic) NSString *authToken;
@property(readonly, copy, nonatomic) NSString *name;
@end

@protocol GNCConnection <NSObject>
- (NSProgress *)sendFilePayload:(GNCFilePayload *)arg1 completion:(void (^)(long long))arg2;
- (NSProgress *)sendStreamPayload:(GNCStreamPayload *)arg1 completion:(void (^)(long long))arg2;
- (NSProgress *)sendBytesPayload:(GNCBytesPayload *)arg1 completion:(void (^)(long long))arg2;
@end

@protocol GNCDiscoveredEndpointInfo <NSObject>
@property(readonly, nonatomic) CDUnknownBlockType requestConnection;
@property(readonly, copy, nonatomic) NSString *name;
@end

@protocol GNCDiscovererConnectionInfo <NSObject>
@property(readonly, copy, nonatomic) NSString *authToken;
@end

@protocol GNCMConnection <NSObject>
- (void)sendData:(NSData *)arg1 progressHandler:(void (^)(unsigned long long))arg2 completion:(void (^)(long long))arg3;
@end

@protocol GNSCentralManagerDelegate <NSObject>
- (void)centralManagerDidUpdateBLEState:(GNSCentralManager *)arg1;
- (void)centralManager:(GNSCentralManager *)arg1 didDiscoverPeer:(GNSCentralPeerManager *)arg2 advertisementData:(NSDictionary *)arg3;
@end

@protocol GNSSocketDelegate <NSObject>
- (void)socket:(GNSSocket *)arg1 didReceiveData:(NSData *)arg2;
- (void)socket:(GNSSocket *)arg1 didDisconnectWithError:(NSError *)arg2;
- (void)socketDidConnect:(GNSSocket *)arg1;
@end

@protocol GNSSocketOwner <NSObject>
- (void)socketWillBeDeallocated:(GNSSocket *)arg1;
- (void)disconnectSocket:(GNSSocket *)arg1;
- (NSUUID *)socketServiceIdentifier:(GNSSocket *)arg1;
- (void)sendData:(NSData *)arg1 socket:(GNSSocket *)arg2 completion:(void (^)(NSError *))arg3;
- (unsigned long long)socketMaximumUpdateValueLength:(GNSSocket *)arg1;
@end

@protocol GNSWeavePacketHandler <NSObject>

@optional
- (void)handleDataPacket:(GNSWeaveDataPacket *)arg1 context:(id)arg2;
- (void)handleErrorPacket:(GNSWeaveErrorPacket *)arg1 context:(id)arg2;
- (void)handleConnectionConfirmPacket:(GNSWeaveConnectionConfirmPacket *)arg1 context:(id)arg2;
- (void)handleConnectionRequestPacket:(GNSWeaveConnectionRequestPacket *)arg1 context:(id)arg2;
@end

@protocol GPBDictionaryInternalsProtocol
- (void)enumerateForTextFormat:(void (^)(id, id))arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(GPBCodedOutputStream *)arg1 asField:(GPBFieldDescriptor *)arg2;
- (unsigned long long)computeSerializedSizeAsField:(GPBFieldDescriptor *)arg1;
@end

@protocol GPBMessageSignatureProtocol

@optional
+ (id)getClassValue;
- (void)setArray:(NSArray *)arg1;
- (unsigned long long)getArrayCount;
- (id)getArray;
- (int)getEnumAtIndex:(unsigned long long)arg1;
- (void)setEnum:(int)arg1;
- (int)getEnum;
- (GPBMessage *)getGroupAtIndex:(unsigned long long)arg1;
- (void)setGroup:(GPBMessage *)arg1;
- (GPBMessage *)getGroup;
- (GPBMessage *)getMessageAtIndex:(unsigned long long)arg1;
- (void)setMessage:(GPBMessage *)arg1;
- (GPBMessage *)getMessage;
- (NSString *)getStringAtIndex:(unsigned long long)arg1;
- (void)setString:(NSString *)arg1;
- (NSString *)getString;
- (NSData *)getBytesAtIndex:(unsigned long long)arg1;
- (void)setBytes:(NSData *)arg1;
- (NSData *)getBytes;
- (unsigned long long)getUInt64AtIndex:(unsigned long long)arg1;
- (void)setUInt64:(unsigned long long)arg1;
- (unsigned long long)getUInt64;
- (unsigned int)getUInt32AtIndex:(unsigned long long)arg1;
- (void)setUInt32:(unsigned int)arg1;
- (unsigned int)getUInt32;
- (long long)getSInt64AtIndex:(unsigned long long)arg1;
- (void)setSInt64:(long long)arg1;
- (long long)getSInt64;
- (int)getSInt32AtIndex:(unsigned long long)arg1;
- (void)setSInt32:(int)arg1;
- (int)getSInt32;
- (long long)getInt64AtIndex:(unsigned long long)arg1;
- (void)setInt64:(long long)arg1;
- (long long)getInt64;
- (int)getInt32AtIndex:(unsigned long long)arg1;
- (void)setInt32:(int)arg1;
- (int)getInt32;
- (double)getDoubleAtIndex:(unsigned long long)arg1;
- (void)setDouble:(double)arg1;
- (double)getDouble;
- (long long)getSFixed64AtIndex:(unsigned long long)arg1;
- (void)setSFixed64:(long long)arg1;
- (long long)getSFixed64;
- (unsigned long long)getFixed64AtIndex:(unsigned long long)arg1;
- (void)setFixed64:(unsigned long long)arg1;
- (unsigned long long)getFixed64;
- (float)getFloatAtIndex:(unsigned long long)arg1;
- (void)setFloat:(float)arg1;
- (float)getFloat;
- (int)getSFixed32AtIndex:(unsigned long long)arg1;
- (void)setSFixed32:(int)arg1;
- (int)getSFixed32;
- (unsigned int)getFixed32AtIndex:(unsigned long long)arg1;
- (void)setFixed32:(unsigned int)arg1;
- (unsigned int)getFixed32;
- (_Bool)getBoolAtIndex:(unsigned long long)arg1;
- (void)setBool:(_Bool)arg1;
- (_Bool)getBool;
@end

@protocol GTMFetcherAuthorizationProtocol <NSObject>
@property(readonly) NSString *userEmail;
- (_Bool)isAuthorizedRequest:(NSURLRequest *)arg1;
- (_Bool)isAuthorizingRequest:(NSURLRequest *)arg1;
- (void)stopAuthorizationForRequest:(NSURLRequest *)arg1;
- (void)stopAuthorization;
- (void)authorizeRequest:(NSMutableURLRequest *)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;

@optional
@property __weak id <GTMSessionFetcherServiceProtocol> fetcherService;
@property _Bool shouldAuthorizeAllRequests;
@property(readonly) _Bool canAuthorize;
- (_Bool)primeForRefresh;
- (void)authorizeRequest:(NSMutableURLRequest *)arg1 completionHandler:(void (^)(NSError *))arg2;
@end

@protocol GTMSessionFetcherServiceProtocol <NSObject>
@property(readonly) NSOperationQueue *delegateQueue;
@property _Bool reuseSession;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue;
- (NSDate *)stoppedAllFetchersDate;
- (id <NSURLSessionDelegate>)sessionDelegate;
- (NSURLSession *)sessionForFetcherCreation;
- (NSURLSession *)session;
- (_Bool)isDelayingFetcher:(GTMSessionFetcher *)arg1;
- (GTMSessionFetcher *)fetcherWithRequest:(NSURLRequest *)arg1;
- (void)fetcherDidStop:(GTMSessionFetcher *)arg1;
- (void)fetcherDidBeginFetching:(GTMSessionFetcher *)arg1;
- (void)fetcherDidCreateSession:(GTMSessionFetcher *)arg1;
- (_Bool)fetcherShouldBeginFetching:(GTMSessionFetcher *)arg1;
@end

@protocol GULNetworkLoggerDelegate <NSObject>
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 context:(id)arg4;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 contexts:(NSArray *)arg4;
@end

@protocol GULNetworkReachabilityDelegate
- (void)reachabilityDidChange;
@end

@protocol NANOMessageBase <NSObject>
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo;
@property(readonly, nonatomic) const char *messageID;
- (NSData *)protoBuffer;
- (id)initWithBuffer:(NSData *)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(nonatomic, readonly) NSString *description;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
@property(nonatomic, readonly) Class superclass;
@property(nonatomic, readonly) long long hash;
- (_Bool)isEqual:(id)arg1;

@optional
@property(nonatomic, readonly) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol PHTPhenotype <NSObject>
@property(copy, nonatomic) NSString *overrideServerURL;
@property(nonatomic) _Bool debugForceSyncs;
- (void)useXCNServerURL;
- (void)removeCommitObserver:(NSObject<PHTCommitObserver> *)arg1;
- (void)addCommitObserver:(NSObject<PHTCommitObserver> *)arg1;
- (void)closeDatabase;
- (void)setExternalExperimentIDs:(NSArray *)arg1 moduleNamespace:(NSString *)arg2 logSource:(long long)arg3 callback:(void (^)(NSError *))arg4;
- (void)committedConfiguration:(NSString *)arg1 callback:(void (^)(PHTPhenotypeConfiguration *, NSError *))arg2;
- (void)committedConfiguration:(NSString *)arg1 user:(NSString *)arg2 callback:(void (^)(PHTPhenotypeConfiguration *, NSError *))arg3;
- (void)experimentTokens:(long long)arg1 callback:(void (^)(PHTPhenotypeExperimentTokens *, NSError *))arg2;
- (void)experimentTokens:(long long)arg1 user:(NSString *)arg2 callback:(void (^)(PHTPhenotypeExperimentTokens *, NSError *))arg3;
- (void)peekConfiguration:(NSString *)arg1 user:(NSString *)arg2 diffToken:(NSString *)arg3 callback:(void (^)(PHTPhenotypeConfiguration *, NSError *))arg4;
- (void)commitConfiguration:(NSString *)arg1 user:(NSString *)arg2 diffToken:(NSString *)arg3 committer:(_Bool (^)(PHTPhenotypeConfiguration *, NSError *))arg4;
- (void)unregisterPackage:(NSString *)arg1 callback:(void (^)(NSError *))arg2;
- (void)registerPackage:(NSString *)arg1 logSources:(NSArray *)arg2 params:(NSData *)arg3 callback:(void (^)(NSError *))arg4;
- (void)registerPackage:(NSString *)arg1 version:(long long)arg2 logSources:(NSArray *)arg3 params:(NSData *)arg4 callback:(void (^)(NSError *))arg5;
- (void)syncExperimentsWithServer:(id <PHTPhenotypeAccountService>)arg1 callback:(void (^)(_Bool, NSError *))arg2;
- (void)setupForTesting;
@end

@protocol PHTPhenotypeAccount <NSObject>
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *obfuscatedGaiaID;
- (id <GTMFetcherAuthorizationProtocol>)authorization:(id *)arg1;
@end

@protocol PHTPhenotypeAccountService <NSObject>
@property(readonly, nonatomic) NSArray *PHTAccounts;
@end

@protocol PHTPhenotypeFlagsProtocol <NSObject>
- (NSData *)dataForFlagName:(NSString *)arg1 defaultValue:(NSData *)arg2;
- (NSNumber *)numberForFlagName:(NSString *)arg1 defaultValue:(NSNumber *)arg2;
- (NSString *)stringForFlagName:(NSString *)arg1 defaultValue:(NSString *)arg2;
- (id)valueForFlagName:(NSString *)arg1 withDefault:(id)arg2;
- (PHTPhenotypeExperimentTokens *)tokens;
- (void)update;
- (void)startLoading;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SLCoreAnimationBuildDelegate <NSObject>

@optional
- (void)squallCoreAnimation:(SLCoreAnimation *)arg1 willBuildAnimationsForLayer:(CALayer<SLLayerProtocol> *)arg2 withName:(NSString *)arg3;
- (void)squallCoreAnimationDidLayoutAnimationLayers:(SLCoreAnimation *)arg1;
- (CAAnimationGroup *)shouldAddAnimations:(CAAnimationGroup *)arg1 toLayer:(CALayer *)arg2 withName:(NSString *)arg3;
@end

@protocol SSOAuthorization <GTMFetcherAuthorizationProtocol>
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *refreshAccessTokenCallbackQueue;
@property(readonly, nonatomic) NSArray *scopes;
@property(readonly, nonatomic, getter=isLibraryAuth) _Bool libraryAuth;
@property(readonly, nonatomic) SSOIdentity *identity;
@property(readonly, nonatomic) NSDate *tokenExpirationDate;
@property(readonly, nonatomic) NSString *accessToken;
@property _Bool shouldAuthorizeAllRequests;
@property(readonly) _Bool canAuthorize;
- (void)refreshAccessTokenWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)authorizeRequest:(NSMutableURLRequest *)arg1 completionHandler:(void (^)(NSError *))arg2;

@optional
@property(readonly, nonatomic) unsigned long long delegationType;
@property(readonly, copy, nonatomic) NSString *delegateeUserID;
@end

@protocol SSOIdentity <NSObject>
- (id)identityPropertyForKey:(NSString *)arg1;
- (_Bool)canSelect;
- (NSString *)userFullName;
- (_Bool)hasValidAuth;
- (NSDate *)creationDate;
- (NSString *)hashedUserID;
- (NSString *)userID;
- (NSString *)userEmail;
@end

@protocol SSOProfileSource <NSObject>
@property(nonatomic) _Bool shouldCacheCoverImages;
@property(nonatomic) unsigned long long profileImageWidth;
@property(nonatomic) double profileRefreshInterval;
- (void)setProfileUpdateDate:(NSDate *)arg1 forIdentity:(id <SSOIdentity>)arg2;
- (_Bool)isStaleProfile:(NSDictionary *)arg1;
- (void)removeProfileFileCache;
- (void)removeCachedDataForIdentity:(id <SSOIdentity>)arg1;
- (NSDictionary *)cachedProfileForIdentity:(id <SSOIdentity>)arg1;
- (UIImage *)cachedCoverImageForIdentity:(id <SSOIdentity>)arg1;
- (UIImage *)cachedProfileImageForIdentity:(id <SSOIdentity>)arg1;
- (void)fetchProfileForIdentity:(id <SSOIdentity>)arg1 useCachedProfile:(_Bool)arg2 callback:(void (^)(SSOIdentity *, NSDictionary *, NSError *))arg3;
@end

@protocol SSOProfileSourceInternal <NSObject>
+ (UIImage *)defaultSizePlaceholderProfileImage;
- (UIImage *)defaultSizeProfileImageForIdentity:(SSOIdentity *)arg1;
- (UIImage *)disabledProfileImageForImage:(UIImage *)arg1;
@end

@protocol SSOService <NSObject>
@property(readonly, nonatomic) SSOConfiguration *configuration;
- (void)requestAccessTokenWithIdentity:(id <SSOIdentity>)arg1 scopes:(NSArray *)arg2 callback:(void (^)(NSString *, NSDate *, NSError *))arg3;
- (NSURL *)signOutURLWithTargetURL:(NSURL *)arg1 source:(NSString *)arg2;
- (void)requestTokenAuthURLForIdentity:(id <SSOIdentity>)arg1 targetURL:(NSURL *)arg2 service:(NSString *)arg3 source:(NSString *)arg4 callback:(void (^)(NSURL *, NSError *))arg5;
- (id <SSOAuthorization>)authorizationForUserID:(NSString *)arg1 ownerIdentity:(id <SSOIdentity>)arg2 delegationType:(unsigned long long)arg3 scopes:(NSArray *)arg4;
- (id <SSOAuthorization>)authorizationForIdentity:(id <SSOIdentity>)arg1 scopes:(NSArray *)arg2;
- (GTMSessionFetcher *)forgetIdentity:(id <SSOIdentity>)arg1 callback:(void (^)(NSError *))arg2;
- (void)clearFileCache;
- (void)reauthPromptShownForIdentity:(id <SSOIdentity>)arg1;
- (_Bool)shouldShowReauthPromptForIdentity:(id <SSOIdentity>)arg1;
- (_Bool)isValidUserID:(NSString *)arg1;
- (_Bool)isValidIdentity:(id <SSOIdentity>)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (void)markIdentityAsUnselected:(id <SSOIdentity>)arg1;
- (void)markIdentityAsSelected:(id <SSOIdentity>)arg1;
- (SSOIdentity *)defaultIdentity;
- (NSArray *)identitiesSortedForDisplay;
- (NSArray *)identitiesSortedBySelectionDate;
- (SSOIdentity *)identityForHashedUserID:(NSString *)arg1;
- (NSDictionary *)identitiesRequiringReauth;
- (NSDictionary *)identities;
- (id <SSOProfileSource>)profileSource;
@end

@protocol SSOServiceDeprecated <NSObject>
- (id <SSOAuthorization>)authorizationForIdentity:(id <SSOIdentity>)arg1 scopes:(NSArray *)arg2 error:(id *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
@end

@protocol SSOServiceInternal <NSObject>
@property(copy, nonatomic) CDUnknownBlockType safariSignInOpenURLHandler;
@property(nonatomic) __weak id <SSOServiceSafariBootstrapDelegate> safariBootstrapDelegate;
@property(readonly, nonatomic) SSOClientDataStore *clientDataStore;
@property(retain, nonatomic) SSOIdentity *userSelectedDefaultIdentity;
- (_Bool)writeNewlySignedInIdentity:(SSOIdentityPrivate *)arg1 outputIdentity:(id *)arg2 error:(id *)arg3;
- (GTMSessionFetcher *)forgetIdentity:(SSOIdentity *)arg1 revokeToken:(_Bool)arg2 callback:(void (^)(NSError *))arg3;
- (void)finishExternalSignInWithCallbackURL:(NSURL *)arg1 error:(NSError *)arg2;
- (void)prepareExternalSignInWithVerifier:(NSString *)arg1 expectedEmail:(NSString *)arg2 callback:(void (^)(SSOIdentity *, NSError *))arg3;
- (void)finishEmbeddedSignInWithAuth:(SSOLoginScopedAuthorization *)arg1 expectedEmail:(NSString *)arg2 error:(NSError *)arg3 callback:(void (^)(SSOIdentity *, NSError *))arg4;
- (void)cancelSignIn;
- (void)reauthenticateUser:(NSString *)arg1 userID:(NSString *)arg2 UIDelegate:(id <SSOServiceSignInUIDelegate>)arg3 callback:(void (^)(SSOIdentity *, NSError *))arg4;
- (void)signInWithUserEmail:(NSString *)arg1 UIDelegate:(id <SSOServiceSignInUIDelegate>)arg2 callback:(void (^)(SSOIdentity *, NSError *))arg3;
- (NSArray *)identitiesSortedForDefaultAccountSelection;
- (NSDictionary *)allIdentities;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didDiscardSceneSessions:(NSSet *)arg2;
- (UISceneConfiguration *)application:(UIApplication *)arg1 configurationForConnectingSceneSession:(UISceneSession *)arg2 options:(UISceneConnectionOptions *)arg3;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreSecureApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveSecureApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;
- (id)application:(UIApplication *)arg1 handlerForIntent:(INIntent *)arg2;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UIWindowSceneActivationConfiguration *)collectionView:(UICollectionView *)arg1 sceneActivationConfigurationForItemAtIndexPath:(NSIndexPath *)arg2 point:(struct CGPoint)arg3;
- (void)collectionView:(UICollectionView *)arg1 willEndContextMenuInteractionWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplayContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)collectionView:(UICollectionView *)arg1 willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionCommitAnimating>)arg3;
- (UITargetedPreview *)collectionView:(UICollectionView *)arg1 previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UITargetedPreview *)collectionView:(UICollectionView *)arg1 previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UIContextMenuConfiguration *)collectionView:(UICollectionView *)arg1 contextMenuConfigurationForItemAtIndexPath:(NSIndexPath *)arg2 point:(struct CGPoint)arg3;
- (void)collectionViewDidEndMultipleSelectionInteraction:(UICollectionView *)arg1;
- (void)collectionView:(UICollectionView *)arg1 didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSpringLoadItemAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 canEditItemAtIndexPath:(NSIndexPath *)arg2;
- (struct CGPoint)collectionView:(UICollectionView *)arg1 targetContentOffsetForProposedContentOffset:(struct CGPoint)arg2;
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 targetIndexPathForMoveOfItemFromOriginalIndexPath:(NSIndexPath *)arg2 atCurrentIndexPath:(NSIndexPath *)arg3 toProposedIndexPath:(NSIndexPath *)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 selectionFollowsFocusForItemAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)arg1;
- (void)collectionView:(UICollectionView *)arg1 didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 canFocusItemAtIndexPath:(NSIndexPath *)arg2;
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 performAction:(SEL)arg2;
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 canPerformAction:(SEL)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 didEndSendingToApplication:(NSString *)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 willBeginSendingToApplication:(NSString *)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)arg1;
- (UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)arg1;
- (struct CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)arg1;
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 willEndContextMenuInteractionWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionAnimating>)arg3;
- (void)tableView:(UITableView *)arg1 willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration *)arg2 animator:(id <UIContextMenuInteractionCommitAnimating>)arg3;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UITargetedPreview *)tableView:(UITableView *)arg1 previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration *)arg2;
- (UIContextMenuConfiguration *)tableView:(UITableView *)arg1 contextMenuConfigurationForRowAtIndexPath:(NSIndexPath *)arg2 point:(struct CGPoint)arg3;
- (void)tableViewDidEndMultipleSelectionInteraction:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldSpringLoadRowAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (_Bool)tableView:(UITableView *)arg1 selectionFollowsFocusForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (void)textFieldDidChangeSelection:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@interface _TtC5Swipe17SwipeGradientView : UIView
{
}

+ (Class)layerClass;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe26PhotoCaptureViewController : UIViewController
{
    // Error parsing type: , name: camera
    // Error parsing type: , name: $__lazy_storage_$_closeButton
    // Error parsing type: , name: $__lazy_storage_$_hqLogo
    // Error parsing type: , name: $__lazy_storage_$_roundLabel
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: $__lazy_storage_$_capturePreviewView
    // Error parsing type: , name: $__lazy_storage_$_captureButton
    // Error parsing type: , name: $__lazy_storage_$_uploadButton
    // Error parsing type: , name: $__lazy_storage_$_camFlipButton
    // Error parsing type: , name: $__lazy_storage_$_photoPreviewView
    // Error parsing type: , name: $__lazy_storage_$_timerOverlay
    // Error parsing type: , name: $__lazy_storage_$_retakeButton
    // Error parsing type: , name: $__lazy_storage_$_submitButton
    // Error parsing type: , name: $__lazy_storage_$_submitButtonStack
    // Error parsing type: , name: $__lazy_storage_$_mainStack
    // Error parsing type: , name: $__lazy_storage_$_cameraPermissionsOverlayView
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: $__lazy_storage_$_menuContainer
    // Error parsing type: , name: animateInCmd
    // Error parsing type: , name: cameraCapturePhoto
    // Error parsing type: , name: didCapture
    // Error parsing type: , name: dismissCmd
    // Error parsing type: , name: imagePicker
    // Error parsing type: , name: photoUpload
    // Error parsing type: , name: pipLayoutGuide
    // Error parsing type: , name: startTime
    // Error parsing type: , name: wasDismissed
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe19OptInViewController : _TtC5Swipe24BottomCardViewController
{
    // Error parsing type: , name: dismissCmd
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: viewConfig
    // Error parsing type: , name: didOptIn
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: startTime
    // Error parsing type: , name: $__lazy_storage_$_timerButton
    // Error parsing type: , name: wasDismissed
}

- (void).cxx_destruct;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

@interface _TtC5Swipe6Socket : NSObject <NSObject>
{
    // Error parsing type: , name: disconnected
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: messageQueue
    // Error parsing type: , name: socket
    // Error parsing type: , name: outgoingMessages
    // Error parsing type: , name: incomingMessagesSubject
}

- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe26PhotoResultsViewController : UIViewController
{
    // Error parsing type: , name: avatarSize
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: miniPlayerEnabled
    // Error parsing type: , name: photoResults
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
    // Error parsing type: , name: $__lazy_storage_$_rank
    // Error parsing type: , name: $__lazy_storage_$_avatar
    // Error parsing type: , name: $__lazy_storage_$_usernameLabel
    // Error parsing type: , name: $__lazy_storage_$_heartCount
    // Error parsing type: , name: $__lazy_storage_$_heartImage
    // Error parsing type: , name: $__lazy_storage_$_heartStack
    // Error parsing type: , name: $__lazy_storage_$_photoView
    // Error parsing type: , name: $__lazy_storage_$_mainStack
    // Error parsing type: , name: $__lazy_storage_$_photoContainer
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: pipLayoutGuide
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe18DeckViewController : UIViewController
{
    // Error parsing type: , name: cardCapacity
    // Error parsing type: , name: cardOffset
    // Error parsing type: , name: cardsInserted
    // Error parsing type: , name: cardSize
    // Error parsing type: , name: cardViewControllers
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: driver
    // Error parsing type: , name: photos
    // Error parsing type: , name: rateNayButtonTapped
    // Error parsing type: , name: rateYayButtonTapped
    // Error parsing type: , name: reportPhoto
    // Error parsing type: , name: setDeckInteraction
    // Error parsing type: , name: swipeBegan
    // Error parsing type: , name: swipeCancelled
    // Error parsing type: , name: swipedLeft
    // Error parsing type: , name: swipedRight
    // Error parsing type: , name: swipeLeftAnimationCompleted
    // Error parsing type: , name: swipeLeftProgress
    // Error parsing type: , name: swipeRightProgress
    // Error parsing type: , name: swipeRightAnimationCompleted
    // Error parsing type: , name: didPressSettings
    // Error parsing type: , name: doubleTappedCard
    // Error parsing type: , name: readyToShow
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe23PhotoVoteViewController : UIViewController
{
    // Error parsing type: , name: deckInteractionEnabled
    // Error parsing type: , name: $__lazy_storage_$_deckViewController
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: reportBag
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
    // Error parsing type: , name: $__lazy_storage_$_roundLabel
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: photos
    // Error parsing type: , name: $__lazy_storage_$_labelStack
    // Error parsing type: , name: nayButton
    // Error parsing type: , name: photoLabel
    // Error parsing type: , name: photoTally
    // Error parsing type: , name: photoVote
    // Error parsing type: , name: popCard
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: socketMessages
    // Error parsing type: , name: swipeLeftAnimationCompleted
    // Error parsing type: , name: swipeRightAnimationCompleted
    // Error parsing type: , name: reportPhoto
    // Error parsing type: , name: yayButton
    // Error parsing type: , name: show
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe14GradientButton : _TtC5Swipe6Button
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe6Banner : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_label
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;

@end

@interface _TtC5Swipe6Button : UIButton
{
    // Error parsing type: , name: isRounded
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe18CardViewController : UIViewController
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: driver
    // Error parsing type: , name: image
    // Error parsing type: , name: rateNaySubject
    // Error parsing type: , name: rateYaySubject
    // Error parsing type: , name: swipeBegan
    // Error parsing type: , name: swipeCancelled
    // Error parsing type: , name: swipedLeft
    // Error parsing type: , name: swipedRight
    // Error parsing type: , name: swipeLeftProgress
    // Error parsing type: , name: swipeRightProgress
    // Error parsing type: , name: swipeViewController
    // Error parsing type: , name: $__lazy_storage_$_activityIndicator
    // Error parsing type: , name: standInBlackValue
    // Error parsing type: , name: $__lazy_storage_$_imageView
    // Error parsing type: , name: $__lazy_storage_$_yayImageView
    // Error parsing type: , name: $__lazy_storage_$_friendAvatar
    // Error parsing type: , name: $__lazy_storage_$_yayOverlayView
    // Error parsing type: , name: $__lazy_storage_$_nayImageView
    // Error parsing type: , name: $__lazy_storage_$_nayOverlayView
    // Error parsing type: , name: photo
    // Error parsing type: , name: $__lazy_storage_$_threeDots
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe28CameraPermissionsOverlayView : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_title
    // Error parsing type: , name: $__lazy_storage_$_body
    // Error parsing type: , name: $__lazy_storage_$_button
    // Error parsing type: , name: $__lazy_storage_$_bufferA
    // Error parsing type: , name: $__lazy_storage_$_bufferB
    // Error parsing type: , name: $__lazy_storage_$_stack
    // Error parsing type: , name: $__lazy_storage_$_container
    // Error parsing type: , name: disposeBag
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _TtC5Swipe18SwipeImageRenderer : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Swipe9TextField : UITextField
{
    // Error parsing type: , name: underline
}

- (void).cxx_destruct;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)rightViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe18FinalistAvatarView : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_avatar
    // Error parsing type: , name: $__lazy_storage_$_checkMark
    // Error parsing type: , name: $__lazy_storage_$_heartView
    // Error parsing type: , name: $__lazy_storage_$_username
    // Error parsing type: , name: $__lazy_storage_$_stack
    // Error parsing type: , name: submitted
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: finalist
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe20PlaceHolderImageView : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_imageView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe17EpisodeWinnerCell : UICollectionViewCell
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: avatarSize
    // Error parsing type: , name: $__lazy_storage_$_imageViews
    // Error parsing type: , name: $__lazy_storage_$_avatar
    // Error parsing type: , name: $__lazy_storage_$_rank
    // Error parsing type: , name: $__lazy_storage_$_usernameLabel
    // Error parsing type: , name: $__lazy_storage_$_heartCount
    // Error parsing type: , name: $__lazy_storage_$_smallImageStack
    // Error parsing type: , name: $__lazy_storage_$_imageStack
    // Error parsing type: , name: $__lazy_storage_$_mainStack
    // Error parsing type: , name: $__lazy_storage_$_instagramButton
    // Error parsing type: , name: $__lazy_storage_$_background
}

- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)traitCollectionDidChange:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe28EpisodeWinnersViewController : UIViewController
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: episodeWinners
    // Error parsing type: , name: gameWillDismiss
    // Error parsing type: , name: miniPlayerEnabled
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: photoPermissions
    // Error parsing type: , name: sharePublisher
    // Error parsing type: , name: shareToInstagramPublisher
    // Error parsing type: , name: showInstagramProfilePublisher
    // Error parsing type: , name: viewDidAppearPublisher
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
    // Error parsing type: , name: documentController
    // Error parsing type: , name: dualBanner
    // Error parsing type: , name: $__lazy_storage_$_collectionView
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe24SwipeActivityImageSource : NSObject <UIActivityItemSource>
{
    // Error parsing type: , name: image
}

- (void).cxx_destruct;
- (id)init;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe32SwipeFinalRoundResultsTextSource : NSObject <UIActivityItemSource>
{
}

- (id)init;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe26SwipeYourResultsTextSource : NSObject <UIActivityItemSource>
{
}

- (id)init;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

@end

@interface _TtC5SwipeP33_8926241E1492B1FFF41B0C21DD8EFCC619TouchControlledView : UIView
{
    // Error parsing type: , name: touchArea
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe18ChatViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    // Error parsing type: , name: alphaAnimationKey
    // Error parsing type: , name: chatInputBecameFirstResponder
    // Error parsing type: , name: chatIsExpanded
    // Error parsing type: , name: keyboardIsExpanded
    // Error parsing type: , name: chatLayoutGuide
    // Error parsing type: , name: clearChatInputSubject
    // Error parsing type: , name: data
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: keyboardConstraint
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: socketMessages
    // Error parsing type: , name: $__lazy_storage_$_expandToggleButton
    // Error parsing type: , name: $__lazy_storage_$_chatButton
    // Error parsing type: , name: $__lazy_storage_$_stackMask
    // Error parsing type: , name: $__lazy_storage_$_stackContainer
    // Error parsing type: , name: $__lazy_storage_$_tableView
    // Error parsing type: , name: $__lazy_storage_$_sendButton
    // Error parsing type: , name: messageTextFieldContainer
    // Error parsing type: , name: $__lazy_storage_$_unreadMessageButton
    // Error parsing type: , name: $__lazy_storage_$_messageTextField
    // Error parsing type: , name: textFieldDidReturnSubject
    // Error parsing type: , name: unreadContentHeightSubject
    // Error parsing type: , name: visibleIndexPaths
    // Error parsing type: , name: messageFieldOffset
    // Error parsing type: , name: keyboardOffset
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLayoutSubviews;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe29FinalRoundIntroViewController : UIViewController
{
    // Error parsing type: , name: $__lazy_storage_$_videoContainer
    // Error parsing type: , name: $__lazy_storage_$_videoPlayer
    // Error parsing type: , name: $__lazy_storage_$_mask
    // Error parsing type: , name: $__lazy_storage_$_middleContainer
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: titleString
    // Error parsing type: , name: chatLayoutGuide
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: finalistIntro
    // Error parsing type: , name: finalists
    // Error parsing type: , name: pipLayoutGuide
    // Error parsing type: , name: commands
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

@interface _TtC5Swipe14BackgroundView : UIView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _TtC5SwipeP33_05480A08BD1555F366A0271E892615D011BundleClass : _TtCs12_SwiftObject
{
}

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe6Camera : NSObject <AVCapturePhotoCaptureDelegate>
{
    // Error parsing type: , name: authorizationStatus
    // Error parsing type: , name: captureSession
    // Error parsing type: , name: captureSessionConfigured
    // Error parsing type: , name: captureSessionRunning
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: photoCaptured
    // Error parsing type: , name: photoOutput
    // Error parsing type: , name: sampleQueue
    // Error parsing type: , name: scheduler
    // Error parsing type: , name: stopTriggered
    // Error parsing type: , name: videoDeviceInput
}

- (void).cxx_destruct;
- (id)init;
- (void)captureOutput:(id)arg1 didFinishProcessingPhoto:(id)arg2 error:(id)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe11ProgressBar : UIView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe15ChatMessageCell : UITableViewCell
{
    // Error parsing type: , name: avatarView
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: messageLabel
}

- (void).cxx_destruct;
- (void)prepareForReuse;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _TtC5Swipe23SwipeGameViewController : UIViewController
{
    // Error parsing type: , name: $__lazy_storage_$_chatViewController
    // Error parsing type: , name: $__lazy_storage_$_hqLogo
    // Error parsing type: , name: $__lazy_storage_$_userButton
    // Error parsing type: , name: $__lazy_storage_$_blurView
    // Error parsing type: , name: $__lazy_storage_$_blurTint
    // Error parsing type: , name: $__lazy_storage_$_menuContainerView
    // Error parsing type: , name: $__lazy_storage_$_pipContainer
    // Error parsing type: , name: $__lazy_storage_$_pipView
    // Error parsing type: , name: $__lazy_storage_$_videoView
    // Error parsing type: , name: $__lazy_storage_$_coinBalance
    // Error parsing type: , name: banner
    // Error parsing type: , name: layoutStack
    // Error parsing type: , name: contentView
    // Error parsing type: , name: fullContentViewBack
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: driver
    // Error parsing type: , name: fullContentView
    // Error parsing type: , name: keyboardConstraint
    // Error parsing type: , name: $__lazy_storage_$_hlsPlayer
    // Error parsing type: , name: pipLayoutGuide
    // Error parsing type: , name: show
    // Error parsing type: , name: socket
    // Error parsing type: , name: addLayoutConfigurationPublisher
    // Error parsing type: , name: removeLayoutConfigurationPublisher
    // Error parsing type: , name: layoutStackPublisher
    // Error parsing type: , name: presentCoinsAnimationSubject
    // Error parsing type: , name: purchaseRequestSubject
    // Error parsing type: , name: shouldDismiss
    // Error parsing type: , name: $__lazy_storage_$_transitionManager
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe24BottomCardViewController : UIViewController
{
    // Error parsing type: , name: $__lazy_storage_$_topRoundedEdge
    // Error parsing type: , name: $__lazy_storage_$_backgroundContainer
    // Error parsing type: , name: chatLayoutGuide
    // Error parsing type: , name: $__lazy_storage_$_roundLabel
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: roundString
    // Error parsing type: , name: titleString
    // Error parsing type: , name: $__lazy_storage_$_mainStack
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe25PlaceHolderLikedImageView : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_imageView
    // Error parsing type: , name: $__lazy_storage_$_heartAndLiked
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe20EpisodeWinnerYouCell : UICollectionViewCell
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: avatarSize
    // Error parsing type: , name: $__lazy_storage_$_imageViews
    // Error parsing type: , name: $__lazy_storage_$_avatar
    // Error parsing type: , name: $__lazy_storage_$_usernameLabel
    // Error parsing type: , name: $__lazy_storage_$_heartCount
    // Error parsing type: , name: $__lazy_storage_$_imageStackA
    // Error parsing type: , name: $__lazy_storage_$_imageStackB
    // Error parsing type: , name: $__lazy_storage_$_imageMainStack
    // Error parsing type: , name: $__lazy_storage_$_mainStack
    // Error parsing type: , name: $__lazy_storage_$_background
    // Error parsing type: , name: $__lazy_storage_$_shareSheetButton
    // Error parsing type: , name: $__lazy_storage_$_shareButton
}

- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)traitCollectionDidChange:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe25YourResultsViewController : UIViewController
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: miniPlayerEnabled
    // Error parsing type: , name: photoResults
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
    // Error parsing type: , name: $__lazy_storage_$_roundLabel
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: $__lazy_storage_$_labelStack
    // Error parsing type: , name: $__lazy_storage_$_photoView
    // Error parsing type: , name: $__lazy_storage_$_heartCount
    // Error parsing type: , name: $__lazy_storage_$_heartImage
    // Error parsing type: , name: $__lazy_storage_$_avatar
    // Error parsing type: , name: $__lazy_storage_$_usernameLabel
    // Error parsing type: , name: $__lazy_storage_$_bufferView
    // Error parsing type: , name: $__lazy_storage_$_shareButton
    // Error parsing type: , name: $__lazy_storage_$_ratingStack
    // Error parsing type: , name: $__lazy_storage_$_shareSheetButton
    // Error parsing type: , name: documentController
    // Error parsing type: , name: pipLayoutGuide
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe19SwipeViewController : UIViewController
{
    // Error parsing type: , name: contentView
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: driver
    // Error parsing type: , name: rateLeft
    // Error parsing type: , name: rateRight
    // Error parsing type: , name: swipableBounds
    // Error parsing type: , name: swipableInsets
    // Error parsing type: , name: swipeBegan
    // Error parsing type: , name: swipeCancelled
    // Error parsing type: , name: swipedLeft
    // Error parsing type: , name: swipedRight
    // Error parsing type: , name: swipeLeftProgress
    // Error parsing type: , name: swipeRightProgress
    // Error parsing type: , name: wasReportedPublisher
    // Error parsing type: , name: doubleTap
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe10AvatarView : UIView
{
    // Error parsing type: , name: borderLayer
    // Error parsing type: , name: imageView
    // Error parsing type: , name: maskLayer
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe7PipView : UIView
{
    // Error parsing type: , name: aspectRatio
    // Error parsing type: , name: backgroundRingLayer
    // Error parsing type: , name: fillRingLayer
    // Error parsing type: , name: videoContainer
    // Error parsing type: , name: videoView
    // Error parsing type: , name: hasTimer
    // Error parsing type: , name: videoViewHeightConstraint
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe25AVCaptureVideoPreviewView : UIView
{
}

+ (Class)layerClass;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _TtC5Swipe13ChatTextField : UITextField
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe16PhotoLibraryCell : UICollectionViewCell
{
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: imageView
}

- (void).cxx_destruct;
- (void)prepareForReuse;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe10DualBanner : UIView
{
    // Error parsing type: , name: $__lazy_storage_$_label
    // Error parsing type: , name: $__lazy_storage_$_label2
    // Error parsing type: , name: showing
    // Error parsing type: , name: showFirst
    // Error parsing type: , name: $__lazy_storage_$_textWidth1
    // Error parsing type: , name: $__lazy_storage_$_textWidth2
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe25PhotoUploadViewController : UIViewController
{
    // Error parsing type: , name: cancelPhotosTriggered
    // Error parsing type: , name: chatLayoutGuide
    // Error parsing type: , name: contentViewContainer
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: pipLayoutGuide
    // Error parsing type: , name: recaptureFromFailedUpload
    // Error parsing type: , name: retakeTriggered
    // Error parsing type: , name: captureConcluded
    // Error parsing type: , name: photoUpload
    // Error parsing type: , name: socketCommands
    // Error parsing type: , name: secondsRemaining
    // Error parsing type: , name: startTime
    // Error parsing type: , name: show
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
    // Error parsing type: , name: socketMessages
    // Error parsing type: , name: purchasePublisher
    // Error parsing type: , name: managedVCs
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe33FinalistWalkthroughViewController : UIViewController
{
    // Error parsing type: , name: $__lazy_storage_$_roundLabel
    // Error parsing type: , name: $__lazy_storage_$_titleLabel
    // Error parsing type: , name: $__lazy_storage_$_labelStack
    // Error parsing type: , name: $__lazy_storage_$_photoView
    // Error parsing type: , name: $__lazy_storage_$_photoContainer
    // Error parsing type: , name: $__lazy_storage_$_usernameAvatar
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: commands
    // Error parsing type: , name: finalistWalkthrough
    // Error parsing type: , name: number
    // Error parsing type: , name: showMiniPlayer
    // Error parsing type: , name: layoutConfigPublisher
    // Error parsing type: , name: layoutConfigRemovePublisher
}

- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe17StatusMessageCell : UITableViewCell
{
    // Error parsing type: , name: messageLabel
    // Error parsing type: , name: statusIndicatorView
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe9RoundView : UIView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe18HeartAnimationView : UIView
{
    // Error parsing type: , name: startPosition
}

- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _TtC5Swipe31PhotoUploadStatusViewController : _TtC5Swipe24BottomCardViewController
{
    // Error parsing type: , name: countdownData
    // Error parsing type: , name: dismissCommand
    // Error parsing type: , name: buttonPublisher
    // Error parsing type: , name: recapturePublisher
    // Error parsing type: , name: disposeBag
    // Error parsing type: , name: photoUpload
    // Error parsing type: , name: photo
    // Error parsing type: , name: secondsRemaining
    // Error parsing type: , name: startTime
    // Error parsing type: , name: wasDismissed
    // Error parsing type: , name: status
    // Error parsing type: , name: purchasePublisher
    // Error parsing type: , name: show
    // Error parsing type: , name: $__lazy_storage_$_numberLabel
    // Error parsing type: , name: $__lazy_storage_$_feedbackImage
    // Error parsing type: , name: $__lazy_storage_$_timerButton
    // Error parsing type: , name: $__lazy_storage_$_purchaseButton
    // Error parsing type: , name: $__lazy_storage_$_purchaseDescription
    // Error parsing type: , name: purchaseDescriptionContainer
    // Error parsing type: , name: animateInCmd
}

- (void).cxx_destruct;
- (void)savedImage:(id)arg1 error:(id)arg2 context:(void *)arg3;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

@end

@interface FIRAAdExposureReporter : APMAdExposureReporter
{
}

@end

@interface FIRAConditionalUserProperty : APMConditionalUserProperty
{
}

@end

@interface FIRAConditionalUserPropertyController : APMConditionalUserPropertyController
{
}

@end

@interface FIRAEvent : APMEvent <NSCopying>
{
}

@end

@interface FIRAIdentifiers : APMIdentifiers
{
}

@end

@interface FIRAMeasurement : APMMeasurement
{
}

+ (id)sharedInstance;
- (void)userAttributeWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;

@end

@interface FIRAnalytics : NSObject
{
}

+ (double)loadTimestamp;
+ (void)unsuspendOperationQueue;
+ (void)queueOperationWithBlock:(CDUnknownBlockType)arg1;
+ (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
+ (void)notCalled;
+ (void)observeFirebaseInstallationIDChanges;
+ (void)updateFirebaseInstallationID;
+ (void)handleUserActivity:(id)arg1;
+ (void)handleOpenURL:(id)arg1;
+ (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)startWithConfiguration:(id)arg1 options:(id)arg2;
+ (void)setDefaultEventParameters:(id)arg1;
+ (void)userPropertiesIncludingInternal:(_Bool)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)setOpenURLListener:(CDUnknownBlockType)arg1;
+ (void)notifyEventListeners:(id)arg1;
+ (void)removeLogEventListener:(id)arg1;
+ (id)addLogEventListener:(CDUnknownBlockType)arg1;
+ (void)setLogEventInterceptor:(CDUnknownBlockType)arg1;
+ (id)sharedInstance;
+ (void)setConsent:(id)arg1;
+ (void)resetAnalyticsData;
+ (id)appInstanceID;
+ (void)setSessionTimeoutInterval:(double)arg1;
+ (void)setAnalyticsCollectionEnabled:(_Bool)arg1;
+ (void)setScreenName:(id)arg1 screenClass:(id)arg2;
+ (void)setUserID:(id)arg1;
+ (void)setUserPropertyString:(id)arg1 forName:(id)arg2;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (id)topLevelVersion;
+ (void)initialize;
- (void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (id)initInternal;

@end

@interface FIRAnalyticsConnector : NSObject <FIRLibrary, FIRAnalyticsInterop>
{
    FIRAnalytics *_analytics;
    id _logEventListener;
    NSMutableDictionary *_listeners;
}

+ (id)componentsToRegister;
+ (void)load;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *listeners; // @synthesize listeners=_listeners;
@property(retain, nonatomic) id logEventListener; // @synthesize logEventListener=_logEventListener;
@property(nonatomic) __weak FIRAnalytics *analytics; // @synthesize analytics=_analytics;
- (id)eventWithOrigin:(id)arg1 eventName:(id)arg2 params:(id)arg3;
- (id)eventFromDictionary:(id)arg1;
- (void)unregisterAnalyticsListenerWithOrigin:(id)arg1;
- (void)registerAnalyticsListener:(id)arg1 withOrigin:(id)arg2;
- (id)simplifiedParametersFromEventParameters:(id)arg1;
- (void)setUserPropertyWithOrigin:(id)arg1 name:(id)arg2 value:(id)arg3;
- (void)setConditionalUserProperty:(id)arg1;
- (long long)maxUserProperties:(id)arg1;
- (void)getUserPropertiesWithCallback:(CDUnknownBlockType)arg1;
- (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (id)conditionalUserProperties:(id)arg1 propertyNamePrefix:(id)arg2;
- (void)clearConditionalUserProperty:(id)arg1 forOrigin:(id)arg2 clearEventName:(id)arg3 clearEventParameters:(id)arg4;

@end

@interface FIRAScreenViewReporter : APMScreenViewReporter
{
}

+ (id)sharedInstance;

@end

@interface FIRASessionReporter : APMSessionReporter
{
}

@end

@interface FIRAUserAttribute : APMUserAttribute
{
}

@end

@interface FIRAValue : APMValue
{
}

@end

@interface FIRConnectorUtils : NSObject
{
}

+ (_Bool)isUserPropertyAllowed:(id)arg1 withOrigin:(id)arg2;
+ (_Bool)shouldLogEventWithName:(id)arg1 parameters:(id)arg2;
+ (_Bool)isEventNameAllowedForListeners:(id)arg1;
+ (_Bool)isListenerOriginAllowed:(id)arg1;
+ (_Bool)isAppOrigin:(id)arg1;
+ (_Bool)isOriginAllowed:(id)arg1;
+ (id)hiddenEventNames;
+ (id)blacklistedUserPropertyPatterns;
+ (id)blacklistedUserProperties;
+ (id)blacklistedParameters;
+ (id)blacklistedEventNames;
+ (id)blacklistedOrigins;
+ (id)allowedListenerOrigins;

@end

@interface PodsDummy_FirebaseAnalytics : NSObject
{
}

@end

@interface APMAdExposureReporter : NSObject
{
    NSMutableDictionary *_adUnitCounts;
    NSMutableDictionary *_adUnitStartTimes;
    double _adExposureStartTime;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)handleEngagementTimer:(id)arg1;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)logAdUnitExposureEventOnSerialQueueWithID:(id)arg1 endTime:(double)arg2 screenParameters:(id)arg3;
- (void)logAdExposureEventOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsWithScreenParameters:(id)arg1;
- (void)updateStartTimesOnSerialQueue:(double)arg1;
- (double)currentTime;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface APMAEU : NSObject
{
}

+ (id)sharedApplication;
+ (_Bool)isAEX;
+ (_Bool)isOSSupported;
+ (id)systemVersion;
+ (id)deviceModel;
+ (_Bool)isNOD;
+ (_Bool)isASRS;
+ (_Bool)isFAS;
+ (id)appStoreRURL;

@end

@interface APMAlarm : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timer;
    NSString *_name;
    NSDate *_scheduledTimestamp;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSDate *scheduledTimestamp; // @synthesize scheduledTimestamp=_scheduledTimestamp;
- (void)dealloc;
- (_Bool)hasActiveTimer;
- (void)cancel;
- (void)runAfterDelay:(double)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithDispatchQueue:(id)arg1 name:(id)arg2;

@end

@interface APMAnalytics : NSObject
{
}

+ (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
+ (void)maybeEnableTagManager;
+ (void)notifyEventListenersOnSerialQueue:(id)arg1;
+ (void)notifyEventListeners:(id)arg1;
+ (void)removeLogEventListener:(id)arg1;
+ (id)addLogEventListener:(CDUnknownBlockType)arg1;
+ (void)setLogEventInterceptor:(CDUnknownBlockType)arg1;
+ (void)userPropertiesIncludingInternal:(_Bool)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)removeInternalUserAttributeForName:(id)arg1;
+ (void)setUserAttributeNumber:(id)arg1 forName:(id)arg2;
+ (void)removeUserAttributeForName:(id)arg1;
+ (void)setUserID:(id)arg1;
+ (void)setUserPropertyString:(id)arg1 forName:(id)arg2;
+ (void)setOpenURLListener:(CDUnknownBlockType)arg1;
+ (void)handleUserActivity:(id)arg1;
+ (void)handleOpenURL:(id)arg1;
+ (void)createAppDelegateProxy;
+ (void)setDefaultEventParameters:(id)arg1;
+ (void)logEventOnSerialQueueWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7 addedScreenParameters:(id)arg8;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 timestamp:(double)arg3 parameters:(id)arg4;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)handleSetEnabled:(id)arg1;
+ (void)observeNotificationsForAnalyticsConfiguration:(id)arg1;
+ (void)setLoadTimestamp:(double)arg1;
+ (double)loadTimestamp;
+ (void)clearConsent;
+ (void)removeDeferredResetOnDeniedConsent;
+ (void)removeStartUpConsentSettings;
+ (id)deferredResetOnDeniedConsent;
+ (id)consentSettings1PStart;
+ (id)consentSettings1P;
+ (id)consentSettings3P;
+ (void)setConsent:(id)arg1 forKey:(id)arg2;
+ (void)setConsent:(id)arg1;
+ (long long)persistedConsentSource;
+ (void)persistConsentSettings:(id)arg1 source:(long long)arg2;
+ (void)loadPersistedConsentSettings;
+ (id)appInstanceID;
+ (void)setScreenName:(id)arg1 screenClass:(id)arg2;
+ (void)setAnalyticsEnabled:(_Bool)arg1 persistSetting:(_Bool)arg2;
+ (void)setAnalyticsEnabled:(_Bool)arg1;
+ (_Bool)isCurrentQueueSerialQueue;
+ (void)unsuspendOperationQueue;
+ (void)queueOperationWithBlock:(CDUnknownBlockType)arg1;
+ (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
+ (id)queue;
+ (void)setDeferredAnalyticsCollection:(id)arg1;
+ (id)deferredAnalyticsCollection;
+ (void)setAppInstanceIDAfterReset:(id)arg1;
+ (id)appInstanceIDAfterReset;
+ (void)setNeedFirstOpenAfterReset:(_Bool)arg1;
+ (void)removeNeedFirstOpenAfterReset;
+ (_Bool)needFirstOpenAfterReset;
+ (void)setResetRetryCount:(long long)arg1;
+ (long long)resetRetryCount;
+ (void)resetAnalyticsData;
+ (void)startWithAppID:(id)arg1 origin:(id)arg2 options:(id)arg3;
+ (id)sharedInstance;
+ (void)initialize;
+ (void)load;
- (void)dealloc;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3;

@end

@interface APMAppDelegateInterceptor : NSObject <UIApplicationDelegate>
{
}

+ (id)sharedInstance;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

@interface APMAppMetadata : NSObject
{
    int _lastBundleIndex;
    double _lastBundleStartTimestamp;
    double _lastBundleEndTimestamp;
}

@property(nonatomic) double lastBundleEndTimestamp; // @synthesize lastBundleEndTimestamp=_lastBundleEndTimestamp;
@property(nonatomic) double lastBundleStartTimestamp; // @synthesize lastBundleStartTimestamp=_lastBundleStartTimestamp;
@property(readonly, nonatomic) int lastBundleIndex; // @synthesize lastBundleIndex=_lastBundleIndex;
- (void)incrementLastBundleIndex;
- (id)initWithLastBundleIndex:(int)arg1 lastBundleStartTimestamp:(double)arg2 lastBundleEndTimestamp:(double)arg3;

@end

@interface APMASIdentifierWrapper : NSObject
{
    id _sharedIdentifierManager;
}

+ (id)sharedInstance;
+ (_Bool)iOS14OrAbove;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
@property(readonly, nonatomic) NSString *resettableDeviceIDStringIfAvailable;
- (id)initWithIdentifierManager:(id)arg1;

@end

@interface APMASLLogger : NSObject <APMLogging>
{
}

+ (long long)GULLoggerLevelFromLogLevel:(long long)arg1;
- (void)logMessage:(id)arg1 logTag:(id)arg2 messageCode:(long long)arg3 withLogLevel:(long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMAudience : NSObject
{
    APMDatabase *_database;
}

+ (id)updatedFilterResultWithFilterID:(int)arg1 audienceID:(int)arg2 currentFilterResult:(id)arg3 newEvaluationResult:(id)arg4 audienceTimestampsCache:(id)arg5;
+ (_Bool)isFilterResult:(id)arg1 trueForFilterID:(int)arg2;
- (void).cxx_destruct;
- (_Bool)clearEvaluationResultsForSessionScopedFilters;
- (_Bool)resultsForBundling:(id *)arg1;
- (_Bool)maybeDeleteStaleFilterResults:(id)arg1;
- (_Bool)updateAudiences:(id)arg1;
- (_Bool)evaluateFiltersForNanoUserProperty:(id)arg1 audienceTimestampsCache:(id)arg2 evaluationTime:(id)arg3;
- (_Bool)evaluateFiltersForUserProperty:(id)arg1 audienceTimestampsCache:(id)arg2 evaluationTimestamp:(double)arg3;
- (_Bool)evaluateFiltersForEventName:(id)arg1 eventParameters:(id)arg2 eventAggregates:(id)arg3 eventTimestamp:(double)arg4 audienceTimestampsCache:(id)arg5;
- (_Bool)evaluateFiltersForEvent:(id)arg1 eventAggregates:(id)arg2 audienceTimestampsCache:(id)arg3;
- (id)initWithDatabase:(id)arg1;

@end

@interface APMAudienceComparisonValues : NSObject
{
    _Bool _valid;
    NSDecimalNumber *_comparisonValue;
    NSDecimalNumber *_maxComparisonValue;
    NSDecimalNumber *_minComparisonValue;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(retain, nonatomic) NSDecimalNumber *minComparisonValue; // @synthesize minComparisonValue=_minComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *maxComparisonValue; // @synthesize maxComparisonValue=_maxComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *comparisonValue; // @synthesize comparisonValue=_comparisonValue;

@end

@interface APMAudienceTimestampsCache : NSObject
{
    NSMutableDictionary *_cachedDynamicFilterEvaluationTimestamps;
    NSMutableDictionary *_cachedSequenceEvaluationTimestamps;
}

- (void).cxx_destruct;
- (id)sequenceTimestampsForAudienceID:(id)arg1;
- (id)dynamicTimestampsForAudienceID:(id)arg1;
- (void)addEvaluationTimestamp:(double)arg1 forFilter:(id)arg2;
- (void)populateCachedTimestamps:(id)arg1 audienceID:(id)arg2;
- (id)init;

@end

@interface APMBackwardCompatibilityUtil : NSObject
{
}

+ (id)sharedInstance;
+ (_Bool)disableGMRMeasurement;
- (void)setIsEnabled:(_Bool)arg1;

@end

@interface APMConditionalUserProperty : NSObject <NSCopying>
{
    _Bool _active;
    NSString *_name;
    NSString *_origin;
    APMValue *_value;
    NSString *_triggerEventName;
    double _triggerTimeout;
    double _timeToLive;
    APMEvent *_triggeredEvent;
    APMEvent *_timedOutEvent;
    APMEvent *_expiredEvent;
    double _creationTimestamp;
    double _triggeredTimestamp;
}

- (void).cxx_destruct;
@property(nonatomic) double triggeredTimestamp; // @synthesize triggeredTimestamp=_triggeredTimestamp;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) double creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(copy, nonatomic) APMEvent *expiredEvent; // @synthesize expiredEvent=_expiredEvent;
@property(copy, nonatomic) APMEvent *timedOutEvent; // @synthesize timedOutEvent=_timedOutEvent;
@property(copy, nonatomic) APMEvent *triggeredEvent; // @synthesize triggeredEvent=_triggeredEvent;
@property(nonatomic) double timeToLive; // @synthesize timeToLive=_timeToLive;
@property(nonatomic) double triggerTimeout; // @synthesize triggerTimeout=_triggerTimeout;
@property(copy, nonatomic) NSString *triggerEventName; // @synthesize triggerEventName=_triggerEventName;
@property(copy, nonatomic) APMValue *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface APMConditionalUserPropertyController : NSObject
{
}

+ (id)sharedInstance;
- (void)removeConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (void)setConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (id)conditionalUserPropertiesWithNamePrefix:(id)arg1 filterByOrigin:(id)arg2;
- (void)clearConditionalUserPropertyWithClearEvent:(id)arg1 forName:(id)arg2;
- (void)setConditionalUserProperty:(id)arg1 forName:(id)arg2;
- (id)updateConditionalUserPropertiesWithEventNameOnWorkerQueue:(id)arg1;
- (_Bool)removeExpiredCUPWithExpiredEvents:(id *)arg1;
- (_Bool)removeTimedOutCUPWithTimedOutEvents:(id *)arg1;
- (id)processEventOnWorkerQueue:(id)arg1;

@end

@interface APMConsentSettingsUtil : NSObject
{
}

+ (id)description;
+ (id)consentSignals;
+ (void)updateSettings:(id)arg1;
+ (_Bool)isConsentSourceHigherPriority:(long long)arg1;
+ (_Bool)didWithdrawPreviousConsent:(id)arg1;
+ (id)consentSettingsFromPlist;
+ (id)consentSettingsFromDictionary:(id)arg1;
+ (_Bool)isAnalyticsStorageDenied;
+ (_Bool)isAdStorageDenied;
+ (void)setConsentSettings:(id)arg1;
+ (void)setConsentSource:(long long)arg1;
+ (long long)consentSource;
+ (id)consentSettings;
+ (id)serialQueue;

@end

@interface APMDailyCounts : NSObject
{
    int _day;
    int _conversionsCount;
    int _allEventsCount;
    int _publicEventsCount;
    int _errorEventsCount;
    int _realtimeCount;
}

@property(readonly, nonatomic) int realtimeCount; // @synthesize realtimeCount=_realtimeCount;
@property(readonly, nonatomic) int errorEventsCount; // @synthesize errorEventsCount=_errorEventsCount;
@property(readonly, nonatomic) int publicEventsCount; // @synthesize publicEventsCount=_publicEventsCount;
@property(readonly, nonatomic) int allEventsCount; // @synthesize allEventsCount=_allEventsCount;
@property(readonly, nonatomic) int conversionsCount; // @synthesize conversionsCount=_conversionsCount;
@property(readonly, nonatomic) int day; // @synthesize day=_day;
- (void)resetWithNewDay:(int)arg1;
- (void)decrementAllEventsCount;
- (void)incrementRealtimeCountsForCurrentDay:(int)arg1;
- (void)incrementErrorEventsCountForCurrentDay:(int)arg1;
- (void)incrementCountsForCurrentDay:(int)arg1 isPublicEvent:(_Bool)arg2 isConversion:(_Bool)arg3 byEffectiveEventCount:(int)arg4;
- (void)incrementCountsForCurrentDay:(int)arg1 isPublicEvent:(_Bool)arg2 isConversion:(_Bool)arg3;
- (id)initWithDay:(int)arg1 conversionsCount:(int)arg2 allEventsCount:(int)arg3 publicEventsCount:(int)arg4 errorEventsCount:(int)arg5 realtimeCount:(int)arg6;

@end

@interface APMDatabase : NSObject
{
    APMSqliteStore *_sqliteStore;
    APMPersistedConfig *_persistedConfig;
}

- (void).cxx_destruct;
- (_Bool)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (_Bool)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 error:(id *)arg6;
- (_Bool)insertDataType:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4 createDataTypeBlock:(CDUnknownBlockType)arg5;
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3 createDataTypeBlock:(CDUnknownBlockType)arg4;
- (_Bool)ensureAllTables;
- (_Bool)initializeDatabaseResourcesWithContext:(id)arg1 databasePath:(id)arg2 error:(id *)arg3;
- (_Bool)deleteComplexEventForAudienceEvaluationWithEventID:(long long)arg1 error:(id *)arg2;
- (_Bool)updateComplexEventForAudienceEvaluationWithEventID:(long long)arg1 childEventCount:(long long)arg2 mainEvent:(id)arg3 error:(id *)arg4;
- (id)mainEventAndChildCountPairWithEventID:(long long)arg1 error:(id *)arg2;
- (id)conditionalUserPropertiesWithCondition:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)conditionalUserPropertiesWithPrefix:(id)arg1 filterByOrigin:(id)arg2 error:(id *)arg3;
- (id)triggeredConditionalUserPropertiesWithEventName:(id)arg1 error:(id *)arg2;
- (id)expiredConditionalUserPropertiesWithError:(id *)arg1;
- (id)timedOutConditionalUserPropertiesWithError:(id *)arg1;
- (_Bool)deleteConditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateConditionalUserProperty:(id)arg1 error:(id *)arg2;
- (id)conditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (id)deleteSubscriptionsOverLimit:(id *)arg1;
- (id)insertIfNotDuplicateSubscriptionID:(id)arg1 error:(id *)arg2;
- (id)insertIfNotDuplicatePurchaseFingerprint:(id)arg1 error:(id *)arg2;
- (id)lastRemoteConfigUpdateTimestamp:(id *)arg1;
- (id)queryMeasurementConfigWithError:(id *)arg1;
- (_Bool)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id *)arg2;
- (_Bool)updateRemoteConfig:(id)arg1 error:(id *)arg2;
- (_Bool)deleteAllPropertyFilters:(id *)arg1;
- (_Bool)deleteAllEventFilters:(id *)arg1;
- (_Bool)deletePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateFilterResults:(id)arg1 error:(id *)arg2;
- (_Bool)updatePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateEventFilters:(id)arg1 error:(id *)arg2;
- (id)allSessionScopedFilters:(id *)arg1;
- (_Bool)deleteFilterResults:(id)arg1 error:(id *)arg2;
- (id)filterResultForAudienceID:(int)arg1 error:(id *)arg2;
- (id)propertyFiltersForPropertyName:(id)arg1 error:(id *)arg2;
- (id)eventFiltersForEventName:(id)arg1 error:(id *)arg2;
- (id)allAudienceIDs:(id *)arg1;
- (id)allFilterResults:(id *)arg1;
- (_Bool)deleteUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateUserAttribute:(id)arg1 error:(id *)arg2;
- (id)userAttributesIncludingInternal:(_Bool)arg1 error:(id *)arg2;
- (id)allLifetimeValueUserAttributes:(id *)arg1;
- (id)userAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)containsUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)userAttributeCountForOrigin:(id)arg1 error:(id *)arg2;
- (id)publicUserAttributeCount:(id *)arg1;
- (_Bool)clearCurrentSessionCounts:(id *)arg1;
- (_Bool)updateEventAggregates:(id)arg1 error:(id *)arg2;
- (id)eventAggregatesWithName:(id)arg1 error:(id *)arg2;
- (id)allEventAggregates:(id *)arg1;
- (id)publicEventCount:(id *)arg1;
- (id)containsRealtimeBundlesWithError:(id *)arg1;
- (id)queryLatestBundleTime:(id *)arg1;
- (_Bool)deleteStaleBundlesOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)maybeDeleteStaleData:(id *)arg1;
- (_Bool)deleteBundlesWithRowIDs:(id)arg1 error:(id *)arg2;
- (id)queryBundlesWithRowIDs:(id)arg1 error:(id *)arg2;
- (id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 error:(id *)arg3;
- (_Bool)incrementRetryCounterForBundlesWithIDs:(id)arg1 error:(id *)arg2;
- (_Bool)insertBundle:(id)arg1 isRealtime:(_Bool)arg2 error:(id *)arg3;
- (id)isQueuedBundleTableEmpty:(id *)arg1;
- (id)containsRealtimeRawEventsWithError:(id *)arg1;
- (id)rawEventDataFromDictionary:(id)arg1 error:(id *)arg2;
- (id)nextMetadataFingerprintToProcess:(id *)arg1;
- (_Bool)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)deleteRawEventsOverAbsoluteLimit:(id *)arg1;
- (_Bool)deleteRawEventsWithMaxRowID:(long long)arg1 error:(id *)arg2;
- (id)containsRawEventWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1 error:(id *)arg2 eventFilter:(CDUnknownBlockType)arg3;
- (id)queryLatestRawEventTime:(id *)arg1;
- (_Bool)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 isRealtime:(_Bool)arg3 error:(id *)arg4;
- (id)isRawEventsTableEmpty:(id *)arg1;
- (_Bool)deleteUnusedRawEventsMetadata:(id *)arg1;
- (_Bool)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)queryRawEventsMetadataWithFingerprint:(long long)arg1 error:(id *)arg2;
- (_Bool)insertIfNotExistsRawEventMetadata:(id)arg1 error:(id *)arg2;
- (_Bool)updateDailyCounts:(id)arg1 error:(id *)arg2;
- (id)dailyCounts:(id *)arg1;
- (_Bool)updateAppMetadata:(id)arg1 error:(id *)arg2;
- (id)queryAppMetadata:(id *)arg1;
- (_Bool)initializeAppMetadata;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (_Bool)reset:(id *)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 error:(id *)arg3;

@end

@interface APMDataTypeValidator : NSObject
{
}

+ (_Bool)isValidCurrencyCode:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidNumericValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidScreenParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalUserAttributeValue:(id)arg1 name:(id)arg2 failureCode:(long long *)arg3;
+ (_Bool)isValidInternalUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidForwardedEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidArrayParamItem:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidArrayParamForEvent:(id)arg1 withParamName:(id)arg2 withArrayCount:(unsigned long long)arg3 isNestedArrayParam:(_Bool)arg4 failureCode:(long long *)arg5;
+ (_Bool)isValidPublicEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidValue:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (_Bool)isValidPublicName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidInternalName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidString:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (_Bool)hasReservedPrefixes:(id)arg1;
+ (void)initialize;

@end

@interface APMEClient : NSObject
{
    APMESDKProperty *_SDKProperty;
    NSArray *_defaultFlags;
    APMEManager *_manager;
    id <APMEExperimentObserverDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <APMEExperimentObserverDelegate> delegate; // @synthesize delegate=_delegate;
- (id)SDKProperty;
- (id)defaultFlags;
- (id)SDKName;
- (void)resetToDefaults;
- (id)objectForKeyedSubscript:(id)arg1;
@property(readonly, nonatomic) _Bool hasStaleSnapshot;
- (_Bool)activateLatestSnapshot:(id *)arg1;
- (id)valueForFlag:(id)arg1;
- (id)initWithSDKProperty:(id)arg1 defaultFlags:(id)arg2 withManager:(id)arg3;

@end

@interface APMEDatabase : NSObject
{
    APMSqliteStore *_sqliteStore;
}

- (void).cxx_destruct;
- (_Bool)deleteExperimentsOfSDKName:(id)arg1 fromTableName:(id)arg2 error:(id *)arg3;
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3;
- (_Bool)upsertSnapshot:(id)arg1 intoTableName:(id)arg2 timestamp:(double)arg3 manuallyActivated:(id)arg4 error:(id *)arg5;
- (_Bool)deleteLaunchedExperimentSDKName:(id)arg1 error:(id *)arg2;
- (id)fetchAllLaunchedSnapshots:(id *)arg1;
- (_Bool)activatePendingSnapshotsAutomatically:(id *)arg1;
- (_Bool)deletePendingExperimentsOfSDKName:(id)arg1 error:(id *)arg2;
- (_Bool)upsertPendingExperimentSnapshots:(id)arg1 error:(id *)arg2;
- (id)fetchAllPendingSnapshots:(id *)arg1;
- (_Bool)deleteStaleActivatedSnapshots:(id *)arg1;
- (_Bool)deleteActivatedExperimentsOfSDKName:(id)arg1 error:(id *)arg2;
- (_Bool)activateSnapshot:(id)arg1 timestamp:(double)arg2 error:(id *)arg3;
- (id)fetchAllActivatedSnapshots:(id *)arg1;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (void)reset;
- (_Bool)ensureAllTables;
- (_Bool)initializeDatabaseResourcesWithContext:(id)arg1 databasePath:(id)arg2;
- (id)initWithPath:(id)arg1;

@end

@interface APMEExperiment : NSObject <NSCopying>
{
    GULMutableDictionary *_flagsByName;
    NSNumber *_experimentID;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSNumber *experimentID; // @synthesize experimentID=_experimentID;
@property(readonly, nonatomic) APMPBExperiment *proto;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)flagWithName:(id)arg1;
- (void)addFlag:(id)arg1;
@property(readonly, nonatomic) NSArray *flags;
- (id)initWithProtobuf:(id)arg1;
- (id)initWithExperimentID:(id)arg1 flags:(id)arg2;

@end

@interface APMEExperimentRequestBuilder : NSObject
{
    GULMutableDictionary *_clientPropertyBySDKName;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)request;
- (id)appPropertyProto;
- (void)addSDKProperty:(id)arg1;
- (id)init;

@end

@interface APMEManager : NSObject
{
    GULMutableDictionary *_activatedSnapshotsBySDKName;
    GULMutableDictionary *_pendingSnapshotsBySDKName;
    GULMutableDictionary *_launchedSnapshotsBySDKName;
    APMETaskManager *_taskManager;
    GULMutableDictionary *_registeredClientsBySDKName;
    GULMutableDictionary *_defaultFlagsBySDKName;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (long long)version;
+ (id)monitor;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)dispatchSyncOnSerialQueue:(CDUnknownBlockType)arg1;
- (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
- (void)taskManager:(id)arg1 didUpsertPendingSnapshots:(id)arg2;
- (void)taskManager:(id)arg1 didFinishFetchingExperimentSnapshots:(id)arg2 withErrors:(id)arg3;
- (void)taskManager:(id)arg1 didStartWithActivatedSnapshots:(id)arg2 pendingSnapshots:(id)arg3 launchedSnapshots:(id)arg4;
- (_Bool)taskManagerShouldFetchExperiments:(id)arg1;
- (void)reset;
- (void)resetToDefaultsOfSDKName:(id)arg1;
- (long long)activatedSnapshotStatusOfSDKName:(id)arg1;
- (_Bool)activateSnapshotOfSDK:(id)arg1 error:(id *)arg2;
- (id)flagValueForFlagName:(id)arg1 SDKName:(id)arg2;
- (id)experimentIDs;
- (id)clientForSDKName:(id)arg1;
- (id)registerSDKProperty:(id)arg1 defaultFlags:(id)arg2;
- (id)initWithTaskManager:(id)arg1;
- (id)init;

@end

@interface APMEMonitor : NSObject
{
    APMMonitor *_monitor;
}

- (void).cxx_destruct;
- (void)clearMonitoringData;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (id)initWithMonitor:(id)arg1;

@end

@interface APMEnvironmentInfo : NSObject
{
    NSString *_deviceModel;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly, nonatomic) int timeZoneOffsetMinutes;
@property(readonly, nonatomic) NSString *userDefaultLanguage;
@property(readonly, nonatomic) NSString *deviceOSVersion;
@property(readonly, nonatomic) NSString *deviceModel;

@end

@interface APMESDKProperty : NSObject
{
    NSString *_name;
    long long _version;
    NSString *_appID;
    NSString *_diversionKey;
    NSDictionary *_customProperties;
    id <APMESDKPropertyProviderDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <APMESDKPropertyProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSDictionary *customProperties; // @synthesize customProperties=_customProperties;
@property(copy, nonatomic) NSString *diversionKey; // @synthesize diversionKey=_diversionKey;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)proto;
- (id)initWithName:(id)arg1;

@end

@interface APMESnapshot : NSObject
{
    GULMutableDictionary *_experimentsByExperimentID;
    _Bool _manuallyActivated;
    NSString *_SDKName;
    double _timestamp;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool manuallyActivated; // @synthesize manuallyActivated=_manuallyActivated;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *SDKName; // @synthesize SDKName=_SDKName;
@property(readonly, nonatomic) APMPBSnapshot *proto;
@property(readonly, nonatomic) NSArray *experiments;
- (void)addFlags:(id)arg1 forExperimentID:(id)arg2;
- (void)addFlag:(id)arg1 forExperimentID:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)flagByName:(id)arg1;
- (id)initWithProtobuf:(id)arg1;
- (id)initWithSDKName:(id)arg1 experiments:(id)arg2;

@end

@interface APMETaskManager : NSObject
{
    APMAlarm *_alarm;
    GULNetwork *_network;
    APMUserDefaults *_persistedStorage;
    NSObject<OS_dispatch_queue> *_workerQueue;
    APMEDatabase *_database;
    NSString *_databasePath;
    _Bool _hasMadeInitialFetch;
    id <APMETaskManagerDelegate> _delegate;
    double _initializationTimestamp;
}

- (void).cxx_destruct;
@property(nonatomic) double initializationTimestamp; // @synthesize initializationTimestamp=_initializationTimestamp;
@property(nonatomic) _Bool hasMadeInitialFetch; // @synthesize hasMadeInitialFetch=_hasMadeInitialFetch;
@property(nonatomic) __weak id <APMETaskManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dispatchSyncOnWorkerQueue:(CDUnknownBlockType)arg1;
- (void)dispatchAsyncOnWorkerQueue:(CDUnknownBlockType)arg1;
- (id)experimentSnapshotsFromData:(id)arg1;
- (id)errorsFromExperimentResponse:(id)arg1;
- (id)experimentSnapshotsFromExperimentResponse:(id)arg1;
- (void)reset;
- (void)upsertPendingSnapshots:(id)arg1;
- (void)resetToDefaultsForSDKName:(id)arg1;
- (void)activatePendingSnapshot:(id)arg1 timestamp:(double)arg2;
- (void)fetchAllSnapshotsOnWorkerQueue;
- (void)startTaskManagerOnWorkerQueue;
- (void)startTaskManager;
- (void)handleFetchingExperimentsResponse:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchExperiments;
- (void)postponeFetchExperiments;
- (void)scheduleFetchingExperimentsOnWorkerQueue;
- (double)fetchTimeFromLastSuccessfulTimestamp:(double)arg1 lastFailedTimestamp:(double)arg2;
- (id)initWithQueue:(id)arg1 alarm:(id)arg2 network:(id)arg3 persistedStorage:(id)arg4 databasePath:(id)arg5 initTimestamp:(double)arg6;
- (id)init;

@end

@interface APMEvent : NSObject <NSCopying>
{
    NSMutableDictionary *_parameters;
    NSString *_origin;
    NSString *_name;
    double _timestamp;
    double _previousTimestamp;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(readonly, nonatomic) double previousTimestamp; // @synthesize previousTimestamp=_previousTimestamp;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) APMPBEvent *protoEvent;
- (_Bool)addScreenParameters:(id)arg1;
- (void)applyParameters:(id)arg1;
@property(nonatomic, getter=isDebug) _Bool debug;
@property(nonatomic, getter=isRealtime) _Bool realtime;
@property(nonatomic, getter=isConversion) _Bool conversion;
- (_Bool)shouldValidateParams;
- (id)copyWithParameters:(id)arg1;
- (id)copyWithPreviousTimestamp:(double)arg1;
- (id)initWithOrigin:(id)arg1 isPublic:(_Bool)arg2 name:(id)arg3 timestamp:(double)arg4 previousTimestamp:(double)arg5 parameters:(id)arg6;
- (id)initWithEventProto:(id)arg1;

@end

@interface APMEventAggregates : NSObject
{
    _Bool _lastExemptFromSampling;
    int _lifetimeCount;
    int _currentBundleCount;
    int _currentSessionCount;
    int _lastSamplingRate;
    int _lastBundledDay;
    NSString *_name;
    double _lastFireTimestamp;
    double _lastBundledTimestamp;
    NSNumber *_lastSampledComplexEventID;
}

- (void).cxx_destruct;
@property(nonatomic) int lastBundledDay; // @synthesize lastBundledDay=_lastBundledDay;
@property(nonatomic) _Bool lastExemptFromSampling; // @synthesize lastExemptFromSampling=_lastExemptFromSampling;
@property(nonatomic) int lastSamplingRate; // @synthesize lastSamplingRate=_lastSamplingRate;
@property(retain, nonatomic) NSNumber *lastSampledComplexEventID; // @synthesize lastSampledComplexEventID=_lastSampledComplexEventID;
@property(nonatomic) double lastBundledTimestamp; // @synthesize lastBundledTimestamp=_lastBundledTimestamp;
@property(nonatomic) double lastFireTimestamp; // @synthesize lastFireTimestamp=_lastFireTimestamp;
@property(readonly, nonatomic) int currentSessionCount; // @synthesize currentSessionCount=_currentSessionCount;
@property(readonly, nonatomic) int currentBundleCount; // @synthesize currentBundleCount=_currentBundleCount;
@property(readonly, nonatomic) int lifetimeCount; // @synthesize lifetimeCount=_lifetimeCount;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)incrementCurrentSessionCount;
- (void)incrementCurrentBundleCount;
- (void)incrementLifetimeCount;
- (id)initWithName:(id)arg1 lifetimeCount:(int)arg2 currentBundleCount:(int)arg3 currentSessionCount:(int)arg4 lastFireTimestamp:(double)arg5;

@end

@interface APMEventFilter : NSObject <APMAudienceFilter>
{
    _Bool _sessionScoped;
    _Bool _dynamic;
    _Bool _sequence;
    int _audienceID;
    int _filterID;
    NSString *_eventName;
    NSData *_data;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
@property(readonly, nonatomic, getter=isSequence) _Bool sequence; // @synthesize sequence=_sequence;
@property(readonly, nonatomic, getter=isDynamic) _Bool dynamic; // @synthesize dynamic=_dynamic;
@property(readonly, nonatomic, getter=isSessionScoped) _Bool sessionScoped; // @synthesize sessionScoped=_sessionScoped;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 eventName:(id)arg3 data:(id)arg4 sessionScoped:(_Bool)arg5 dynamic:(_Bool)arg6 sequence:(_Bool)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMFilterResult : NSObject
{
    int _audienceID;
    NSData *_currentResults;
    NSData *_previousResults;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSData *previousResults; // @synthesize previousResults=_previousResults;
@property(readonly, nonatomic) NSData *currentResults; // @synthesize currentResults=_currentResults;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (id)initWithAudienceID:(int)arg1 currentResults:(id)arg2 previousResults:(id)arg3;

@end

@interface APMIdentifiers : NSObject
{
    NSString *_origin;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (void)setOrigin:(id)arg1;
@property(readonly, copy, nonatomic) NSString *libraryVersion;
@property(readonly, copy, nonatomic) NSString *adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID;
@property(readonly, copy, nonatomic) NSString *analyticsAppID;
@property(readonly, copy, nonatomic) NSString *googleAppID;

@end

@interface APMIdentity : NSObject
{
    NSDate *_lastAppInstanceIDUpdateTimestamp;
    unsigned long long _appTrackingConsentStatus;
    NSString *_resettableDeviceID;
    _Bool _limitedAdTracking;
    NSString *_identifierForVendorString;
    APMPersistedConfig *_persistedConfig;
    NSString *_appIDFromGMP;
    NSString *_appIDFromAdMob;
    NSNumber *_isIDFVCollectionEnabledNumber;
    NSString *_firebaseInstallationID;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_appID;
    NSString *_appVersion;
    NSNumber *_appVersionMajor;
    NSNumber *_appVersionMinor;
    NSNumber *_appVersionRelease;
    long long _devCertHash;
}

+ (id)numericFieldsFromAppVersionNumeric:(id)arg1;
+ (long long)appMeasurementLibraryVersion;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain) NSString *firebaseInstallationID; // @synthesize firebaseInstallationID=_firebaseInstallationID;
@property(readonly, nonatomic) long long devCertHash; // @synthesize devCertHash=_devCertHash;
@property(readonly, nonatomic) NSNumber *appVersionRelease; // @synthesize appVersionRelease=_appVersionRelease;
@property(readonly, nonatomic) NSNumber *appVersionMinor; // @synthesize appVersionMinor=_appVersionMinor;
@property(readonly, nonatomic) NSNumber *appVersionMajor; // @synthesize appVersionMajor=_appVersionMajor;
@property(readonly, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
- (id)randomAppInstanceID;
@property(nonatomic) _Bool shouldSetLastAdvertisingIDResetUserProperty;
- (void)updateIdentifiers;
@property(readonly, nonatomic) NSString *identifierForVendor;
@property(readonly, nonatomic, getter=isFromAppStore) _Bool fromAppStore;
- (void)setAppIDFromAdMob:(id)arg1;
- (void)setAppIDFromGMP:(id)arg1;
@property(readonly, nonatomic) NSString *appIDFromAdMob;
@property(readonly, nonatomic) NSString *appIDFromGMP;
- (id)hashedResettableDeviceID;
- (void)setAppInstanceID:(id)arg1;
@property(readonly, nonatomic) NSString *appInstanceID;
@property(readonly, nonatomic) NSString *resettableDeviceID;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
@property(readonly, nonatomic) _Bool supportsAppTrackingConsentStatus;
@property(readonly, nonatomic) unsigned long long appTrackingConsentStatus;
- (void)enforceConsentSettings;
- (id)initWithPersistedConfig:(id)arg1;

@end

@interface APMInAppPurchaseProductCache : NSObject
{
    NSMutableSet *_invalidProductIdentifiers;
    NSMutableDictionary *_validProducts;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductIdentifier:(id)arg1;
- (id)init;

@end

@interface APMInAppPurchaseItem : NSObject
{
    _Bool _freeTrial;
    _Bool _introductoryOffer;
    NSString *_subscriptionExpirationDateIA5String;
    NSString *_productID;
    NSString *_originalTransactionID;
    NSString *_transactionID;
    NSNumber *_webOrderLineItemID;
    NSString *_originalPurchaseDateIA5String;
    NSString *_purchaseDateIA5String;
    NSString *_cancellationDateIA5String;
    NSNumber *_purchaseType;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSNumber *purchaseType; // @synthesize purchaseType=_purchaseType;
@property(copy, nonatomic) NSString *cancellationDateIA5String; // @synthesize cancellationDateIA5String=_cancellationDateIA5String;
@property(copy, nonatomic) NSString *purchaseDateIA5String; // @synthesize purchaseDateIA5String=_purchaseDateIA5String;
@property(copy, nonatomic) NSString *originalPurchaseDateIA5String; // @synthesize originalPurchaseDateIA5String=_originalPurchaseDateIA5String;
@property(copy, nonatomic) NSNumber *webOrderLineItemID; // @synthesize webOrderLineItemID=_webOrderLineItemID;
@property(copy, nonatomic) NSString *transactionID; // @synthesize transactionID=_transactionID;
@property(copy, nonatomic) NSString *originalTransactionID; // @synthesize originalTransactionID=_originalTransactionID;
@property(copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
@property(copy, nonatomic) NSString *subscriptionExpirationDateIA5String; // @synthesize subscriptionExpirationDateIA5String=_subscriptionExpirationDateIA5String;
@property(nonatomic, getter=isIntroductoryOffer) _Bool introductoryOffer; // @synthesize introductoryOffer=_introductoryOffer;
@property(nonatomic, getter=isFreeTrial) _Bool freeTrial; // @synthesize freeTrial=_freeTrial;

@end

@interface APMInAppPurchaseTransactionReporter : NSObject
{
    NSArray *_allPurchaseItems;
}

+ (id)transactionFingerprint:(id)arg1;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)paymentQueue:(id)arg1 updatedFilteredTransactions:(id)arg2;
- (void)reportTransactionsFromArray:(id)arg1;

@end

@interface APMInfoPlistFileUtil : NSObject
{
}

+ (id)googleServiceInfoPlistPath;
+ (id)dictionaryFromGoogleServiceInfoPlist;

@end

@interface APMKeychainWrapper : NSObject
{
}

+ (_Bool)isMigrationNeededForIdentifier:(id)arg1 withAppID:(id)arg2;
+ (id)keychainDataWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)searchDirectoryForIdentifier:(id)arg1 withAppID:(id)arg2;
+ (void)migrateKeychainDataToStringWithIdentifier:(id)arg1 withAppID:(id)arg2;
+ (void)deleteKeychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)keychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (_Bool)upsertKeychainValue:(id)arg1 withIdentifier:(id)arg2 appID:(id)arg3;

@end

@interface APMLifetimeValueRecorder : NSObject
{
}

+ (_Bool)isEcommercePurchaseEvent:(id)arg1;
+ (_Bool)isPurchaseEvent:(id)arg1;
+ (_Bool)recordLifetimeValueToDatabase:(id)arg1 event:(id)arg2;

@end

@interface APMMeasurement : NSObject <GULNetworkLoggerDelegate, GULNetworkReachabilityDelegate>
{
    NSString *_databaseName;
    _Bool _didInitializeComponents;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _initializeComponentsLock;
    APMAlarm *_alarm;
    APMAudience *_audience;
    APMDatabase *_database;
    APMIdentity *_identity;
    GULNetwork *_network;
    APMPersistedConfig *_persistedConfig;
    APMRemoteConfig *_remoteConfig;
    APMScheduler *_scheduler;
    APMSessionReporter *_sessionReporter;
    APMSearchAdReporter *_searchAdReporter;
    APMEManager *_experimentManager;
    NSArray *_uploadingBundleIDs;
    NSString *_previousGMPAppID;
    // Error parsing type: AQ, name: _backgroundUpdateTask
    double _initTimestamp;
    double _suspendedUploadTimestamp;
    NSString *_appID;
    NSArray *_safelistedEvents;
    _Bool _enabled;
    _Bool _wasEnabledDuringInitialization;
    _Bool _isAnalyticsCollectionEnabled;
    _Bool _isAnalyticsCollectionDeactivated;
    _Bool _isNetworkRequestPending;
    id <APMMeasurementDelegate> _measurementDelegate;
}

+ (void)notCalled;
+ (void)handleAppDidFinishLaunching:(id)arg1;
+ (void)load;
+ (id)remoteConfig;
+ (id)monitor;
+ (id)sharedInstance;
+ (_Bool)hasSharedInstance;
+ (void)initializeSharedInstanceWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(_Bool)arg2 isAnalyticsCollectionDeactivated:(_Bool)arg3 safelistedEvents:(id)arg4;
+ (void)handleStoredURLAfterAppLaunchWithNotification:(id)arg1;
+ (id)deepLinkFromUserActivity:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) __weak id <APMMeasurementDelegate> measurementDelegate; // @synthesize measurementDelegate=_measurementDelegate;
@property(nonatomic) _Bool isNetworkRequestPending; // @synthesize isNetworkRequestPending=_isNetworkRequestPending;
@property(nonatomic) _Bool isAnalyticsCollectionDeactivated; // @synthesize isAnalyticsCollectionDeactivated=_isAnalyticsCollectionDeactivated;
@property(nonatomic) _Bool isAnalyticsCollectionEnabled; // @synthesize isAnalyticsCollectionEnabled=_isAnalyticsCollectionEnabled;
@property(readonly, nonatomic) _Bool wasEnabledDuringInitialization; // @synthesize wasEnabledDuringInitialization=_wasEnabledDuringInitialization;
@property(readonly, nonatomic) APMSessionReporter *sessionReporter; // @synthesize sessionReporter=_sessionReporter;
@property(readonly, nonatomic) APMDatabase *database; // @synthesize database=_database;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) GULNetwork *network;
@property(readonly, nonatomic) APMIdentity *identity;
@property(readonly, nonatomic) NSArray *safelistedEvents;
@property(readonly, nonatomic) APMScheduler *scheduler;
- (id)remoteConfigInstance;
@property(readonly, nonatomic) APMPersistedConfig *persistedConfig;
@property(readonly, nonatomic) APMAudience *audience;
@property(readonly, nonatomic) APMAlarm *alarm;
- (void)setSuspendedUploadTimestamp:(double)arg1;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (_Bool)isFirebaseRemoteConfigSDKPresent;
- (void)handleAppWillResignActiveEvent:(id)arg1;
- (void)terminateBackgroundTask;
- (void)handleAppWillEnterForegroundNotification:(id)arg1;
- (void)handleAppDidBecomeActiveEvent:(id)arg1;
- (void)swapBackgroundTaskWithNewTaskID:(unsigned long long)arg1;
- (void)filterPurchaseTransactions:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)networkRemoteConfigFetchCompletionHandler:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchRemoteConfig;
- (double)firstOpenTimestamp;
- (_Bool)removeBundlesFromDatabaseWithIDs:(id)arg1;
- (_Bool)hasDataToUpload;
- (_Bool)wipeoutAnalyticsDataAndResetComponents;
- (_Bool)resetAnalyticsDataWithAppInstanceID:(id)arg1;
- (void)setLastAdvertisingIDResetUserPropertyOnWorkerQueue;
- (_Bool)shouldAllowAdNetworkRegistration;
- (id)shouldDisableAdPersonalization;
- (void)maxUserPropertiesForOrigin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userPropertiesIncludingInternal:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userAttributeWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (long long)setUserPropertyInDatabaseOnWorkerQueue:(id)arg1;
- (void)setUserAttributeOnWorkerQueue:(id)arg1;
- (void)setUserAttribute:(id)arg1;
- (void)removeUserAttributeOnWorkerQueue:(id)arg1;
- (void)removeUserAttribute:(id)arg1;
- (id)parametersWithAddedDefaultEventParameters:(id)arg1;
- (void)handleSetDefaultEventParametersOnWorkerQueue:(id)arg1;
- (void)setDefaultEventParameters:(id)arg1;
- (void)logEvent:(id)arg1;
- (void)logEventOnWorkerQueue:(id)arg1 notifyEventListeners:(_Bool)arg2;
- (void)logEventOnWorkerQueueWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 enabled:(_Bool)arg6 ignoreEnabled:(_Bool)arg7 ignoreInterceptor:(_Bool)arg8 interceptor:(CDUnknownBlockType)arg9 addedScreenParameters:(id)arg10;
- (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 enabled:(_Bool)arg6 ignoreEnabled:(_Bool)arg7 ignoreInterceptor:(_Bool)arg8 interceptor:(CDUnknownBlockType)arg9 addedScreenParameters:(id)arg10;
- (void)setUploadInProgressWithBundleIDs:(id)arg1;
- (void)incrementRetryCounter;
- (void)networkUploadCompletionHandlerWithResponse:(id)arg1 error:(id)arg2;
- (id)filteredBundlesWithCompatibleAppID:(id)arg1 resettableDeviceID:(id)arg2 vendorDeviceID:(id)arg3 bundlesToUpload:(id)arg4;
- (_Bool)isNetworkReadyForRequest;
- (void)uploadData;
- (void)uploadDataOrRegisterAlarm;
- (_Bool)shouldUseBackgroundSession;
- (double)nextUploadingTime;
- (void)updateSchedule;
- (void)backfillSessionNumber;
- (void)setSessionTimeoutInterval:(double)arg1;
- (_Bool)isVersionSameAsOriginalVersion;
- (id)fileAttributesForPath:(id)arg1;
- (long long)timestampMillisRoundedUpToNextHour:(long long)arg1;
- (void)setPersonalizedAdsUserPropertyOnWorkerQueue;
- (void)reportOSUpdateOnWorkerQueue;
- (void)reportAppUpdateOnWorkerQueue;
- (void)reportFirstOpenOnWorkerQueue;
- (void)reportSessionStartOnWorkerQueueWithTimestamp:(double)arg1 appInBackground:(_Bool)arg2;
- (void)reportStoredCampaignEventOnWorkerQueue:(id)arg1;
- (void)reachabilityDidChange;
@property(readonly, nonatomic) _Bool didInitializeComponents;
- (_Bool)startMeasurementOnWorkerQueue;
- (void)setProspectiveConsentSettings;
- (_Bool)shouldWipeDataWithAppID:(id)arg1 appIDFromGMP:(id)arg2 appIDFromAdMob:(id)arg3 persistedAppIDFromGMP:(id)arg4 persistedAppIDFromAdMob:(id)arg5;
- (void)setEnabledOnWorkerQueue:(_Bool)arg1;
- (void)dealloc;
- (_Bool)shouldEnableMeasurement;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 network:(id)arg3 scheduler:(id)arg4 alarm:(id)arg5 appID:(id)arg6 isAnalyticsCollectionEnabled:(_Bool)arg7 isAnalyticsCollectionDeactivated:(_Bool)arg8 safelistedEvents:(id)arg9 experimentManager:(id)arg10;
- (id)initWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(_Bool)arg2 isAnalyticsCollectionDeactivated:(_Bool)arg3 safelistedEvents:(id)arg4 experimentManager:(id)arg5;
- (void)addBundleMetadataIntoBundle:(id)arg1 bundleStartTimestamp:(double)arg2 bundleEndTimestamp:(double)arg3;
- (_Bool)updateUserEngagement:(long long)arg1 bundle:(id)arg2 sessionScoped:(_Bool)arg3;
- (_Bool)updateAppMetadataForBundle:(id)arg1 bundleStartTimestamp:(double)arg2 bundleEndTimestamp:(double)arg3;
- (id)eventsAfterUpdatingEventAggregates:(id)arg1 audienceTimestampsCache:(id)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1;
- (id)evaluationTimeFromRawEvents:(id)arg1 bundle:(id)arg2;
- (id)processRawEvents:(id)arg1 metadata:(long long)arg2;
- (id)validatePurchaseEvent:(id)arg1;
- (id)internalEventFromPublicEvent:(id)arg1;
- (_Bool)checkRealtime:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)checkConversion:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)bundleRawEvents;
- (void)logFirstOpenConsentedEvent:(double)arg1;
- (void)maybeAddDebugAndRealtimeParameters:(id)arg1;
- (_Bool)writeEvent:(id)arg1 isPublicEvent:(_Bool)arg2 isRealtime:(_Bool)arg3;
- (_Bool)isRealtimeEvent:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)shouldProcessEvent:(id)arg1 dailyCounts:(id)arg2 isPublicEvent:(_Bool)arg3;
- (_Bool)updateLifetimeValueWithEvent:(id)arg1;
- (void)writeSessionStartEventOnWorkerQueue:(id)arg1;
- (id)appExceptionEventWithFirebaseFeatureRollouts:(id)arg1;
- (_Bool)shouldDropDuplicatedSessionStartWithRolloutEvent:(id)arg1;
- (_Bool)dedupeSubscriptionEvent:(id)arg1;
- (id)eventAfterSafelistingEvent:(id)arg1;
- (void)processSessionFromEvent:(id)arg1;
- (id)createRawEventMetadataWithUserAttributes:(id)arg1;
- (void)writeEventOnWorkerQueue:(id)arg1;
- (void)handleEventOnWorkerQueue:(id)arg1;
- (void)handleInternalEventOnWorkerQueue:(id)arg1;
- (_Bool)canEventBeSampled:(id)arg1;
- (id)sampleEvents:(id)arg1 error:(id *)arg2;
- (_Bool)isEventBundledAfterRoll:(int)arg1;
- (_Bool)isValidCampaignURLParamDictionary:(id)arg1;
- (void)handleDebugModeWithURL:(id)arg1;
- (void)handleOpenURLOnWorkerQueue:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3 extraParameters:(id)arg4;
- (_Bool)shouldAllowClickID;
- (void)handleDeepLink:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleOpenURL:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleNonFirstOpenEventURL:(id)arg1 eventTimestampInSeconds:(double)arg2;
- (_Bool)sendDeepLinkURLToAppDelegateOnMainThread:(id)arg1 extraInfo:(id)arg2;
- (void)handleDeferredDeepLinkInfo:(id)arg1;
- (id)deepLinkInfoFromResponseData:(id)arg1;
- (void)requestDeferredDeepLink;
- (_Bool)shouldAllowRequestDeferredDeepLink;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMMonitor : NSObject
{
    long long _logLevel;
    APMASLLogger *_logger;
    APMMonitoringSampledData *_monitoringSampledData;
    NSObject<OS_dispatch_queue> *_monitorQueue;
    long long _libraryVersion;
    APMUserDefaults *_monitorUserDefaults;
    _Bool _deferToFIRLogger;
    _Bool _debugModeEnabled;
    _Bool _verboseLoggingEnabled;
    _Bool _encodeContexts;
    NSString *_logTag;
}

+ (id)monitoringDataKeyWithMessage:(id)arg1 logLevel:(long long)arg2 libraryVersion:(long long)arg3;
+ (id)lastAPMSymbolFromException:(id)arg1;
+ (id)encodedStringWithContextObject:(id)arg1;
+ (id)stringWithLogMessage:(id)arg1 logLevel:(long long)arg2 contexts:(id)arg3 encodeContexts:(_Bool)arg4;
+ (id)encodedStringWithContextArray:(id)arg1 insertSpaces:(_Bool)arg2;
+ (_Bool)isMonitorableLevel:(long long)arg1;
+ (_Bool)isSilentLevel:(long long)arg1;
+ (id)logLevelDescriptionFromLogLevel:(long long)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *logTag; // @synthesize logTag=_logTag;
@property(nonatomic) _Bool encodeContexts; // @synthesize encodeContexts=_encodeContexts;
@property(nonatomic, getter=isVerboseLoggingEnabled) _Bool verboseLoggingEnabled; // @synthesize verboseLoggingEnabled=_verboseLoggingEnabled;
@property(nonatomic, getter=isDebugModeEnabled) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
- (void)synchronizeToDiskOnMonitorQueue;
- (void)migrateMonitorDataOnMonitorQueue;
- (void)saveMonitoringDataToUserDefaultsOnMonitorQueue;
- (void)insertOrUpdateMonitoringDataWithMessage:(id)arg1 encodedContext:(id)arg2 logLevel:(long long)arg3;
- (void)logToConsole:(long long)arg1 message:(id)arg2 logLevel:(long long)arg3;
- (_Bool)isLoggableLevel:(long long)arg1;
- (void)loadMonitoringDataFromUserDefaultsOnMonitorQueue;
- (void)clearMonitoringData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)setLogLevel:(long long)arg1;
- (id)initWithLogLevel:(long long)arg1 logger:(id)arg2 libraryVersion:(long long)arg3;
- (id)initWithLibraryVersion:(long long)arg1;

@end

@interface APMMonitoringSampledData : NSObject
{
    NSMutableArray *_sampledData;
}

+ (id)sampledDataEntryWithKey:(id)arg1 timestamp:(id)arg2 context:(id)arg3 population:(id)arg4;
+ (id)monitoringURLParamWithKey:(id)arg1 population:(id)arg2 context:(id)arg3;
+ (_Bool)isValidUserDefaultsArrayEntry:(id)arg1;
- (void).cxx_destruct;
- (id)sampledData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)insertOrUpdateSampledDataWithKey:(id)arg1 encodedContext:(id)arg2;
- (id)initWithArray:(id)arg1;

@end

@interface APMNumericUtil : NSObject
{
}

+ (long long)randomInt64;

@end

@interface APMPBAppProperty : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBAudience : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBAudienceLeafFilterResult : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBClientProperty : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBCustomProperty : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBDynamicFilterResultTimestamp : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBEvent : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBEventConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBEventFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBEventParam : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBExperiment : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBExperimentRequest : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBExperimentResponse : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBFlag : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBMeasurementBatch : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBMeasurementBundle : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBMeasurementConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBNumberFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBOgtActivities : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBOgtActivity : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBProgram : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBPropertyFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBResultData : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBRuntimeEntity : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBSdkResponse : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBSequenceFilterResultTimestamp : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBSetting : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBSnapshot : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBStringFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPBUserAttribute : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPersistedConfig : NSObject
{
    NSString *_name;
    APMUserDefaults *_userDefaults;
    NSObject<OS_dispatch_queue> *_serialQueue;
    CDUnknownBlockType _synchronizeBlock;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)synchronizeToDisk;
- (void)scheduleSynchronizeToDisk;
- (void)cancelScheduledSynchronize;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setInt64:(long long)arg1 forKey:(id)arg2;
- (id)dictionaryForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (long long)int64ForKey:(id)arg1 userDefault:(id)arg2;
- (long long)int64ForKey:(id)arg1;
@property(copy, nonatomic) NSDictionary *defaultEventParameters;
@property(nonatomic) long long sessionNumber;
@property(nonatomic) double engagementTimeBeforeSessionStart;
@property(nonatomic) double lastSessionActivityClockTime;
@property(nonatomic) _Bool startNewSession;
@property(nonatomic) _Bool unmatchedFirstOpenWithoutIDFA;
@property(nonatomic) _Bool shouldSetLastAdvertisingIDResetUserProperty;
@property(nonatomic) long long deferredDeepLinkRetryCount;
@property(retain, nonatomic) NSNumber *deferredDeepLinkRetrievalComplete;
@property(copy, nonatomic) NSString *firebaseFeatureRollouts;
@property(copy, nonatomic) NSNumber *allowPersonalizedAds;
@property(copy, nonatomic) NSNumber *loadTimestampValue;
@property(copy, nonatomic) NSString *configServerLastModifiedString;
@property(nonatomic) long long firstOpenTimestampMilliseconds;
@property(nonatomic) double lastMonitorDataSampledTimestamp;
@property(readonly, nonatomic) double midnightOffset;
@property(copy, nonatomic, setter=setOSVersion:) NSString *osVersion;
@property(copy, nonatomic) NSString *appVersion;
@property(nonatomic) double lastFailedUploadTimestamp;
@property(nonatomic) double lastSuccessfulUploadTimestamp;
@property(nonatomic) double lastBackoffTimestamp;
@property(nonatomic) long long measurementEnabledState;
@property(copy, nonatomic) NSString *hashedResettableDeviceID;
@property(copy, nonatomic) NSString *appIDFromAdMob;
@property(copy, nonatomic) NSString *appIDFromGMP;
@property(copy, nonatomic) NSString *appInstanceID;
@property(nonatomic) long long searchAdRetryCount;
@property(nonatomic) double lastSearchAdLookUpTimestamp;
@property(copy, nonatomic) NSNumber *searchAdCampaignValue;
@property(nonatomic) double lastDeleteStaleBundlesTimestamp;
- (void)clearValues;
- (void)dealloc;
- (id)initWithSuiteName:(id)arg1;

@end

@interface APMProductsRequest : NSObject <SKProductsRequestDelegate>
{
    SKProductsRequest *_productsRequest;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)clearInstance;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)requestWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithProductIdentifiers:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMPropertyFilter : NSObject <APMAudienceFilter>
{
    _Bool _sessionScoped;
    _Bool _dynamic;
    _Bool _sequence;
    int _audienceID;
    int _filterID;
    NSString *_propertyName;
    NSData *_data;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
@property(readonly, nonatomic, getter=isSequence) _Bool sequence; // @synthesize sequence=_sequence;
@property(readonly, nonatomic, getter=isDynamic) _Bool dynamic; // @synthesize dynamic=_dynamic;
@property(readonly, nonatomic, getter=isSessionScoped) _Bool sessionScoped; // @synthesize sessionScoped=_sessionScoped;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 propertyName:(id)arg3 data:(id)arg4 sessionScoped:(_Bool)arg5 dynamic:(_Bool)arg6 sequence:(_Bool)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APMRawEventData : NSObject
{
    APMEvent *_rawEvent;
    long long _rowID;
    long long _metadataFingerprint;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long metadataFingerprint; // @synthesize metadataFingerprint=_metadataFingerprint;
@property(readonly, nonatomic) long long rowID; // @synthesize rowID=_rowID;
@property(readonly, nonatomic) APMEvent *rawEvent; // @synthesize rawEvent=_rawEvent;
- (id)initWithRawEvent:(id)arg1 rowID:(long long)arg2 metadataFingerprint:(long long)arg3;

@end

@interface APMRemoteConfig : NSObject <APMEExperimentObserverDelegate, APMESDKPropertyProviderDelegate>
{
    _Bool _isDefaultInstance;
    NSString *_appID;
    APMDatabase *_database;
    GULMutableDictionary *_cachedValueByRemoteConfigKeys;
    GULMutableDictionary *_cachedEventConfigByEventName;
    NSNumberFormatter *_numberFormatter;
    APMPBMeasurementConfig *_remoteConfigProto;
    APMEClient *_experimentClient;
    APMEManager *_experimentManager;
    _Bool _hasNewSnapshot;
    // Error parsing type: AB, name: _randomGeneratorsEnabled
}

+ (id)defaultInstance;
- (void).cxx_destruct;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 maxValue:(long long)arg3 minValue:(long long)arg4;
- (int)intValueFromCacheWithKey:(id)arg1 defaultValue:(int)arg2 maxValue:(int)arg3 minValue:(int)arg4;
- (double)timeIntervalInSecondsFromCacheWithKey:(id)arg1 defaultValue:(double)arg2 maxValue:(double)arg3 minValue:(double)arg4;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 block:(CDUnknownBlockType)arg5;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4;
- (id)cacheValue:(id)arg1 forKey:(id)arg2;
- (id)numberFromString:(id)arg1;
- (id)measurementConfigFromDatabase;
- (void)parseRemoteConfigFromMeasurementConfig:(id)arg1;
@property(readonly, nonatomic, getter=isConsentSettings3PEnabled) _Bool consentSettings3PEnabled;
@property(readonly, nonatomic, getter=isConsentSettingsEnabled) _Bool consentSettingsEnabled;
@property(readonly, nonatomic) double remoteConfigCacheTimeInterval;
@property(readonly, nonatomic) double attributionCacheTTLInterval;
@property(readonly, nonatomic) int maxDeferredDeepLinkRetryCount;
@property(readonly, nonatomic, getter=isDeferredDeepLinkEnabled) _Bool deferredDeepLinkEnabled;
@property(readonly, nonatomic) _Bool lastAdvertisingIDResetFeatureEnabled;
@property(readonly, nonatomic) _Bool appInBackgroundParameterEnabled;
@property(readonly, nonatomic) _Bool appBackgroundedEventEnabled;
@property(readonly, nonatomic) _Bool checksumEnabled;
@property(readonly, nonatomic) int analyticsAccountTimeZoneOffsetMinutes;
@property(readonly, nonatomic, getter=isEventSamplingEnabled) _Bool eventSamplingEnabled;
@property(readonly, nonatomic) _Bool blacklistPublic;
@property(readonly, nonatomic) _Bool blacklistInternal;
@property(readonly, nonatomic) double uploadingRealTimeInterval;
@property(readonly, nonatomic) double uploadingDebugModeInterval;
@property(readonly, nonatomic) int maxRealtimeEventCountPerDay;
@property(readonly, nonatomic) int maxBundlesCreatedPerIteration;
@property(readonly, nonatomic) double uploadingRetryInterval;
@property(readonly, nonatomic) int uploadingRetryCount;
@property(readonly, nonatomic) long long uploadMaxSizeLimitBytes;
@property(readonly, nonatomic) long long uploadMaxEventsPerBundle;
@property(readonly, nonatomic) long long uploadMaxBundlesLimit;
@property(readonly, nonatomic) double uploadingInitialDelayInterval;
@property(readonly, nonatomic) double uploadingInterval;
@property(readonly, nonatomic) int maxEventsStored;
@property(readonly, nonatomic) int maxPublicEventParams;
@property(readonly, nonatomic) int maxEventNameCardinality;
@property(readonly, nonatomic) int maxPublicUserProperties;
@property(readonly, nonatomic) int maxTrackedCurrencies;
@property(readonly, nonatomic) int maxErrorEventsPerDay;
@property(readonly, nonatomic) int maxPublicEventsPerDay;
@property(readonly, nonatomic) int maxEventsPerDay;
@property(readonly, nonatomic) int maxConversionsPerDay;
@property(readonly, nonatomic) _Bool configurableLimitsEnabled;
- (void)setRandomGeneratorStudyEnabled:(_Bool)arg1;
- (_Bool)randomGeneratorStudyEnabled;
- (_Bool)currentRandomGeneratorStudyEnabledFlag;
@property(readonly, nonatomic) _Bool redundantEngagementRemovalEnabled;
@property(readonly, nonatomic) _Bool efficientEngagementReportingEnabled;
@property(readonly, nonatomic) double sessionEventUserEngagementInterval;
@property(readonly, nonatomic) double sessionDefaultTimeoutInterval;
@property(readonly, nonatomic) double sessionDefaultMinimumInterval;
@property(readonly, nonatomic) double networkTimeout;
@property(readonly, nonatomic, getter=isNetworkBackgroundSessionEnabled) _Bool networkBackgroundSessionEnabled;
@property(readonly, nonatomic) double monitoringSamplePeriod;
@property(readonly, nonatomic) _Bool gateIDFAOnATTMASEnabled;
@property(readonly, nonatomic) double adIDCacheTime;
@property(readonly, nonatomic) NSArray *experimentIDs;
@property(readonly, nonatomic) double maxQueueTime;
@property(readonly, nonatomic) double databaseDeleteStaleBundlesInterval;
@property(readonly, nonatomic) int maxParametersPerFilter;
@property(readonly, nonatomic) int maxFilterResultCount;
@property(readonly, nonatomic) int maxFiltersPerAudience;
@property(readonly, nonatomic) int maxAudienceCount;
@property(readonly, nonatomic) double uploadingBackoffInterval;
- (id)remoteConfigURLWithAppInstanceID:(id)arg1 platform:(id)arg2 SDKVersion:(long long)arg3;
@property(readonly, nonatomic) double lastRemoteConfigUpdateTimestamp;
@property(readonly, nonatomic) long long version;
@property(readonly, nonatomic, getter=isExpired) _Bool expired;
- (int)samplingRateForEvent:(id)arg1;
- (_Bool)eventHasSamplingRate:(id)arg1;
- (_Bool)isEventCustomConversion:(id)arg1;
- (_Bool)isEventBlacklisted:(id)arg1;
- (id)eventConfigWithName:(id)arg1;
- (_Bool)updateMeasurementConfig:(id)arg1;
- (void)reset;
- (_Bool)activateNewSnapshot;
- (_Bool)shouldFetchExperimentsForClient:(id)arg1;
- (void)client:(id)arg1 didReceiveFetchError:(id)arg2;
- (void)clientDidReceiveNewSnapshot:(id)arg1;
- (id)dynamicCustomPropertiesForSDKProperty:(id)arg1;
- (id)initWithAppID:(id)arg1 database:(id)arg2 measurementConfig:(id)arg3 experimentManager:(id)arg4;
- (id)initWithAppID:(id)arg1 database:(id)arg2 experimentManager:(id)arg3;
- (id)initWithAppID:(id)arg1 database:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property(readonly) Class superclass;

@end

@interface APMScheduler : NSObject
{
    NSObject<OS_dispatch_queue> *_workerQueue;
}

+ (_Bool)checkOnBackgroundThreadWithMethodName:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue=_workerQueue;
- (void)dispatchSyncOnWorkerQueueBlockID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)scheduleOnWorkerQueueBlockID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithWorkerQueueLabel:(id)arg1;

@end

@interface APMScreen : NSObject
{
    _Bool _isManuallySet;
    _Bool _isManuallyTracked;
    NSString *_name;
    NSString *_className;
    long long _instanceID;
    double _eventTimestamp;
}

- (void).cxx_destruct;
@property(nonatomic) double eventTimestamp; // @synthesize eventTimestamp=_eventTimestamp;
@property(nonatomic) _Bool isManuallyTracked; // @synthesize isManuallyTracked=_isManuallyTracked;
@property(nonatomic) _Bool isManuallySet; // @synthesize isManuallySet=_isManuallySet;
@property(readonly, nonatomic) long long instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 className:(id)arg2 instanceID:(long long)arg3;

@end

@interface APMScreenViewReporter : NSObject
{
    UIViewController *_currentViewController;
    id <APMScreenViewReporterDelegate> _firebasePerfDelegate;
    APMScreen *_currentScreen;
    APMScreen *_previousScreen;
    _Bool _allowScreenParameters;
    _Bool _allowPostScreenDidChangeNotification;
    _Bool _allowScreenViewEvent;
    _Bool _isAppActive;
    _Bool _appHasBeenInitialized;
    long long _currentScreenInstanceID;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)notCalled;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (long long)incrementScreenInstanceID;
- (void)handleApplicationWillResignActive:(id)arg1;
- (void)handleApplicationDidBecomeActive:(id)arg1;
- (void)handleWindowDidResign:(id)arg1;
- (void)logViewScreenEventWithPreviousScreen:(id)arg1 newScreen:(id)arg2 parameters:(id)arg3;
- (void)postScreenDidChangeNotificationWithPreviousScreen:(id)arg1 newScreen:(id)arg2;
- (void)setCurrentViewController:(id)arg1;
- (id)firebasePerfDelegate;
- (void)setFirebasePerfDelegate:(id)arg1;
- (void)viewControllerDidDisappear:(id)arg1;
- (void)viewControllerDidAppear:(id)arg1;
- (id)screenParameters;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)trackScreenWithParameters:(id)arg1 timestamp:(double)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (_Bool)isAppActive;
- (void)dealloc;
- (id)init;

@end

@interface APMSearchAdReporter : NSObject
{
    APMAlarm *_searchAdReporterAlarm;
    APMPersistedConfig *_persistedConfig;
    _Bool _searchAdReporterEnabled;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isSearchAdReporterEnabled) _Bool searchAdReporterEnabled; // @synthesize searchAdReporterEnabled=_searchAdReporterEnabled;
- (void)lookUpAdConversionDetails;
- (void)logCampaignEventWithSearchAdCampaign:(_Bool)arg1 campaign:(id)arg2 term:(id)arg3;
- (id)adClientInstance;
- (void)cancelScheduling;
- (void)scheduleSearchAdReport;
- (void)maybeLogIAdCampaignEvent;
- (void)dealloc;
- (void)start;
- (id)initWithWorkerQueue:(id)arg1 persistedConfig:(id)arg2;

@end

@interface APMSequenceTimestampsCache : NSObject
{
    NSMutableDictionary *_allSequenceTimestampsByFilterID;
    NSNumber *_audienceID;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSNumber *audienceID; // @synthesize audienceID=_audienceID;
- (id)sequenceFilterResultTimestamps;
- (void)setUserPropertyTimestamp:(double)arg1 forFilterID:(id)arg2;
- (void)addEventFilterTimestamp:(double)arg1 forFilterID:(id)arg2;
- (id)sequenceTimestampsForFilterID:(id)arg1;
- (id)initWithAudienceID:(id)arg1;

@end

@interface APMSessionReporter : NSObject
{
    APMPersistedConfig *_persistedConfig;
    APMAlarm *_sessionStartTimer;
    APMAlarm *_userEngagementTimer;
    double _engagementStartUptime;
    double _freerideEngagementStartUptime;
    _Bool _reportingEnabled;
    double _minimumSessionInterval;
    double _timeoutSessionInterval;
}

- (void).cxx_destruct;
@property(nonatomic) double timeoutSessionInterval; // @synthesize timeoutSessionInterval=_timeoutSessionInterval;
@property(nonatomic) double minimumSessionInterval; // @synthesize minimumSessionInterval=_minimumSessionInterval;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void)setSessionID:(id)arg1 withSessionNumber:(id)arg2;
- (void)updatePropertiesForNewSessionStart;
- (long long)cutFreerideEngagementTimeMillis;
- (double)incurredEngagementTime;
- (double)currentClockTime;
- (double)currentUptime;
- (void)rescheduleUserEngagementTimer;
- (void)rescheduleSessionStartTimer;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)logAppBackgroundEvent:(long long)arg1;
- (long long)logEngagementEventAndReturnTimeWithScreen:(id)arg1 isRedundant:(_Bool)arg2;
- (void)logUserEngagementEvent;
- (void)logSessionStartEvent;
- (id)sessionNumberProperty;
- (id)sessionIDPropertyWithTimestamp:(double)arg1;
- (_Bool)extendSession;
@property(readonly, nonatomic, getter=isSessionExpired) _Bool sessionExpired;
- (_Bool)shouldStartNewSession;
- (void)dealloc;
- (id)initWithPersistedConfig:(id)arg1;

@end

@interface APMSqliteStore : NSObject
{
    struct sqlite3 *_sqliteHandle;
    NSMutableDictionary *_statementCache;
    const char *_queueLabel;
    NSString *_databasePath;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
- (void)setDatabaseError:(id *)arg1 operation:(id)arg2;
- (id)monitorContextForDatabaseOperation:(id)arg1;
- (id)errorDescriptionForDatabaseOperation:(id)arg1;
- (id)lastErrorMessage;
- (_Bool)bindValues:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)updateStatementForRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (struct sqlite3_stmt *)upsertStatementForRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)valueAtColumn:(int)arg1 forStatement:(struct sqlite3_stmt *)arg2;
- (void)finalizeAndClearStatements;
- (void)closeDatabase;
- (_Bool)validateDatabaseWithError:(id *)arg1;
- (_Bool)openAndValidateDatabase:(id *)arg1;
- (_Bool)executeSQLStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (struct sqlite3_stmt *)prepareSQL:(id)arg1 error:(id *)arg2;
- (void)cleanUpStatement:(struct sqlite3_stmt *)arg1 forQuery:(id)arg2;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 error:(id *)arg2;
- (_Bool)rollbackTransaction;
- (_Bool)endTransaction;
- (_Bool)beginTransaction;
- (_Bool)performTransactionWithError:(id *)arg1 block:(CDUnknownBlockType)arg2;
- (id)numberForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3 withFilter:(CDUnknownBlockType)arg4;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (_Bool)deleteAllRecordsFromTableWithName:(id)arg1 error:(id *)arg2;
- (id)deleteRecordsFromTableWithName:(id)arg1 condition:(id)arg2 parameterValues:(id)arg3 error:(id *)arg4;
- (_Bool)deleteRecordFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (_Bool)increaseColumn:(id)arg1 byValue:(long long)arg2 inTable:(id)arg3 condition:(id)arg4 parameterValues:(id)arg5 error:(id *)arg6;
- (_Bool)updateAllRecordsInTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (_Bool)updateRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (_Bool)upsertRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)columnInfoForTableWithName:(id)arg1 error:(id *)arg2;
- (id)columnsForTableWithName:(id)arg1 error:(id *)arg2;
- (id)rowCountForTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (id)rowCountForTableWithName:(id)arg1 error:(id *)arg2;
- (id)tableExists:(id)arg1 error:(id *)arg2;
- (id)validateTableWithName:(id)arg1 requiredColumnNames:(id)arg2 addOnColumns:(id)arg3 error:(id *)arg4;
- (_Bool)copyContentsFromTable:(id)arg1 toTable:(id)arg2 error:(id *)arg3;
- (_Bool)renameTable:(id)arg1 toName:(id)arg2 error:(id *)arg3;
- (_Bool)dropTableWithName:(id)arg1 error:(id *)arg2;
- (_Bool)ensureTableWithName:(id)arg1 createSQL:(id)arg2 requiredColumnNames:(id)arg3 addOnColumns:(id)arg4 error:(id *)arg5;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 modifyColumnInfo:(id)arg4 error:(id *)arg5;
- (_Bool)ensureSchemaOfTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
- (_Bool)closeAndDeleteDatabase;
@property(readonly, nonatomic) struct sqlite3 *sqliteHandle;
- (void)dealloc;
- (id)initWithDatabasePath:(id)arg1 error:(id *)arg2;

@end

@interface APMUserAttribute : NSObject
{
    NSString *_origin;
    NSString *_name;
    APMValue *_value;
    double _lastSetTimestamp;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) double lastSetTimestamp; // @synthesize lastSetTimestamp=_lastSetTimestamp;
@property(readonly, nonatomic) APMValue *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(readonly, nonatomic) APMPBUserAttribute *protoUserAttribute;
@property(readonly, nonatomic) _Bool isPublic;
- (id)initWithOrigin:(id)arg1 name:(id)arg2 value:(id)arg3 lastSetTimestamp:(double)arg4;

@end

@interface APMUserDefaults : NSObject
{
    NSString *_suiteName;
    NSString *_appNameRef;
    NSUserDefaults *_userDefaults;
    _Bool _useCFPreferencesLibrary;
    _Bool _isPreferenceFileExcluded;
}

+ (id)standardUserDefaults;
+ (_Bool)userPreferenceEnabled;
- (void).cxx_destruct;
@property _Bool isPreferenceFileExcluded; // @synthesize isPreferenceFileExcluded=_isPreferenceFileExcluded;
@property(nonatomic) _Bool useCFPreferencesLibrary; // @synthesize useCFPreferencesLibrary=_useCFPreferencesLibrary;
- (void)synchronize;
- (void)clearAllData;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (id)dictionaryForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (float)floatForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)initWithSuiteName:(id)arg1;
- (id)init;

@end

@interface APMValue : NSObject <NSCopying>
{
    id _value;
    long long _valueType;
}

+ (id)valueFromObject:(id)arg1 allowArray:(_Bool)arg2;
+ (id)valueFromObject:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long valueType; // @synthesize valueType=_valueType;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, nonatomic) NSArray *arrayValue;
@property(readonly, nonatomic) _Bool isArray;
@property(readonly, nonatomic) NSString *stringValue;
@property(readonly, nonatomic) _Bool isString;
@property(readonly, nonatomic) long long int64Value;
@property(readonly, nonatomic) _Bool isInt64;
@property(readonly, nonatomic) double doubleValue;
@property(readonly, nonatomic) _Bool isDouble;
- (id)initWithValueType:(long long)arg1 value:(id)arg2;
- (id)initWithArray:(id)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithInt64:(long long)arg1;
- (id)initWithDouble:(double)arg1;

@end

@interface PodsDummy_GoogleAppMeasurement : NSObject
{
}

@end

@interface GNCAdvertiserEndpointInfo : NSObject
{
    _Bool _clientResponseReceived;
    GNCAdvertiserConnectionInfo *_connectionInfo;
    long long _clientResponse;
    GNCConnectionResultHandlers *_connectionResultHandlers;
    GNCCoreConnection *_connection;
    GNCConnectionHandlers *_connectionHandlers;
}

+ (id)infoWithEndpointConnectionInfo:(id)arg1;
@property(retain, nonatomic) GNCConnectionHandlers *connectionHandlers; // @synthesize connectionHandlers=_connectionHandlers;
@property(nonatomic) __weak GNCCoreConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) GNCConnectionResultHandlers *connectionResultHandlers; // @synthesize connectionResultHandlers=_connectionResultHandlers;
@property(nonatomic) _Bool clientResponseReceived; // @synthesize clientResponseReceived=_clientResponseReceived;
@property(nonatomic) long long clientResponse; // @synthesize clientResponse=_clientResponse;
@property(retain, nonatomic) GNCAdvertiserConnectionInfo *connectionInfo; // @synthesize connectionInfo=_connectionInfo;
- (void).cxx_destruct;

@end

@interface GNCAdvertiser : NSObject
{
    int _status;
    GNCCore *_core;
    CDUnknownBlockType _initiationHandler;
    NSMutableDictionary *_endpoints;
}

+ (id)advertiserWithName:(id)arg1 serviceId:(id)arg2 strategy:(long long)arg3 connectionInitiationHandler:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) NSMutableDictionary *endpoints; // @synthesize endpoints=_endpoints;
@property(nonatomic) int status; // @synthesize status=_status;
@property(copy, nonatomic) CDUnknownBlockType initiationHandler; // @synthesize initiationHandler=_initiationHandler;
@property(retain, nonatomic) GNCCore *core; // @synthesize core=_core;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface GNCCore : NSObject
{
    Ptr_13b09c10 _core;
}

+ (id)coreWithCore:(Ptr_13b09c10)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface GNCPayloadInfo : NSObject
{
    NSProgress *_progress;
    CDUnknownBlockType _completion;
}

+ (id)infoWithProgress:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (void)callCompletion:(long long)arg1;

@end

@interface GNCCoreConnection : NSObject <GNCConnection>
{
    GNCCore *_core;
    NSString *_endpointId;
    CDUnknownBlockType _deallocHandler;
    NSMutableDictionary *_payloads;
}

+ (id)connectionWithEndpointId:(id)arg1 core:(id)arg2 deallocHandler:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSMutableDictionary *payloads; // @synthesize payloads=_payloads;
@property(copy, nonatomic) CDUnknownBlockType deallocHandler; // @synthesize deallocHandler=_deallocHandler;
@property(copy, nonatomic) NSString *endpointId; // @synthesize endpointId=_endpointId;
@property(retain, nonatomic) GNCCore *core; // @synthesize core=_core;
- (void).cxx_destruct;
- (id)sendPayload:(Ptr_f7260fc9)arg1 size:(unsigned long long)arg2 progress:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)sendFilePayload:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)sendStreamPayload:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)sendBytesPayload:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCDiscovererEndpointInfo : NSObject
{
    _Bool _clientResponseReceived;
    CDUnknownBlockType _lostHandler;
    CDUnknownBlockType _connInitHandler;
    CDUnknownBlockType _connFailureHandler;
    long long _clientResponse;
    CDUnknownBlockType _connectionHandler;
    GNCCoreConnection *_connection;
    GNCConnectionHandlers *_connectionHandlers;
}

@property(retain, nonatomic) GNCConnectionHandlers *connectionHandlers; // @synthesize connectionHandlers=_connectionHandlers;
@property(nonatomic) __weak GNCCoreConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) CDUnknownBlockType connectionHandler; // @synthesize connectionHandler=_connectionHandler;
@property(nonatomic) _Bool clientResponseReceived; // @synthesize clientResponseReceived=_clientResponseReceived;
@property(nonatomic) long long clientResponse; // @synthesize clientResponse=_clientResponse;
@property(copy, nonatomic) CDUnknownBlockType connFailureHandler; // @synthesize connFailureHandler=_connFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType connInitHandler; // @synthesize connInitHandler=_connInitHandler;
@property(copy, nonatomic) CDUnknownBlockType lostHandler; // @synthesize lostHandler=_lostHandler;
- (void).cxx_destruct;

@end

@interface GNCDiscoverer : NSObject
{
    int _status;
    GNCCore *_core;
    CDUnknownBlockType _endpointFoundHandler;
    NSMapTable *_endpoints;
}

+ (id)discovererWithServiceId:(id)arg1 strategy:(long long)arg2 endpointFoundHandler:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSMapTable *endpoints; // @synthesize endpoints=_endpoints;
@property(nonatomic) int status; // @synthesize status=_status;
@property(copy, nonatomic) CDUnknownBlockType endpointFoundHandler; // @synthesize endpointFoundHandler=_endpointFoundHandler;
@property(retain, nonatomic) GNCCore *core; // @synthesize core=_core;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface GNCBytesPayload : NSObject
{
    long long _identifier;
    NSData *_bytes;
}

+ (id)payloadWithBytes:(id)arg1 identifier:(long long)arg2;
+ (id)payloadWithBytes:(id)arg1;
@property(readonly, nonatomic) NSData *bytes; // @synthesize bytes=_bytes;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithBytes:(id)arg1 identifier:(long long)arg2;

@end

@interface GNCStreamPayload : NSObject
{
    long long _identifier;
    NSInputStream *_stream;
}

+ (id)payloadWithStream:(id)arg1 identifier:(long long)arg2;
+ (id)payloadWithStream:(id)arg1;
@property(readonly, nonatomic) NSInputStream *stream; // @synthesize stream=_stream;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithStream:(id)arg1 identifier:(long long)arg2;

@end

@interface GNCFilePayload : NSObject
{
    long long _identifier;
    NSURL *_fileURL;
}

+ (id)payloadWithFileURL:(id)arg1 identifier:(long long)arg2;
+ (id)payloadWithFileURL:(id)arg1;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)initWithFileURL:(id)arg1 identifier:(long long)arg2;

@end

@interface GNCAdvertiserConnectionInfo : NSObject <GNCAdvertiserConnectionInfo>
{
    NSString *_name;
    NSString *_authToken;
}

+ (id)infoWithName:(id)arg1 authToken:(id)arg2;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCDiscoveredEndpointInfo : NSObject <GNCDiscoveredEndpointInfo>
{
    CDUnknownBlockType _requestConnection;
    NSString *_name;
}

+ (id)infoWithName:(id)arg1 requestConnection:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) CDUnknownBlockType requestConnection; // @synthesize requestConnection=_requestConnection;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCDiscovererConnectionInfo : NSObject <GNCDiscovererConnectionInfo>
{
    NSString *_authToken;
}

+ (id)infoWithAuthToken:(id)arg1;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCConnectionHandlers : NSObject
{
    CDUnknownBlockType _bytesPayloadHandler;
    CDUnknownBlockType _streamPayloadHandler;
    CDUnknownBlockType _filePayloadHandler;
    CDUnknownBlockType _disconnectedHandler;
}

+ (id)handlersWithBuilder:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) CDUnknownBlockType disconnectedHandler; // @synthesize disconnectedHandler=_disconnectedHandler;
@property(copy, nonatomic) CDUnknownBlockType filePayloadHandler; // @synthesize filePayloadHandler=_filePayloadHandler;
@property(copy, nonatomic) CDUnknownBlockType streamPayloadHandler; // @synthesize streamPayloadHandler=_streamPayloadHandler;
@property(copy, nonatomic) CDUnknownBlockType bytesPayloadHandler; // @synthesize bytesPayloadHandler=_bytesPayloadHandler;
- (void).cxx_destruct;
- (id)initWithBuilderBlock:(CDUnknownBlockType)arg1;

@end

@interface GNCConnectionResultHandlers : NSObject
{
    CDUnknownBlockType _successHandler;
    CDUnknownBlockType _failureHandler;
}

+ (id)successHandler:(CDUnknownBlockType)arg1 failureHandler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType failureHandler; // @synthesize failureHandler=_failureHandler;
@property(copy, nonatomic) CDUnknownBlockType successHandler; // @synthesize successHandler=_successHandler;
- (void).cxx_destruct;
- (id)initWithSuccessHandler:(CDUnknownBlockType)arg1 failureHandler:(CDUnknownBlockType)arg2;

@end

@interface GNCAtomicBool_internal : NSObject
{
    _Bool _boolean;
}

+ (id)boolWrapperWithInitialValue:(_Bool)arg1;
@property _Bool boolean; // @synthesize boolean=_boolean;

@end

@interface GNCRunnableWrapper : NSObject
{
    Ptr_1a5c285f _runnable;
    struct Ptr<location::nearby::IOSAtomicBoolean, ObjectDestroyer> _canceled;
}

+ (id)wrapperWithRunnable:(Ptr_1a5c285f)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface GNCScheduledExecutorImpl : NSObject
{
    _Bool _shuttingDown;
    NSOperationQueue *_queue;
}

+ (id)implWithMaxConcurrency:(int)arg1;
@property _Bool shuttingDown; // @synthesize shuttingDown=_shuttingDown;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;

@end

@interface GNCMBLEAdvertisementHeader : NSObject
{
    unsigned char _version;
    unsigned char _numSlots;
    NSData *_serviceIDBloomFilter;
    NSData *_advertisementHash;
}

+ (id)headerFromData:(id)arg1;
+ (id)headerFromBase64String:(id)arg1;
+ (id)headerWithNumSlots:(unsigned char)arg1 serviceIDBloomFilter:(id)arg2 advertisementHash:(id)arg3;
@property(copy, nonatomic) NSData *advertisementHash; // @synthesize advertisementHash=_advertisementHash;
@property(copy, nonatomic) NSData *serviceIDBloomFilter; // @synthesize serviceIDBloomFilter=_serviceIDBloomFilter;
@property(nonatomic) unsigned char numSlots; // @synthesize numSlots=_numSlots;
@property(nonatomic) unsigned char version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)base64String;
- (id)data;

@end

@interface GNCMBLEAdvertisement : NSObject
{
    unsigned char _version;
    unsigned char _socketVersion;
    NSData *_serviceIDHash;
    NSData *_customData;
}

+ (id)advertisementFromData:(id)arg1;
+ (id)advertisementWithSocketVersion:(unsigned char)arg1 serviceIDHash:(id)arg2 customData:(id)arg3;
@property(copy, nonatomic) NSData *customData; // @synthesize customData=_customData;
@property(copy, nonatomic) NSData *serviceIDHash; // @synthesize serviceIDHash=_serviceIDHash;
@property(nonatomic) unsigned char socketVersion; // @synthesize socketVersion=_socketVersion;
@property(nonatomic) unsigned char version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)data;

@end

@interface GNCMPeripheralInfo : NSObject
{
    _Bool _initialConnectionDone;
    int _indexOfServiceToCheck;
    CBPeripheral *_peripheral;
    NSString *_endpointID;
    long long _state;
    CDUnknownBlockType _lostHandler;
    NSString *_advHeaderString;
    NSDictionary *_advertisementData;
    NSNumber *_numAdvSlots;
    NSDate *_lastObservedTime;
    NSDate *_lastMatchedTime;
    CDUnknownBlockType _charsHandler;
    CDUnknownBlockType _charValueHandler;
}

@property(copy, nonatomic) CDUnknownBlockType charValueHandler; // @synthesize charValueHandler=_charValueHandler;
@property(copy, nonatomic) CDUnknownBlockType charsHandler; // @synthesize charsHandler=_charsHandler;
@property(nonatomic) int indexOfServiceToCheck; // @synthesize indexOfServiceToCheck=_indexOfServiceToCheck;
@property(retain, nonatomic) NSDate *lastMatchedTime; // @synthesize lastMatchedTime=_lastMatchedTime;
@property(retain, nonatomic) NSDate *lastObservedTime; // @synthesize lastObservedTime=_lastObservedTime;
@property(retain, nonatomic) NSNumber *numAdvSlots; // @synthesize numAdvSlots=_numAdvSlots;
@property(retain, nonatomic) NSDictionary *advertisementData; // @synthesize advertisementData=_advertisementData;
@property(retain, nonatomic) NSString *advHeaderString; // @synthesize advHeaderString=_advHeaderString;
@property(nonatomic) _Bool initialConnectionDone; // @synthesize initialConnectionDone=_initialConnectionDone;
@property(copy, nonatomic) CDUnknownBlockType lostHandler; // @synthesize lostHandler=_lostHandler;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *endpointID; // @synthesize endpointID=_endpointID;
@property(retain, nonatomic) CBPeripheral *peripheral; // @synthesize peripheral=_peripheral;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)updateObservedTimestamp;
- (void)updateMatchedTimestamp;
- (id)initWithPeripheral:(id)arg1 advHeaderString:(id)arg2 advertisementData:(id)arg3 numAdvSlots:(id)arg4;

@end

@interface GNCMBLECentral : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate, GNSCentralManagerDelegate>
{
    _Bool _callbacksEnabled;
    NSString *_serviceID;
    NSData *_serviceHash;
    CDUnknownBlockType _endpointFoundHandler;
    CDUnknownBlockType _callbacksDoneHandler;
    NSObject<OS_dispatch_queue> *_clientCallbackQueue;
    NSObject<OS_dispatch_queue> *_internalCallbackQueue;
    CBCentralManager *_centralManager;
    NSObject<OS_dispatch_queue> *_selfQueue;
    NSMutableDictionary *_nearbyPeripheralsById;
    NSMutableDictionary *_nearbyPeripheralsByAdv;
    NSMutableSet *_peripheralsReceivedScanResponse;
    CDUnknownBlockType _purgeExpiredPeripherals;
    GNSCentralManager *_socketCentralManager;
    NSMutableDictionary *_customDataDict;
}

@property(retain, nonatomic) NSMutableDictionary *customDataDict; // @synthesize customDataDict=_customDataDict;
@property(retain, nonatomic) GNSCentralManager *socketCentralManager; // @synthesize socketCentralManager=_socketCentralManager;
@property(copy, nonatomic) CDUnknownBlockType purgeExpiredPeripherals; // @synthesize purgeExpiredPeripherals=_purgeExpiredPeripherals;
@property(retain, nonatomic) NSMutableSet *peripheralsReceivedScanResponse; // @synthesize peripheralsReceivedScanResponse=_peripheralsReceivedScanResponse;
@property(retain, nonatomic) NSMutableDictionary *nearbyPeripheralsByAdv; // @synthesize nearbyPeripheralsByAdv=_nearbyPeripheralsByAdv;
@property(retain, nonatomic) NSMutableDictionary *nearbyPeripheralsById; // @synthesize nearbyPeripheralsById=_nearbyPeripheralsById;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *selfQueue; // @synthesize selfQueue=_selfQueue;
@property(retain, nonatomic) CBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(nonatomic) _Bool callbacksEnabled; // @synthesize callbacksEnabled=_callbacksEnabled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *internalCallbackQueue; // @synthesize internalCallbackQueue=_internalCallbackQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientCallbackQueue; // @synthesize clientCallbackQueue=_clientCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType callbacksDoneHandler; // @synthesize callbacksDoneHandler=_callbacksDoneHandler;
@property(copy, nonatomic) CDUnknownBlockType endpointFoundHandler; // @synthesize endpointFoundHandler=_endpointFoundHandler;
@property(copy, nonatomic) NSData *serviceHash; // @synthesize serviceHash=_serviceHash;
@property(copy, nonatomic) NSString *serviceID; // @synthesize serviceID=_serviceID;
- (void).cxx_destruct;
- (void)callbackAsync:(CDUnknownBlockType)arg1;
- (id)allPeripherals;
- (void)initialConnectionDoneForPerpheral:(id)arg1;
- (void)forgetPeripheral:(id)arg1;
- (void)losePeripheral:(id)arg1;
- (void)periodicallyPurgeExpiredPeripherals;
- (void)loseAllNearbyEndpointsAndStopScanning;
- (void)errorReadingGATTForPeripheralInfo:(id)arg1;
- (void)completeGATTReadWithData:(id)arg1 forPeripheralInfo:(id)arg2;
- (void)centralManagerDidUpdateBLEState:(id)arg1;
- (void)centralManager:(id)arg1 didDiscoverPeer:(id)arg2 advertisementData:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)dealloc;
- (id)initWithServiceId:(id)arg1 endpointFoundHandler:(CDUnknownBlockType)arg2 callbacksDoneHandler:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCMBLEConnection : NSObject <GNSSocketDelegate, GNCMConnection>
{
    GNCMConnectionHandlers *_connectionHandlers;
    NSObject<OS_dispatch_queue> *_selfQueue;
    GNSSocket *_socket;
    NSData *_serviceIdHash;
    NSObject<OS_dispatch_queue> *_callbackQueue;
}

+ (id)connectionWithSocket:(id)arg1 serviceId:(id)arg2 callbackQueue:(id)arg3;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSData *serviceIdHash; // @synthesize serviceIdHash=_serviceIdHash;
@property(retain, nonatomic) GNSSocket *socket; // @synthesize socket=_socket;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *selfQueue; // @synthesize selfQueue=_selfQueue;
@property(retain, nonatomic) GNCMConnectionHandlers *connectionHandlers; // @synthesize connectionHandlers=_connectionHandlers;
- (void).cxx_destruct;
- (void)socket:(id)arg1 didReceiveData:(id)arg2;
- (void)socket:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)socketDidConnect:(id)arg1;
- (void)sendData:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCMBLEPeripheral : NSObject <CBPeripheralManagerDelegate>
{
    _Bool _callbacksEnabled;
    CDUnknownBlockType _callbacksDoneHandler;
    NSObject<OS_dispatch_queue> *_clientCallbackQueue;
    NSObject<OS_dispatch_queue> *_internalCallbackQueue;
    NSObject<OS_dispatch_queue> *_selfQueue;
    NSString *_advertisementHeaderString;
    NSData *_gattAdvertisementData;
    CBPeripheralManager *_peripheralManager;
    CBMutableService *_advertisementService;
    GNSPeripheralManager *_socketPeripheralManager;
}

@property(retain, nonatomic) GNSPeripheralManager *socketPeripheralManager; // @synthesize socketPeripheralManager=_socketPeripheralManager;
@property(retain, nonatomic) CBMutableService *advertisementService; // @synthesize advertisementService=_advertisementService;
@property(retain, nonatomic) CBPeripheralManager *peripheralManager; // @synthesize peripheralManager=_peripheralManager;
@property(copy, nonatomic) NSData *gattAdvertisementData; // @synthesize gattAdvertisementData=_gattAdvertisementData;
@property(copy, nonatomic) NSString *advertisementHeaderString; // @synthesize advertisementHeaderString=_advertisementHeaderString;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *selfQueue; // @synthesize selfQueue=_selfQueue;
@property(nonatomic) _Bool callbacksEnabled; // @synthesize callbacksEnabled=_callbacksEnabled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *internalCallbackQueue; // @synthesize internalCallbackQueue=_internalCallbackQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientCallbackQueue; // @synthesize clientCallbackQueue=_clientCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType callbacksDoneHandler; // @synthesize callbacksDoneHandler=_callbacksDoneHandler;
- (void).cxx_destruct;
- (void)callbackAsync:(CDUnknownBlockType)arg1;
- (void)stopAdvertising;
- (void)peripheralManager:(id)arg1 didReceiveReadRequest:(id)arg2;
- (void)peripheralManagerDidStartAdvertising:(id)arg1 error:(id)arg2;
- (void)peripheralManagerDidUpdateState:(id)arg1;
- (void)dealloc;
- (id)initWithServiceId:(id)arg1 advertisementData:(id)arg2 endpointConnectedHandler:(CDUnknownBlockType)arg3 callbacksDoneHandler:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCMBLESocketDelegate : NSObject <GNSSocketDelegate>
{
    CDUnknownBlockType _connectedHandler;
}

+ (id)delegateWithConnectedHandler:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) CDUnknownBlockType connectedHandler; // @synthesize connectedHandler=_connectedHandler;
- (void).cxx_destruct;
- (void)socket:(id)arg1 didReceiveData:(id)arg2;
- (void)socket:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)socketDidConnect:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNCMBloomFilter : NSObject
{
    NSMutableData *_bits;
    unsigned long long _numberOfBits;
}

+ (id)filterWithBits:(id)arg1;
@property(nonatomic) unsigned long long numberOfBits; // @synthesize numberOfBits=_numberOfBits;
@property(retain, nonatomic) NSMutableData *bits; // @synthesize bits=_bits;
- (void).cxx_destruct;
- (_Bool)isBitSet:(int)arg1;
- (void)setBit:(int)arg1;
- (_Bool)mayContainString:(id)arg1;
- (void)addString:(id)arg1;
- (void)computeBits:(id)arg1 bitHandler:(CDUnknownBlockType)arg2;

@end

@interface GNCMConnectionHandlers : NSObject
{
    CDUnknownBlockType _payloadHandler;
    CDUnknownBlockType _disconnectedHandler;
}

+ (id)payloadHandler:(CDUnknownBlockType)arg1 disconnectedHandler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType disconnectedHandler; // @synthesize disconnectedHandler=_disconnectedHandler;
@property(copy, nonatomic) CDUnknownBlockType payloadHandler; // @synthesize payloadHandler=_payloadHandler;
- (void).cxx_destruct;

@end

@interface GNSCentralManager : NSObject <CBCentralManagerDelegate>
{
    NSString *_advertisedName;
    CBUUID *_advertisedServiceUUID;
    NSArray *_advertisedServiceUUIDs;
    CBCentralManager *_cbCentralManager;
    NSMapTable *_centralPeerManagers;
    _Bool _cbCentralScanStarted;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _scanning;
    CBUUID *_socketServiceUUID;
    id <GNSCentralManagerDelegate> _delegate;
}

+ (id)centralManagerWithDelegate:(id)arg1 queue:(id)arg2 options:(id)arg3;
@property(nonatomic) __weak id <GNSCentralManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic, getter=isScanning) _Bool scanning; // @synthesize scanning=_scanning;
@property(readonly, nonatomic) CBUUID *socketServiceUUID; // @synthesize socketServiceUUID=_socketServiceUUID;
- (void).cxx_destruct;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManagerDidUpdateState:(id)arg1;
- (id)centralPeerForPeripheral:(id)arg1;
- (id)createCentralPeerManagerWithPeripheral:(id)arg1;
- (id)cbCentralManager;
- (void)centralPeerManagerDidDisconnect:(id)arg1;
- (void)cancelPeripheralConnectionForPeer:(id)arg1;
- (void)connectPeripheralForPeer:(id)arg1 options:(id)arg2;
- (void)peripheralDisconnected:(id)arg1 withError:(id)arg2;
- (void)stopCBScan;
- (void)startCBScan;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) long long cbCentralManagerState;
- (id)retrieveCentralPeerWithIdentifier:(id)arg1;
- (void)stopNoScanMode;
- (void)retrievePeripheralWithIdentifier:(id)arg1 advertisementData:(id)arg2;
- (void)startNoScanModeWithAdvertisedServiceUUIDs:(id)arg1;
- (void)stopScan;
- (void)startScanWithAdvertisedServiceUUIDs:(id)arg1;
- (void)startScanWithAdvertisedName:(id)arg1 advertisedServiceUUID:(id)arg2;
- (void)dealloc;
- (id)initWithSocketServiceUUID:(id)arg1;
- (id)initWithSocketServiceUUID:(id)arg1 queue:(id)arg2;
- (id)init;
- (id)testing_cbCentralManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNSCentralPeerManager : NSObject <GNSWeavePacketHandler, GNSSocketOwner, CBPeripheralDelegate>
{
    _Bool _shouldAddPairingCharacteristic;
    int _indexOfServiceToCheck;
    CBPeripheral *_cbPeripheral;
    unsigned long long _socketMaximumUpdateValueLength;
    long long _state;
    GNSCentralManager *_centralManager;
    NSObject<OS_dispatch_queue> *_queue;
    CBService *_socketService;
    CBCharacteristic *_outgoingChar;
    CBCharacteristic *_incomingChar;
    CBCharacteristic *_pairingChar;
    GNSSocket *_socket;
    CDUnknownBlockType _discoveringServiceSocketCompletion;
    CDUnknownBlockType _pairingCompletion;
    NSMutableArray *_readRSSIValueCompletions;
    NSError *_disconnectedError;
    NSData *_connectionRequestData;
    NSDate *_startConnectionTime;
    NSTimer *_connectionConfirmTimer;
    CDUnknownBlockType _dataWriteCompletion;
}

+ (id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
@property(copy, nonatomic) CDUnknownBlockType dataWriteCompletion; // @synthesize dataWriteCompletion=_dataWriteCompletion;
@property(retain, nonatomic) NSTimer *connectionConfirmTimer; // @synthesize connectionConfirmTimer=_connectionConfirmTimer;
@property(retain, nonatomic) NSDate *startConnectionTime; // @synthesize startConnectionTime=_startConnectionTime;
@property(retain, nonatomic) NSData *connectionRequestData; // @synthesize connectionRequestData=_connectionRequestData;
@property(retain, nonatomic) NSError *disconnectedError; // @synthesize disconnectedError=_disconnectedError;
@property(retain, nonatomic) NSMutableArray *readRSSIValueCompletions; // @synthesize readRSSIValueCompletions=_readRSSIValueCompletions;
@property(copy, nonatomic) CDUnknownBlockType pairingCompletion; // @synthesize pairingCompletion=_pairingCompletion;
@property(nonatomic) _Bool shouldAddPairingCharacteristic; // @synthesize shouldAddPairingCharacteristic=_shouldAddPairingCharacteristic;
@property(copy, nonatomic) CDUnknownBlockType discoveringServiceSocketCompletion; // @synthesize discoveringServiceSocketCompletion=_discoveringServiceSocketCompletion;
@property(nonatomic) __weak GNSSocket *socket; // @synthesize socket=_socket;
@property(retain, nonatomic) CBCharacteristic *pairingChar; // @synthesize pairingChar=_pairingChar;
@property(retain, nonatomic) CBCharacteristic *incomingChar; // @synthesize incomingChar=_incomingChar;
@property(retain, nonatomic) CBCharacteristic *outgoingChar; // @synthesize outgoingChar=_outgoingChar;
@property(retain, nonatomic) CBService *socketService; // @synthesize socketService=_socketService;
@property(nonatomic) int indexOfServiceToCheck; // @synthesize indexOfServiceToCheck=_indexOfServiceToCheck;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) GNSCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) unsigned long long socketMaximumUpdateValueLength; // @synthesize socketMaximumUpdateValueLength=_socketMaximumUpdateValueLength;
- (void).cxx_destruct;
- (id)testing_connectionConfirmTimer;
- (void)handleDataPacket:(id)arg1 context:(id)arg2;
- (void)handleErrorPacket:(id)arg1 context:(id)arg2;
- (void)handleConnectionConfirmPacket:(id)arg1 context:(id)arg2;
- (void)handleConnectionRequestPacket:(id)arg1 context:(id)arg2;
- (void)socketWillBeDeallocated:(id)arg1;
- (void)disconnectSocket:(id)arg1;
- (id)socketServiceIdentifier:(id)arg1;
- (void)sendData:(id)arg1 socket:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (unsigned long long)socketMaximumUpdateValueLength:(id)arg1;
- (void)peripheral:(id)arg1 didReadRSSI:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)sendPacket:(id)arg1;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)handleWeaveError:(long long)arg1 socket:(id)arg2;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)callDataWriteCompletionWithError:(id)arg1;
- (void)timeOutConnectionForTimer:(id)arg1;
- (_Bool)isBLEConnected;
- (void)callRSSICompletionWithRSSIValue:(id)arg1 error:(id)arg2;
- (void)cleanRSSICompletionAfterDisconnectionWithError:(id)arg1;
@property(readonly, nonatomic) CBPeripheral *cbPeripheral; // @synthesize cbPeripheral=_cbPeripheral;
- (void)setCharacteristicNotification;
- (_Bool)findCharacteristicsFromService:(id)arg1;
- (void)discoverCharacteristics;
- (void)discoverService;
- (void)bleDisconnected;
- (void)disconnectingWithError:(id)arg1;
- (void)cbCentralManagerStateDidUpdate;
- (void)bleDisconnectedWithError:(id)arg1;
- (void)bleConnected;
- (void)bleConnect;
@property(readonly, copy) NSString *description;
- (void)readRSSIWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSUUID *identifier;
- (void)startBluetoothPairingWithCompletion:(CDUnknownBlockType)arg1;
- (void)cancelPendingSocket;
- (void)socketWithPairingCharacteristic:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)socketWithHandshakeData:(id)arg1 pairingCharacteristic:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithPeripheral:(id)arg1 centralManager:(id)arg2;
- (id)initWithPeripheral:(id)arg1 centralManager:(id)arg2 queue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNSPeripheralManager : NSObject <CBPeripheralManagerDelegate>
{
    NSMutableDictionary *_peripheralServiceManagers;
    NSMutableDictionary *_handlerQueuePerSocketIdentifier;
    NSDictionary *_advertisementInProgressData;
    NSDictionary *_advertisementData;
    NSObject<OS_dispatch_queue> *_queue;
    NSDate *_btCrashLastResettingDate;
    long long _btCrashCount;
    _Bool _started;
    CDUnknownBlockType _peripheralManagerStateHandler;
    NSString *_advertisedName;
    unsigned long long _backgroundTaskId;
    NSString *_restoreIdentifier;
    CBPeripheralManager *_cbPeripheralManager;
}

@property(readonly, nonatomic) CBPeripheralManager *cbPeripheralManager; // @synthesize cbPeripheralManager=_cbPeripheralManager;
@property(readonly, nonatomic) NSString *restoreIdentifier; // @synthesize restoreIdentifier=_restoreIdentifier;
@property(nonatomic) unsigned long long backgroundTaskId; // @synthesize backgroundTaskId=_backgroundTaskId;
@property(copy, nonatomic) NSString *advertisedName; // @synthesize advertisedName=_advertisedName;
@property(copy, nonatomic) CDUnknownBlockType peripheralManagerStateHandler; // @synthesize peripheralManagerStateHandler=_peripheralManagerStateHandler;
@property(nonatomic, getter=isStarted) _Bool started; // @synthesize started=_started;
- (void).cxx_destruct;
- (void)peripheralManagerIsReadyToUpdateSubscribers:(id)arg1;
- (void)peripheralManager:(id)arg1 didReceiveWriteRequests:(id)arg2;
- (void)peripheralManager:(id)arg1 didReceiveReadRequest:(id)arg2;
- (void)peripheralManager:(id)arg1 central:(id)arg2 didUnsubscribeFromCharacteristic:(id)arg3;
- (void)peripheralManager:(id)arg1 central:(id)arg2 didSubscribeToCharacteristic:(id)arg3;
- (void)peripheralManager:(id)arg1 didAddService:(id)arg2 error:(id)arg3;
- (void)peripheralManagerDidStartAdvertising:(id)arg1 error:(id)arg2;
- (void)peripheralManagerDidUpdateState:(id)arg1;
- (void)peripheralManager:(id)arg1 willRestoreState:(id)arg2;
- (void)updateBTCrashLoopHeuristic;
- (_Bool)isBTCrashLoop;
- (void)socketDidDisconnect:(id)arg1;
- (id)cbPeripheralManagerWithDelegate:(id)arg1 queue:(id)arg2 options:(id)arg3;
- (_Bool)updateOutgoingCharacteristic:(id)arg1 onSocket:(id)arg2;
- (void)processUpdateValueBlocks;
- (void)updateOutgoingCharOnSocket:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)updateAdvertisedServices;
- (void)removeAllBleServicesAndStopAdvertising;
- (void)addAllBleServicesAndStartAdvertising;
- (void)addBleServiceForServiceManager:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)stop;
- (void)start;
- (void)addPeripheralServiceManager:(id)arg1 bleServiceAddedCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long peripheralManagerState;
- (id)initWithAdvertisedName:(id)arg1 restoreIdentifier:(id)arg2;
- (id)initWithAdvertisedName:(id)arg1 restoreIdentifier:(id)arg2 queue:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNSPeripheralServiceManager : NSObject <GNSWeavePacketHandler, GNSSocketOwner>
{
    GNSPeripheralManager *_peripheralManager;
    _Bool _addPairingCharacteristic;
    CBMutableService *_cbService;
    CBMutableCharacteristic *_weaveIncomingChar;
    CBMutableCharacteristic *_weaveOutgoingChar;
    CBMutableCharacteristic *_pairingChar;
    NSMutableDictionary *_sockets;
    CDUnknownBlockType _shouldAcceptSocketHandler;
    CDUnknownBlockType _bleServiceAddedCompletion;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _advertising;
    CBUUID *_serviceUUID;
    long long _cbServiceState;
}

@property(readonly, nonatomic) long long cbServiceState; // @synthesize cbServiceState=_cbServiceState;
@property(nonatomic, getter=isAdvertising) _Bool advertising; // @synthesize advertising=_advertising;
@property(readonly, nonatomic) CBUUID *serviceUUID; // @synthesize serviceUUID=_serviceUUID;
- (void).cxx_destruct;
- (void)handleDataPacket:(id)arg1 context:(id)arg2;
- (void)handleErrorPacket:(id)arg1 context:(id)arg2;
- (void)handleConnectionConfirmPacket:(id)arg1 context:(id)arg2;
- (void)handleConnectionRequestPacket:(id)arg1 context:(id)arg2;
- (void)socketWillBeDeallocated:(id)arg1;
- (void)disconnectSocket:(id)arg1;
- (id)socketServiceIdentifier:(id)arg1;
- (void)sendData:(id)arg1 socket:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (unsigned long long)socketMaximumUpdateValueLength:(id)arg1;
- (void)central:(id)arg1 didUnsubscribeFromCharacteristic:(id)arg2;
- (void)central:(id)arg1 didSubscribeToCharacteristic:(id)arg2;
- (void)removeSocket:(id)arg1 withError:(id)arg2;
- (void)socketReady:(id)arg1;
- (void)sendData:(id)arg1 toSocket:(id)arg2 checkConnected:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)sendPacket:(id)arg1 toSocket:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)processWriteRequest:(id)arg1;
- (void)processWeaveWriteRequest:(id)arg1;
- (void)handleWeaveError:(long long)arg1 socket:(id)arg2;
- (long long)canProcessWriteRequest:(id)arg1;
- (void)processReadRequest:(id)arg1;
- (long long)canProcessReadRequest:(id)arg1;
- (void)addedToPeripheralManager:(id)arg1 bleServiceAddedCompletion:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)bleServiceAddedCompletion;
@property(readonly, nonatomic) CBMutableCharacteristic *pairingCharacteristic;
@property(readonly, nonatomic) CBMutableCharacteristic *weaveOutgoingCharacteristic;
@property(readonly, nonatomic) CBMutableCharacteristic *weaveIncomingCharacteristic;
@property(readonly, nonatomic) CBMutableService *cbService;
@property(readonly, nonatomic) __weak GNSPeripheralManager *peripheralManager;
@property(readonly, nonatomic) CDUnknownBlockType shouldAcceptSocketHandler;
- (void)restoredCBService:(id)arg1;
- (void)didRemoveCBService;
- (void)didAddCBServiceWithError:(id)arg1;
- (void)willAddCBService;
@property(readonly, copy) NSString *description;
- (id)initWithBleServiceUUID:(id)arg1 addPairingCharacteristic:(_Bool)arg2 shouldAcceptSocketHandler:(CDUnknownBlockType)arg3;
- (id)initWithBleServiceUUID:(id)arg1 addPairingCharacteristic:(_Bool)arg2 shouldAcceptSocketHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GNSSocket : NSObject
{
    NSMutableData *_incomingBuffer;
    id _peer;
    _Bool _connected;
    unsigned char _receivePacketCounter;
    unsigned char _sendPacketCounter;
    unsigned short _packetSize;
    id <GNSSocketDelegate> _delegate;
    NSUUID *_socketIdentifier;
    CDUnknownBlockType _sendChunkCallback;
    CDUnknownBlockType _incomingChunkReceivedCallback;
    id <GNSSocketOwner> _owner;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) id <GNSSocketOwner> owner; // @synthesize owner=_owner;
@property(readonly, nonatomic) unsigned char sendPacketCounter; // @synthesize sendPacketCounter=_sendPacketCounter;
@property(readonly, nonatomic) unsigned char receivePacketCounter; // @synthesize receivePacketCounter=_receivePacketCounter;
@property(nonatomic) unsigned short packetSize; // @synthesize packetSize=_packetSize;
@property(copy, nonatomic) CDUnknownBlockType incomingChunkReceivedCallback; // @synthesize incomingChunkReceivedCallback=_incomingChunkReceivedCallback;
@property(copy, nonatomic) CDUnknownBlockType sendChunkCallback; // @synthesize sendChunkCallback=_sendChunkCallback;
@property(retain, nonatomic) NSUUID *socketIdentifier; // @synthesize socketIdentifier=_socketIdentifier;
@property(nonatomic, getter=isConnected) _Bool connected; // @synthesize connected=_connected;
@property(nonatomic) __weak id <GNSSocketDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)peerAsCentral;
- (id)peerAsPeripheral;
- (_Bool)waitingForIncomingData;
- (void)didReceiveIncomingWeaveDataPacket:(id)arg1;
- (void)didDisconnectWithError:(id)arg1;
- (void)didConnect;
- (void)incrementSendPacketCounter;
- (void)incrementReceivePacketCounter;
- (id)initWithOwner:(id)arg1 peer:(id)arg2 queue:(id)arg3;
- (id)initWithOwner:(id)arg1 peripheralPeer:(id)arg2 queue:(id)arg3;
- (id)initWithOwner:(id)arg1 centralPeer:(id)arg2 queue:(id)arg3;
- (id)init;
@property(readonly, nonatomic) NSUUID *serviceIdentifier;
@property(readonly, nonatomic) NSUUID *peerIdentifier;
- (id)description;
- (void)disconnect;
- (void)sendData:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)isSendOperationInProgress;
- (void)dealloc;

@end

@interface GNSWeavePacket : NSObject
{
    unsigned char _packetCounter;
}

+ (id)parseData:(id)arg1 error:(out id *)arg2;
@property(readonly, nonatomic) unsigned char packetCounter; // @synthesize packetCounter=_packetCounter;
- (id)description;
- (id)serialize;
- (_Bool)visitWithHandler:(id)arg1 context:(id)arg2;
- (id)init;
- (id)initWithPacketCounter:(unsigned char)arg1;

@end

@interface GNSWeaveConnectionRequestPacket : GNSWeavePacket
{
    unsigned short _minVersion;
    unsigned short _maxVersion;
    unsigned short _maxPacketSize;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) unsigned short maxPacketSize; // @synthesize maxPacketSize=_maxPacketSize;
@property(readonly, nonatomic) unsigned short maxVersion; // @synthesize maxVersion=_maxVersion;
@property(readonly, nonatomic) unsigned short minVersion; // @synthesize minVersion=_minVersion;
- (void).cxx_destruct;
- (id)description;
- (id)serialize;
- (_Bool)visitWithHandler:(id)arg1 context:(id)arg2;
- (id)initWithPacketCounter:(unsigned char)arg1;
- (id)initWithMinVersion:(unsigned short)arg1 maxVersion:(unsigned short)arg2 maxPacketSize:(unsigned short)arg3 data:(id)arg4;

@end

@interface GNSWeaveConnectionConfirmPacket : GNSWeavePacket
{
    unsigned short _version;
    unsigned short _packetSize;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) unsigned short packetSize; // @synthesize packetSize=_packetSize;
@property(readonly, nonatomic) unsigned short version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)description;
- (id)serialize;
- (_Bool)visitWithHandler:(id)arg1 context:(id)arg2;
- (id)initWithPacketCounter:(unsigned char)arg1;
- (id)initWithVersion:(unsigned short)arg1 packetSize:(unsigned short)arg2 data:(id)arg3;

@end

@interface GNSWeaveErrorPacket : GNSWeavePacket
{
}

- (id)serialize;
- (_Bool)visitWithHandler:(id)arg1 context:(id)arg2;
- (id)initWithPacketCounter:(unsigned char)arg1;

@end

@interface GNSWeaveDataPacket : GNSWeavePacket
{
    _Bool _firstPacket;
    _Bool _lastPacket;
    NSData *_data;
}

+ (id)dataPacketWithPacketCounter:(unsigned char)arg1 packetSize:(unsigned short)arg2 data:(id)arg3 offset:(unsigned long long *)arg4;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic, getter=isLastPacket) _Bool lastPacket; // @synthesize lastPacket=_lastPacket;
@property(readonly, nonatomic, getter=isFirstPacket) _Bool firstPacket; // @synthesize firstPacket=_firstPacket;
- (void).cxx_destruct;
- (id)description;
- (id)serialize;
- (_Bool)visitWithHandler:(id)arg1 context:(id)arg2;
- (id)initWithPacketCounter:(unsigned char)arg1;
- (id)initWithPacketCounter:(unsigned char)arg1 firstPacket:(_Bool)arg2 lastPacket:(_Bool)arg3 data:(id)arg4;

@end

@interface CCTClearcutUploader : NSObject
{
    _Bool _isUploading;
    _Bool _collectForDebugEnabled;
    id <CCTClearcutAuthorizer> _authorizer;
    NSURL *_logDirectory;
    NSURL *_serverURL;
    NSURL *_batchServerURL;
    long long _uploadPeriodMilliseconds;
    unsigned long long _backgroundTaskID;
    NSObject<OS_dispatch_queue> *_queue;
    CCTLogWriter *_logWriter;
    NSHashTable *_listeners;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    id <CCTUploaderLockProvider> _lockProvider;
    CCTClearcutFlags *_flags;
    id <PHTPhenotype> _phenotype;
    CCTClearcutMetaLogger *_metaLogger;
    long long _lastPhenotypeUpdateTimeMilliseconds;
    unsigned long long _foregroundUploadDelaySeconds;
    id <CCTClockProtocol> _clock;
    id <NSObject> _backgroundObserver;
    id <NSObject> _foregroundObserver;
    NSObject<OS_dispatch_source> *_timer;
    id <CCTUploaderLock> _lock;
    NSMutableArray *_pendingHandlers;
    NSMutableArray *_pendingLogFiles;
    NSMutableDictionary *_pendingBatchLogFiles;
    GTMSessionFetcher *_currentFetcher;
    NSError *_lastError;
    unsigned long long _startUploadTimeMilliseconds;
    NSObject<OS_dispatch_source> *_collectForDebugTimer;
}

+ (_Bool)crashIfNecessary;
+ (void)crashIfMultipleUploadersInstantiated;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *collectForDebugTimer; // @synthesize collectForDebugTimer=_collectForDebugTimer;
@property(nonatomic) _Bool collectForDebugEnabled; // @synthesize collectForDebugEnabled=_collectForDebugEnabled;
@property(nonatomic) unsigned long long startUploadTimeMilliseconds; // @synthesize startUploadTimeMilliseconds=_startUploadTimeMilliseconds;
@property(retain, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
@property(retain, nonatomic) GTMSessionFetcher *currentFetcher; // @synthesize currentFetcher=_currentFetcher;
@property(retain, nonatomic) NSMutableDictionary *pendingBatchLogFiles; // @synthesize pendingBatchLogFiles=_pendingBatchLogFiles;
@property(retain, nonatomic) NSMutableArray *pendingLogFiles; // @synthesize pendingLogFiles=_pendingLogFiles;
@property(retain, nonatomic) NSMutableArray *pendingHandlers; // @synthesize pendingHandlers=_pendingHandlers;
@property(retain, nonatomic) id <CCTUploaderLock> lock; // @synthesize lock=_lock;
@property(nonatomic) _Bool isUploading; // @synthesize isUploading=_isUploading;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) id <NSObject> foregroundObserver; // @synthesize foregroundObserver=_foregroundObserver;
@property(retain, nonatomic) id <NSObject> backgroundObserver; // @synthesize backgroundObserver=_backgroundObserver;
@property(readonly, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(nonatomic) unsigned long long foregroundUploadDelaySeconds; // @synthesize foregroundUploadDelaySeconds=_foregroundUploadDelaySeconds;
@property(nonatomic) long long lastPhenotypeUpdateTimeMilliseconds; // @synthesize lastPhenotypeUpdateTimeMilliseconds=_lastPhenotypeUpdateTimeMilliseconds;
@property(retain, nonatomic) CCTClearcutMetaLogger *metaLogger; // @synthesize metaLogger=_metaLogger;
@property(readonly, nonatomic) id <PHTPhenotype> phenotype; // @synthesize phenotype=_phenotype;
@property(readonly, nonatomic) CCTClearcutFlags *flags; // @synthesize flags=_flags;
@property(retain, nonatomic) id <CCTUploaderLockProvider> lockProvider; // @synthesize lockProvider=_lockProvider;
@property(readonly, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(readonly, nonatomic) NSHashTable *listeners; // @synthesize listeners=_listeners;
@property(readonly, nonatomic) CCTLogWriter *logWriter; // @synthesize logWriter=_logWriter;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long backgroundTaskID; // @synthesize backgroundTaskID=_backgroundTaskID;
@property(nonatomic) long long uploadPeriodMilliseconds; // @synthesize uploadPeriodMilliseconds=_uploadPeriodMilliseconds;
@property(retain, nonatomic) NSURL *batchServerURL; // @synthesize batchServerURL=_batchServerURL;
@property(retain, nonatomic) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(readonly, nonatomic) NSURL *logDirectory; // @synthesize logDirectory=_logDirectory;
@property(readonly, nonatomic) id <CCTClearcutAuthorizer> authorizer; // @synthesize authorizer=_authorizer;
- (void).cxx_destruct;
- (void)setServerURL:(id)arg1 batchServerURL:(id)arg2;
- (void)stopCollectForDebugPeriodicUpload;
- (void)startCollectForDebugPeriodicUpload;
- (void)checkCollectForDebug;
- (void)setCollectForDebugExpiryTimeMilliseconds:(long long)arg1;
- (id)createFetcher:(id)arg1 context:(id)arg2 data:(id)arg3 logFiles:(id)arg4 currentTimeMilliseconds:(long long)arg5;
- (id)createLogRequest:(id)arg1 logData:(id)arg2 uploaderState:(id)arg3 currentTimeMilliseconds:(long long)arg4;
- (id)logFileIfEligibleForUpload:(id)arg1 context:(id)arg2;
- (void)maybeUpdateWithPhenotype;
- (void)cleanupOldLogFiles;
- (void)cleanupEmptyDirectories;
- (void)finishUploadAndCallHandlers;
- (void)cancelUpload;
- (void)processResponse:(id)arg1 context:(id)arg2 logFiles:(id)arg3 requestTime:(long long)arg4 isBatched:(_Bool)arg5 error:(id)arg6;
- (void)uploadBatch:(id)arg1 files:(id)arg2;
- (void)uploadNonBatch:(id)arg1;
- (void)uploadNext;
- (id)groupLogFiles:(id)arg1;
- (id)batchContextFromContext:(id)arg1;
- (id)logFiles;
- (_Bool)canUploadNow:(long long)arg1;
- (void)uploadWithCompletionHandler:(CDUnknownBlockType)arg1 isOnForeground:(_Bool)arg2;
- (void)endBackgroundTask;
- (_Bool)startBackgroundTask;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)stopAutoUploadOnForeground;
- (void)startAutoUploadOnForegroundWithDelay:(unsigned long long)arg1;
- (void)stopAutoUploadOnBackground;
- (void)startAutoUploadOnBackground;
- (void)stopPeriodicUpload;
- (void)startPeriodicUploadWithTimeInterval:(unsigned long long)arg1 leeway:(unsigned long long)arg2;
- (void)startPeriodicUploadWithTimeInterval:(unsigned long long)arg1;
- (void)stopAutoUpload;
- (void)startAutoUpload;
- (void)uploadWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithAuthorizer:(id)arg1 listeners:(id)arg2 logDirectory:(id)arg3 serverURL:(id)arg4 batchServerURL:(id)arg5 pseudonymousIDStore:(id)arg6 clock:(id)arg7 lockProvider:(id)arg8 flags:(id)arg9 phenotype:(id)arg10 clearcutLogger:(id)arg11;
- (id)initWithAuthorizer:(id)arg1 listeners:(id)arg2 logDirectory:(id)arg3 isSharedDirectory:(_Bool)arg4;
- (id)initWithAuthorizer:(id)arg1 listeners:(id)arg2;
- (id)initWithAuthorizer:(id)arg1;

@end

@interface CCTClearcutMetaLogger : NSObject <CCTClearcutAutoCountersDelegate, CCTClearcutMetaLoggerProtocol>
{
    CCTClearcutLogger *_logger;
    CCTClearcutFlags *_flags;
    CCTClearcutAutoCounters *_autoCounters;
    id <CCTClockProtocol> _clock;
}

@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(retain, nonatomic) CCTClearcutAutoCounters *autoCounters; // @synthesize autoCounters=_autoCounters;
@property(retain, nonatomic) CCTClearcutFlags *flags; // @synthesize flags=_flags;
@property(retain, nonatomic) CCTClearcutLogger *logger; // @synthesize logger=_logger;
- (void).cxx_destruct;
- (_Bool)isUnplugged;
- (int)qosTierFromContext:(id)arg1;
- (id)dimensionsOfContext:(id)arg1;
- (id)dimensionsForConnectionAndCharging;
- (void)flushCountersToLogger;
- (void)logUploadTime:(unsigned long long)arg1 endTime:(unsigned long long)arg2 error:(id)arg3;
- (void)logDeletingOverTTLLogFiles:(id)arg1;
- (void)logDeletingOverSizeLogFiles:(id)arg1;
- (void)logRequestUploadDelayWithCurrentTime:(long long)arg1 logFile:(id)arg2;
- (void)logResponse:(id)arg1 context:(id)arg2 startTime:(unsigned long long)arg3 finishTime:(unsigned long long)arg4;
- (void)logRequestContentLength:(id)arg1 request:(id)arg2;
- (void)logFilesWillBeUploaded:(id)arg1;
- (void)logCounters:(id)arg1;
- (long long)maxCounterCount;
- (_Bool)shouldLogCounters;
- (id)initWithLogger:(id)arg1 flags:(id)arg2 clock:(id)arg3;
- (id)initWithLogger:(id)arg1 flags:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTClearcutLogger : NSObject <CCTClearcutLogger>
{
    _Bool _isAnonymous;
    long long _logSource;
    NSURL *_logDirectory;
    NSString *_obfuscatedGaiaID;
    long long _qosTier;
    id <CCTClockProtocol> _clock;
    NSArray *_logTransformers;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
}

+ (void)useLocalCachesDirectory;
+ (void)setDefaultDirectory:(id)arg1;
+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (void)disableLogging;
@property(readonly, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(readonly, nonatomic) NSArray *logTransformers; // @synthesize logTransformers=_logTransformers;
@property(readonly, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(readonly, nonatomic) long long qosTier; // @synthesize qosTier=_qosTier;
@property(readonly, nonatomic) NSString *obfuscatedGaiaID; // @synthesize obfuscatedGaiaID=_obfuscatedGaiaID;
@property(readonly, nonatomic) NSURL *logDirectory; // @synthesize logDirectory=_logDirectory;
@property(readonly, nonatomic) _Bool isAnonymous; // @synthesize isAnonymous=_isAnonymous;
@property(readonly, nonatomic) long long logSource; // @synthesize logSource=_logSource;
- (void).cxx_destruct;
- (void)logWithBlock:(CDUnknownBlockType)arg1;
- (void)logWithExtension:(id)arg1;
- (void)log:(id)arg1;
- (id)newEvent;
- (id)initWithLogSource:(long long)arg1 obfuscatedGaiaID:(id)arg2 isAnonymous:(_Bool)arg3 logTransformers:(id)arg4 logDirectory:(id)arg5 clock:(id)arg6 pseudonymousIDStore:(id)arg7;
- (id)initAnonymousLoggerWithLogSource:(long long)arg1;
- (id)initWithLogSource:(long long)arg1 obfuscatedGaiaID:(id)arg2 logDirectory:(id)arg3 logTransformers:(id)arg4;
- (id)initWithLogSource:(long long)arg1 obfuscatedGaiaID:(id)arg2 logDirectory:(id)arg3;
- (id)initWithLogSource:(long long)arg1 obfuscatedGaiaID:(id)arg2;
- (id)initWithLogSource:(long long)arg1;
- (void)logCounters:(id)arg1 withModifier:(CDUnknownBlockType)arg2;
- (void)logCounters:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTLogSampler : NSObject <CCTClearcutLogTransformer>
{
    CCTClearcutFlags *_flags;
    NSString *_idfv;
}

@property(readonly, nonatomic) NSString *idfv; // @synthesize idfv=_idfv;
@property(readonly, nonatomic) CCTClearcutFlags *flags; // @synthesize flags=_flags;
- (void).cxx_destruct;
- (_Bool)shouldSampleLocally:(id)arg1;
- (id)transform:(id)arg1;
- (id)initWithFlags:(id)arg1 idfv:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTClearcutFlags : NSObject
{
    PHTPhenotypeFlags *_allFlags;
    NSMutableDictionary *_logSourceToSamplingRulesDict;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSMutableDictionary *logSourceToSamplingRulesDict; // @synthesize logSourceToSamplingRulesDict=_logSourceToSamplingRulesDict;
@property(readonly, nonatomic) PHTPhenotypeFlags *allFlags; // @synthesize allFlags=_allFlags;
- (void).cxx_destruct;
- (id)logSamplingRulesForLogSource:(long long)arg1;
@property(readonly, nonatomic) _Bool logSamplingRulesEnabled;
@property(readonly, nonatomic) unsigned long long collectForDebugCheckOnForegroundDelaySeconds;
@property(readonly, nonatomic) unsigned long long collectForDebugUploadIntervalSeconds;
@property(readonly, nonatomic) _Bool shouldSampleAllLogSources;
@property(readonly, nonatomic) _Bool batchUpload;
@property(readonly, nonatomic) _Bool shouldLogMetaEvents;
@property(readonly, nonatomic) _Bool shouldFlushMetaCounters;
@property(readonly, nonatomic) _Bool shouldLogMetaCounters;
@property(readonly, nonatomic) long long maxStorageSizeBytes;
@property(readonly, nonatomic) long long maxMetaCountersCount;
@property(readonly, nonatomic) long long logFileAgeCutoffMilliseconds;
@property(readonly, nonatomic) long long directoryConsideredOldPeriodMilliseconds;
@property(readonly, nonatomic) long long phenotypeUpdatePeriodMilliseconds;
@property(readonly, nonatomic) long long unmeteredOrDailyPeriodMilliseconds;
@property(readonly, nonatomic) long long onForegroundUploadPeriodMilliseconds;
@property(readonly, nonatomic) long long defaultUploadPeriodMilliseconds;
@property(readonly, nonatomic) long long autoUploadOnForegroundDelaySeconds;
@property(readonly, nonatomic) long long autoUploadLeewaySeconds;
@property(readonly, nonatomic) long long autoUploadPeriodSeconds;
@property(readonly, nonatomic) NSString *serverToken;
@property(readonly, nonatomic) NSString *phenotypePackageName;
- (void)update;
- (id)initWithPhenotypeFlags:(id)arg1;
- (id)initWithPhenotype:(id)arg1;

@end

@interface CCTFarmHash : NSObject
{
}

+ (unsigned long long)fingerprint64ForString:(id)arg1;

@end

@interface CCTPhenotypeLogTransformer : NSObject <CCTClearcutLogTransformer>
{
    id <PHTPhenotype> _phenotype;
}

@property(readonly, nonatomic) id <PHTPhenotype> phenotype; // @synthesize phenotype=_phenotype;
- (void).cxx_destruct;
- (id)transform:(id)arg1;
- (id)initWithPhenotype:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTLogFile : NSObject
{
    struct stat _statInfo;
    CCTLogContext *_context;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(readonly, nonatomic) CCTLogContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long fileSize;
@property(readonly, nonatomic) long long creationTimeMilliseconds;
- (id)initWithContext:(id)arg1 url:(id)arg2;

@end

@interface CCTFileLock : NSObject <CCTUploaderLock>
{
    int _fd;
    NSURL *_file;
}

@property(nonatomic) int fd; // @synthesize fd=_fd;
@property(readonly, nonatomic) NSURL *file; // @synthesize file=_file;
- (void).cxx_destruct;
- (void)unlock;
- (_Bool)lock:(id *)arg1;
- (id)initWithFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTNoOpLock : NSObject <CCTUploaderLock>
{
}

- (void)unlock;
- (_Bool)lock:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTFileLockProvider : NSObject <CCTUploaderLockProvider>
{
}

- (id)makeUploaderLockForFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTNoOpLockProvider : NSObject <CCTUploaderLockProvider>
{
}

- (id)makeUploaderLockForFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PHTPhenotype : NSObject <GIPPseudonymousIDObserver, PHTPhenotype>
{
    NSString *_overrideServerURL;
    _Bool _debugForceSyncs;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    id <CCTClockProtocol> _clock;
    PHTPhenotypeCache *_cache;
    PHTPhenotypeLogger *_logger;
    NSObject<OS_dispatch_queue> *_queue;
    NSHashTable *_commitObservers;
    NSString *_bundleID;
    PHTPhenotypeFlags *_flags;
    PHTPhenotypeDatabase *_database;
    NSObject<OS_dispatch_queue> *_syncQueue;
}

+ (id)sharedInstance;
+ (void)setSharedInstance:(id)arg1;
+ (void)useLocalCachesDirectory;
+ (void)setDefaultDirectory:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) PHTPhenotypeDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) PHTPhenotypeFlags *flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) NSHashTable *commitObservers; // @synthesize commitObservers=_commitObservers;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) PHTPhenotypeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(retain, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(copy, nonatomic) NSString *overrideServerURL; // @synthesize overrideServerURL=_overrideServerURL;
@property(nonatomic) _Bool debugForceSyncs; // @synthesize debugForceSyncs=_debugForceSyncs;
- (void).cxx_destruct;
- (void)pseudonymousIDDidReset:(id)arg1;
- (void)useXCNServerURL;
- (void)closeDatabase;
- (void)setExternalExperimentIDs:(id)arg1 moduleNamespace:(id)arg2 logSource:(long long)arg3 callback:(CDUnknownBlockType)arg4;
- (void)committedConfiguration:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)committedConfiguration:(id)arg1 user:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)experimentTokens:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)experimentTokens:(long long)arg1 user:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)peekConfiguration:(id)arg1 user:(id)arg2 diffToken:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)commitConfiguration:(id)arg1 user:(id)arg2 diffToken:(id)arg3 committer:(CDUnknownBlockType)arg4;
- (void)unregisterPackage:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)registerPackage:(id)arg1 logSources:(id)arg2 params:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)registerPackage:(id)arg1 version:(long long)arg2 logSources:(id)arg3 params:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)sync:(id)arg1 syncType:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)syncAllAccounts:(id)arg1 syncType:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (CDUnknownBlockType)wrapCallback:(CDUnknownBlockType)arg1 syncType:(long long)arg2 syncBeginTimeMilliseconds:(long long)arg3 syncTimeLoggedOutOnly:(long long)arg4 syncTimeFull:(long long)arg5;
- (void)syncExperimentsWithServer:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)flushCountersToLogger;
- (void)removeCommitObserver:(id)arg1;
- (void)addCommitObserver:(id)arg1;
- (void)setupForTesting;
- (id)init;
- (id)initWithDatabase:(id)arg1 clock:(id)arg2 cache:(id)arg3 clearcutLogDirectory:(id)arg4 pseudonymousIDStore:(id)arg5;
- (id)initWithDatabase:(id)arg1 pseudonymousIDStore:(id)arg2 clock:(id)arg3 flags:(id)arg4 logger:(id)arg5 cache:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PHTPhenotypeFlagsSnapshot : NSObject
{
    NSString *_packageName;
    NSString *_serverToken;
    NSString *_userID;
    NSString *_diffToken;
    NSDictionary *_flags;
    PHTPhenotypeExperimentTokens *_tokens;
    long long _configurationVersion;
}

@property(readonly, nonatomic) long long configurationVersion; // @synthesize configurationVersion=_configurationVersion;
@property(readonly, nonatomic) PHTPhenotypeExperimentTokens *tokens; // @synthesize tokens=_tokens;
@property(readonly, nonatomic) NSDictionary *flags; // @synthesize flags=_flags;
@property(readonly, nonatomic) NSString *diffToken; // @synthesize diffToken=_diffToken;
@property(readonly, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) NSString *serverToken; // @synthesize serverToken=_serverToken;
@property(readonly, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)numberArrayForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)stringArrayForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)dataForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)numberForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)stringForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)valueForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)initWithPackageName:(id)arg1 serverToken:(id)arg2 userID:(id)arg3 diffToken:(id)arg4 experimentTokens:(id)arg5 configurationVersion:(long long)arg6 flags:(id)arg7;

@end

@interface PHTPhenotypeFlags : NSObject <PHTPhenotypeFlagsProtocol>
{
    _Bool _configsLoaded;
    _Bool _startedLoading;
    NSString *_packageName;
    id <PHTPhenotype> _phenotype;
    NSCondition *_configsLoadedCondition;
    NSString *_startingUserID;
    NSHashTable *_listeners;
    PHTPhenotypeFlagsSnapshot *_atomicSnapshot;
}

@property(retain) PHTPhenotypeFlagsSnapshot *atomicSnapshot; // @synthesize atomicSnapshot=_atomicSnapshot;
@property(readonly, nonatomic) NSHashTable *listeners; // @synthesize listeners=_listeners;
@property(readonly, nonatomic) NSString *startingUserID; // @synthesize startingUserID=_startingUserID;
@property(nonatomic) _Bool startedLoading; // @synthesize startedLoading=_startedLoading;
@property(nonatomic) _Bool configsLoaded; // @synthesize configsLoaded=_configsLoaded;
@property(readonly, nonatomic) NSCondition *configsLoadedCondition; // @synthesize configsLoadedCondition=_configsLoadedCondition;
@property(readonly, nonatomic) id <PHTPhenotype> phenotype; // @synthesize phenotype=_phenotype;
@property(readonly, copy, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
- (void).cxx_destruct;
- (_Bool)updateWithConfiguration:(id)arg1 userID:(id)arg2 error:(id)arg3;
- (void)callListeners:(id)arg1;
- (id)snapshot;
- (id)numberArrayForFlagName:(id)arg1 withDefault:(id)arg2;
- (id)stringArrayForFlagName:(id)arg1 withDefault:(id)arg2;
- (id)dataForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)numberForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)stringForFlagName:(id)arg1 defaultValue:(id)arg2;
- (id)valueForFlagName:(id)arg1 withDefault:(id)arg2;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)commitConfigurationForUserID:(id)arg1;
- (void)update;
@property(copy, nonatomic) NSString *userID;
@property(readonly, nonatomic) long long configurationVersion;
@property(readonly, nonatomic) PHTPhenotypeExperimentTokens *tokens;
@property(readonly, copy, nonatomic) NSString *serverToken;
- (void)configsFinishedLoading;
- (void)waitForConfigsToLoad;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)startLoading;
- (void)dealloc;
- (id)initWithPackageName:(id)arg1;
- (id)initWithPackageName:(id)arg1 userID:(id)arg2;
- (id)initWithPackageName:(id)arg1 userID:(id)arg2 phenotype:(id)arg3 autoUpdate:(_Bool)arg4;
- (id)initWithPackageName:(id)arg1 userID:(id)arg2 phenotype:(id)arg3 autoUpdate:(_Bool)arg4 startLoading:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PHTPhenotypeFlag : NSObject
{
    NSString *_name;
    PHTPhenotypeFlags *_flags;
}

@property(readonly, nonatomic) PHTPhenotypeFlags *flags; // @synthesize flags=_flags;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 flags:(id)arg2;

@end

@interface PHTPhenotypeStringFlag : PHTPhenotypeFlag
{
    NSString *_defaultValue;
    NSString *_testOverride;
}

@property(retain, nonatomic) NSString *testOverride; // @synthesize testOverride=_testOverride;
@property(readonly, nonatomic) NSString *defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *value;
- (id)initWithName:(id)arg1 defaultValue:(id)arg2 flags:(id)arg3;

@end

@interface PHTPhenotypeNumberFlag : PHTPhenotypeFlag
{
    NSNumber *_defaultValue;
    NSNumber *_testOverride;
}

@property(retain, nonatomic) NSNumber *testOverride; // @synthesize testOverride=_testOverride;
@property(readonly, nonatomic) NSNumber *defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSNumber *value;
- (id)initWithName:(id)arg1 defaultValue:(id)arg2 flags:(id)arg3;

@end

@interface PHTPhenotypeDataFlag : PHTPhenotypeFlag
{
    NSData *_defaultValue;
    NSData *_testOverride;
}

@property(retain, nonatomic) NSData *testOverride; // @synthesize testOverride=_testOverride;
@property(readonly, nonatomic) NSData *defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSData *value;
- (id)initWithName:(id)arg1 defaultValue:(id)arg2 flags:(id)arg3;

@end

@interface PHTPhenotypeMessageFlag : PHTPhenotypeFlag
{
    NSData *_data;
    GPBMessage *_message;
    Class _protoClass;
    GPBMessage *_defaultMessage;
    GPBMessage *_testOverrideMessage;
}

@property(retain, nonatomic) GPBMessage *testOverrideMessage; // @synthesize testOverrideMessage=_testOverrideMessage;
@property(readonly, nonatomic) GPBMessage *defaultMessage; // @synthesize defaultMessage=_defaultMessage;
- (void).cxx_destruct;
@property(readonly, nonatomic) GPBMessage *message;
- (id)initWithName:(id)arg1 defaultMessage:(id)arg2 protoClass:(Class)arg3 flags:(id)arg4;

@end

@interface PHTCommitConfigurationOperation : PHTBaseOperation
{
    id <PHTPhenotype> _phenotype;
    PHTPhenotypeCache *_cache;
    NSString *_packageName;
    NSString *_user;
    NSString *_diffToken;
    NSArray *_commitObservers;
    CDUnknownBlockType _committer;
}

@property(copy, nonatomic) CDUnknownBlockType committer; // @synthesize committer=_committer;
@property(retain, nonatomic) NSArray *commitObservers; // @synthesize commitObservers=_commitObservers;
@property(retain, nonatomic) NSString *diffToken; // @synthesize diffToken=_diffToken;
@property(retain, nonatomic) NSString *user; // @synthesize user=_user;
@property(retain, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
@property(nonatomic) __weak id <PHTPhenotype> phenotype; // @synthesize phenotype=_phenotype;
- (void).cxx_destruct;
- (_Bool)deleteApplicationState:(id)arg1 database:(id)arg2 error:(id *)arg3;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)applicationInfo;
- (id)initWithWithCounterName:(id)arg1 phenotype:(id)arg2 logger:(id)arg3 database:(id)arg4 cache:(id)arg5 packageName:(id)arg6 user:(id)arg7 diffToken:(id)arg8 observers:(id)arg9 committer:(CDUnknownBlockType)arg10;

@end

@interface PHTCommittedConfigurationOperation : PHTBaseOperation
{
    NSString *_packageName;
    NSString *_userID;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(retain, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
- (void).cxx_destruct;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)applicationInfo;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 packageName:(id)arg4 userID:(id)arg5 callback:(CDUnknownBlockType)arg6;

@end

@interface PHTGetExperimentTokensOperation : PHTBaseOperation
{
    PHTPhenotypeCache *_cache;
    long long _logSource;
    NSString *_userID;
    id <CCTClockProtocol> _clock;
    NSString *_bundleID;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(nonatomic) long long logSource; // @synthesize logSource=_logSource;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)flattenTokens:(id)arg1 withExternalExperimentIDs:(id)arg2;
- (id)bundleIDForPackage:(id)arg1 database:(id)arg2 error:(id *)arg3;
- (id)packageNamesForLogSource:(long long)arg1 database:(id)arg2 error:(id *)arg3;
- (void)executeOnDatabaseQueueWithBackgroundTask:(id)arg1;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)applicationInfo;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 cache:(id)arg4 logSource:(long long)arg5 userID:(id)arg6 clock:(id)arg7 bundleID:(id)arg8 callback:(CDUnknownBlockType)arg9;

@end

@interface PHTPeekConfigurationOperation : PHTBaseOperation
{
    NSString *_packageName;
    NSString *_userID;
    NSString *_diffToken;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *diffToken; // @synthesize diffToken=_diffToken;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(retain, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
- (void).cxx_destruct;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)applicationInfo;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 packageName:(id)arg4 userID:(id)arg5 diffToken:(id)arg6 callback:(CDUnknownBlockType)arg7;

@end

@interface PHTPhenotypeCommitConfiguration : NSObject
{
    _Bool _shouldCommit;
    PHTPhenotypeDatabase *_db;
    NSString *_package;
    NSString *_user;
    NSString *_diffToken;
}

+ (void)getConfigAndCommit:(_Bool)arg1 database:(id)arg2 package:(id)arg3 user:(id)arg4 diffToken:(id)arg5 callback:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) _Bool shouldCommit; // @synthesize shouldCommit=_shouldCommit;
@property(readonly, nonatomic) NSString *diffToken; // @synthesize diffToken=_diffToken;
@property(readonly, nonatomic) NSString *user; // @synthesize user=_user;
@property(readonly, nonatomic) NSString *package; // @synthesize package=_package;
@property(readonly, nonatomic) PHTPhenotypeDatabase *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (_Bool)updateApplicationState:(long long)arg1 error:(id *)arg2;
- (_Bool)commitCrossExperimentTokens:(long long)arg1 error:(id *)arg2;
- (_Bool)commitExperimentTokens:(long long)arg1 error:(id *)arg2;
- (_Bool)commitFlagOverridesWithError:(id *)arg1;
- (_Bool)commitFlags:(long long)arg1 error:(id *)arg2;
- (id)computeDiff:(id)arg1 oldVersion:(long long)arg2 oldUser:(id)arg3 newVersion:(long long)arg4 newUser:(id)arg5 serverToken:(id)arg6 tokens:(id)arg7 servingVersion:(long long)arg8 error:(id *)arg9;
- (_Bool)committedState:(long long *)arg1 user:(id *)arg2 error:(id *)arg3;
- (long long)bestConfigVersion:(id *)arg1;
- (id)getConfigAndCommitInsideTransaction:(id *)arg1;
- (void)getConfigAndCommit:(CDUnknownBlockType)arg1;
- (id)initWithDatabase:(id)arg1 package:(id)arg2 user:(id)arg3 diffToken:(id)arg4 shouldCommit:(_Bool)arg5;

@end

@interface PHTPhenotypeConfiguration : NSObject
{
    _Bool _isDiff;
    NSDictionary *_flags;
    NSArray *_flagsToDelete;
    NSString *_diffToken;
    NSString *_serverToken;
    NSString *_userID;
    PHTPhenotypeExperimentTokens *_tokens;
    long long _configurationVersion;
}

@property(readonly, nonatomic) long long configurationVersion; // @synthesize configurationVersion=_configurationVersion;
@property(readonly, nonatomic) PHTPhenotypeExperimentTokens *tokens; // @synthesize tokens=_tokens;
@property(readonly, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) NSString *serverToken; // @synthesize serverToken=_serverToken;
@property(readonly, nonatomic) NSString *diffToken; // @synthesize diffToken=_diffToken;
@property(readonly, nonatomic) NSArray *flagsToDelete; // @synthesize flagsToDelete=_flagsToDelete;
@property(readonly, nonatomic) NSDictionary *flags; // @synthesize flags=_flags;
@property(readonly, nonatomic) _Bool isDiff; // @synthesize isDiff=_isDiff;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDiffDictionary:(id)arg1 flagsToDelete:(id)arg2 diffToken:(id)arg3 serverToken:(id)arg4 userID:(id)arg5 tokens:(id)arg6 configurationVersion:(long long)arg7;
- (id)initWithAllFlagsDictionary:(id)arg1 diffToken:(id)arg2 serverToken:(id)arg3 userID:(id)arg4 tokens:(id)arg5 configurationVersion:(long long)arg6;
- (id)initWithIsDiff:(_Bool)arg1 flags:(id)arg2 flagsToDelete:(id)arg3 diffToken:(id)arg4 serverToken:(id)arg5 userID:(id)arg6 tokens:(id)arg7 configurationVersion:(long long)arg8;

@end

@interface PHTSetExternalExperimentIDsOperation : PHTBaseOperation
{
    _Bool _isBundleScoped;
    PHTPhenotypeCache *_cache;
    NSArray *_experimentIDs;
    NSString *_moduleNamespace;
    long long _logSource;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(nonatomic) long long logSource; // @synthesize logSource=_logSource;
@property(nonatomic) _Bool isBundleScoped; // @synthesize isBundleScoped=_isBundleScoped;
@property(retain, nonatomic) NSString *moduleNamespace; // @synthesize moduleNamespace=_moduleNamespace;
@property(retain, nonatomic) NSArray *experimentIDs; // @synthesize experimentIDs=_experimentIDs;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (void)execute;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 cache:(id)arg4 experimentIDs:(id)arg5 moduleNamespace:(id)arg6 isBundleScoped:(_Bool)arg7 logSource:(long long)arg8 callback:(CDUnknownBlockType)arg9;

@end

@interface PHTShouldSyncOperation : PHTBaseOperation
{
    _Bool _debugForceSyncs;
    id <PHTPhenotypeAccountService> _accountService;
    id <CCTClockProtocol> _clock;
    PHTPhenotypeCache *_cache;
    PHTRegisterPackageOperation *_registerPhenotypeOperation;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) PHTRegisterPackageOperation *registerPhenotypeOperation; // @synthesize registerPhenotypeOperation=_registerPhenotypeOperation;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(nonatomic) _Bool debugForceSyncs; // @synthesize debugForceSyncs=_debugForceSyncs;
@property(retain, nonatomic) id <PHTPhenotypeAccountService> accountService; // @synthesize accountService=_accountService;
- (void).cxx_destruct;
- (id)syncedUsersInDatabase:(id)arg1;
- (id)syncedPackageInfosInDatabase:(id)arg1;
- (id)currentUsers:(id)arg1;
- (id)registerPhenotypePackage:(_Bool *)arg1;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)initWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 accountService:(id)arg4 debugForceSyncs:(_Bool)arg5 clock:(id)arg6 cache:(id)arg7 registerPhenotypeOperation:(id)arg8 callback:(CDUnknownBlockType)arg9;

@end

@interface PHTRegisterPackageOperation : PHTBaseOperation
{
    PHTPhenotypeCache *_cache;
    NSString *_packageName;
    long long _version;
    NSArray *_logSources;
    NSData *_params;
    NSString *_bundleID;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) NSData *params; // @synthesize params=_params;
@property(retain, nonatomic) NSArray *logSources; // @synthesize logSources=_logSources;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)logSourcesInDatabase:(id *)arg1;
- (id)registerPackageInTransaction:(_Bool *)arg1;
- (void)execute;
- (id)applicationInfo;
- (_Bool)shouldBeLogged;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 cache:(id)arg4 packageName:(id)arg5 version:(long long)arg6 logSources:(id)arg7 params:(id)arg8 bundleID:(id)arg9 callback:(CDUnknownBlockType)arg10;

@end

@interface PHTSyncOperation : PHTBaseOperation
{
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    id <PHTPhenotypeAccount> _account;
    NSString *_overrideServerURL;
    long long _syncType;
    id <CCTClockProtocol> _clock;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(nonatomic) long long syncType; // @synthesize syncType=_syncType;
@property(retain, nonatomic) NSString *overrideServerURL; // @synthesize overrideServerURL=_overrideServerURL;
@property(retain, nonatomic) id <PHTPhenotypeAccount> account; // @synthesize account=_account;
@property(readonly, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 originalRequest:(id)arg2 changeCount:(long long)arg3;
- (void)handleRetryAfter:(id)arg1 syncType:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)sendRequest:(id)arg1 changeCount:(long long)arg2;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 pseudonymousIDStore:(id)arg4 account:(id)arg5 overrideServerURL:(id)arg6 syncType:(long long)arg7 clock:(id)arg8 callback:(CDUnknownBlockType)arg9;

@end

@interface PHTHeterodyneRequestMaker : NSObject
{
    _Bool _isGoogler;
    PHTPhenotypeDatabase *_db;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    NSString *_userID;
}

+ (void)createRequest:(id)arg1 pseudonymousIDStore:(id)arg2 account:(id)arg3 callback:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) _Bool isGoogler; // @synthesize isGoogler=_isGoogler;
@property(readonly, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(readonly, nonatomic) PHTPhenotypeDatabase *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (id)paramPartitions:(id)arg1 version:(long long)arg2 error:(id *)arg3;
- (id)createApplicationRequests:(id *)arg1;
- (_Bool)readDogfoodToken:(id *)arg1 error:(id *)arg2;
- (id)createClientProperties:(id *)arg1;
- (void)execute:(CDUnknownBlockType)arg1;
- (id)initWithDatabase:(id)arg1 pseudonymousIDStore:(id)arg2 account:(id)arg3;

@end

@interface PHTHeterodyneResponseProcessor : NSObject
{
    PHTPhenotypeDatabase *_db;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    EXHExperimentsAndConfigsRequest *_request;
    EXHExperimentsAndConfigsResponse *_response;
    NSString *_userID;
    long long _changeCount;
}

+ (void)processResponse:(id)arg1 pseudonymousIDStore:(id)arg2 request:(id)arg3 response:(id)arg4 userID:(id)arg5 changeCount:(long long)arg6 callback:(CDUnknownBlockType)arg7;
@property(readonly, nonatomic) long long changeCount; // @synthesize changeCount=_changeCount;
@property(readonly, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, nonatomic) EXHExperimentsAndConfigsResponse *response; // @synthesize response=_response;
@property(readonly, nonatomic) EXHExperimentsAndConfigsRequest *request; // @synthesize request=_request;
@property(readonly, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(readonly, nonatomic) PHTPhenotypeDatabase *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (_Bool)updateCrossLoggedTokens:(id)arg1 crossApp:(id)arg2 error:(id *)arg3;
- (_Bool)updateFlag:(id)arg1 partitionID:(long long)arg2 param:(id)arg3 error:(id *)arg4;
- (_Bool)updateApplicationTag:(id)arg1 partition:(id)arg2 error:(id *)arg3;
- (_Bool)currentApplicationTag:(id *)arg1 response:(id)arg2 partition:(id)arg3 error:(id *)arg4;
- (_Bool)deleteFlags:(id)arg1 error:(id *)arg2;
- (_Bool)deletePartitions:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFlagsInPartition:(id)arg1 partitionID:(long long)arg2 error:(id *)arg3;
- (_Bool)updateExperimentTokens:(id)arg1 servingVersion:(long long)arg2 error:(id *)arg3;
- (_Bool)updateOnlyServingVersion:(long long)arg1 error:(id *)arg2;
- (_Bool)deleteCrossLoggedTokens:(id *)arg1;
- (_Bool)updateChangeCount:(id *)arg1;
- (_Bool)updateRequestTag:(_Bool *)arg1 error:(id *)arg2;
- (id)processResponseInsideTransaction;
- (void)processResponse:(CDUnknownBlockType)arg1;
- (id)initWithDatabase:(id)arg1 pseudonymousIDStore:(id)arg2 request:(id)arg3 response:(id)arg4 userID:(id)arg5 changeCount:(long long)arg6;

@end

@interface PHTUnregisterPackageOperation : PHTBaseOperation
{
    NSString *_packageName;
    PHTPhenotypeCache *_cache;
    CDUnknownBlockType _callback;
}

@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) PHTPhenotypeCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
- (void).cxx_destruct;
- (void)execute;
- (_Bool)shouldBeLogged;
- (id)applicationInfo;
- (id)initWithWithCounterName:(id)arg1 logger:(id)arg2 database:(id)arg3 cache:(id)arg4 packageName:(id)arg5 callback:(CDUnknownBlockType)arg6;

@end

@interface PHTBaseOperation : NSObject
{
    int _eventType;
    NSString *_counterName;
    PHTPhenotypeDatabase *_db;
    PHTPhenotypeLogger *_logger;
}

@property(nonatomic) int eventType; // @synthesize eventType=_eventType;
@property(retain, nonatomic) PHTPhenotypeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) PHTPhenotypeDatabase *db; // @synthesize db=_db;
@property(retain, nonatomic) NSString *counterName; // @synthesize counterName=_counterName;
- (void).cxx_destruct;
- (id)phenotypePackageName;
- (_Bool)shouldBeLogged;
- (id)phenotypeLogEvent;
- (id)applicationInfo;
- (void)execute;
- (id)initWithCounterName:(id)arg1 phenotypeEventType:(int)arg2 logger:(id)arg3 database:(id)arg4;

@end

@interface PHTPhenotypeLoggedOutAccount : NSObject <PHTPhenotypeAccount>
{
}

- (id)authorization:(id *)arg1;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *obfuscatedGaiaID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PHTPhenotypeCachedInformation : NSObject
{
    PHTPhenotypeExperimentTokens *_cachedTokens;
    NSError *_cachedError;
}

@property(readonly, nonatomic) NSError *cachedError; // @synthesize cachedError=_cachedError;
@property(readonly, nonatomic) PHTPhenotypeExperimentTokens *cachedTokens; // @synthesize cachedTokens=_cachedTokens;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithTokens:(id)arg1 error:(id)arg2;

@end

@interface PHTPhenotypeCache : NSObject
{
    NSMutableDictionary *_cachedInformation;
    id <CCTClockProtocol> _clock;
    NSURL *_fileURL;
    NSDate *_cacheTime;
    PHTPhenotypeLogger *_logger;
}

@property(retain, nonatomic) PHTPhenotypeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSDate *cacheTime; // @synthesize cacheTime=_cacheTime;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(readonly, nonatomic) NSMutableDictionary *cachedInformation; // @synthesize cachedInformation=_cachedInformation;
- (void).cxx_destruct;
- (_Bool)removeStaleCachedTokens;
- (void)invalidateCache;
- (void)setCachedTokens:(id)arg1 error:(id)arg2 cacheTime:(id)arg3 forLogSource:(long long)arg4 user:(id)arg5;
- (id)cachedInformationForSource:(long long)arg1 user:(id)arg2;
- (id)initWithClock:(id)arg1 modificationFileURL:(id)arg2 phenotypeLogger:(id)arg3;

@end

@interface PHTDatabaseBackgroundTask : NSObject
{
    _Bool _finished;
    PHTPhenotypeDatabase *_database;
    unsigned long long _backgroundTaskID;
}

@property(nonatomic) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic) unsigned long long backgroundTaskID; // @synthesize backgroundTaskID=_backgroundTaskID;
@property(readonly, nonatomic) PHTPhenotypeDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)endBackgroundTask;
- (void)onBackgroundTaskExpiration;
- (void)finish;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1;

@end

@interface PHTPhenotypeSQLiteStatement : GTMSQLiteStatement
{
}

- (void)dealloc;
- (id)statementWithSQL:(id)arg1 inDatabase:(id)arg2 errorCode:(int *)arg3;

@end

@interface PHTPhenotypeDatabase : NSObject
{
    _Bool _useInMemoryDb;
    _Bool _dbClosed;
    NSObject<OS_dispatch_queue> *_databaseQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    PHTPhenotypeLogger *_logger;
    GTMSQLiteDatabase *_db;
    NSString *_databasePath;
}

+ (void)updateDatabaseVersion:(id)arg1;
+ (long long)databaseVersion:(id)arg1;
+ (id)connectToInMemoryDatabaseWithLogger:(id)arg1 error:(id *)arg2;
+ (_Bool)upgradeSchema:(id)arg1 logger:(id)arg2 error:(id *)arg3;
+ (id)connectAndInitializeDatabase:(id)arg1 logger:(id)arg2 error:(id *)arg3;
+ (id)allCreateTableOrIndexQueries;
@property(nonatomic) _Bool dbClosed; // @synthesize dbClosed=_dbClosed;
@property(nonatomic) _Bool useInMemoryDb; // @synthesize useInMemoryDb=_useInMemoryDb;
@property(retain, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(retain, nonatomic) GTMSQLiteDatabase *db; // @synthesize db=_db;
@property(retain, nonatomic) PHTPhenotypeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
- (void).cxx_destruct;
- (id)lastErrorString;
- (id)dump:(id *)arg1;
- (id)tableContent:(id)arg1 error:(id *)arg2;
- (id)formattedStringForContents:(id)arg1 columnWidths:(id)arg2;
- (id)columnWidthsForContents:(id)arg1;
- (id)rowContentsFromStatement:(id)arg1 error:(id *)arg2;
- (id)columnNamesFromStatement:(id)arg1 error:(id *)arg2;
- (id)tableNames:(id *)arg1;
- (id)performTransactionInternal:(CDUnknownBlockType)arg1;
- (id)performTransactionSync:(CDUnknownBlockType)arg1;
- (id)performTransactionInsideQueue:(CDUnknownBlockType)arg1 withBackgroundTask:(id)arg2 onFinish:(CDUnknownBlockType)arg3;
- (void)performTransaction:(CDUnknownBlockType)arg1 onFinish:(CDUnknownBlockType)arg2;
- (_Bool)extractOneRow:(id)arg1 foundRow:(_Bool *)arg2 withParameters:(char *)arg3 error:(id *)arg4;
- (_Bool)extractOneRow:(id)arg1 foundRow:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)extractOneRow:(id)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (id)createStatement:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)createStatement:(id)arg1 error:(id *)arg2;
- (void)closeDatabase;
- (long long)databaseFileSize;
- (id)db:(id *)arg1;
- (id)initWithInMemoryDatabase:(_Bool)arg1 logger:(id)arg2;
- (id)crossTokens:(id)arg1 version:(long long)arg2 user:(id)arg3 error:(id *)arg4;
- (id)mergeExperimentIDs:(id)arg1;
- (id)removeOldConfigurations;
- (id)removeOldAccountsWithKeepAccounts:(id)arg1;
- (_Bool)findMinimumUncommittedVersionToKeepForPackage:(id)arg1 foundVersion:(_Bool *)arg2 version:(long long *)arg3 error:(id *)arg4;
- (id)setFromSQLQuery:(id)arg1 arguments:(id)arg2 class:(Class)arg3 error:(id *)arg4;
- (id)blobDataSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)numberSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)stringSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)dictionarySetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)registeredPackageInfos:(id *)arg1;
- (_Bool)committedStateForMultiCommitPackage:(id)arg1 user:(id)arg2 version:(long long *)arg3 error:(id *)arg4;
- (_Bool)committedStateForSingleCommitPackage:(id)arg1 version:(long long *)arg2 user:(id *)arg3 error:(id *)arg4;
- (id)externalExperimentIDsForLogSource:(long long)arg1 existingExperimentIDs:(id)arg2 error:(id *)arg3;
- (id)externalExperimentIDsForLogSource:(long long)arg1 moduleNamespace:(id)arg2 bundleIdentifier:(id)arg3 isBundleScoped:(_Bool)arg4 error:(id *)arg5;
- (id)externalExperimentIDsForFlagOverrides:(_Bool)arg1;
- (id)experimentTokens:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (_Bool)tokensForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 serverToken:(id *)arg5 diffToken:(id *)arg6 servingVersion:(long long *)arg7 error:(id *)arg8;
- (_Bool)updateSyncedUsers:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (_Bool)updateSyncedPackageInfo:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (_Bool)deleteFlagOverride:(id)arg1 configPackage:(id)arg2 user:(id)arg3 error:(id *)arg4;
- (_Bool)setFlagOverride:(id)arg1 configPackage:(id)arg2 user:(id)arg3 error:(id *)arg4;
- (_Bool)updateSyncedPackageInfos:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (id)flagFromStatement:(id)arg1 error:(id *)arg2;
- (id)flagOverridesForPackage:(id)arg1 user:(id)arg2 isCommitted:(_Bool)arg3 error:(id *)arg4;
- (id)flagsWithoutOverridesForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (id)flagsForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (long long)changeCount:(id *)arg1;
- (_Bool)requestTag:(id *)arg1 user:(id)arg2 error:(id *)arg3;

@end

@interface PHTPhenotypeConfigurationFlag : NSObject
{
    NSString *_name;
    id _value;
    long long _valueType;
    long long _storageType;
}

@property(readonly, nonatomic) long long storageType; // @synthesize storageType=_storageType;
@property(readonly, nonatomic) long long valueType; // @synthesize valueType=_valueType;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithName:(id)arg1 value:(id)arg2 valueType:(long long)arg3 storageType:(long long)arg4;

@end

@interface PHTPhenotypeError : NSObject
{
}

+ (_Bool)fileError:(id *)arg1;
+ (_Bool)databaseError:(id *)arg1 code:(int)arg2 logger:(id)arg3;
+ (_Bool)error:(id *)arg1 code:(long long)arg2;

@end

@interface GTMSQLiteDatabase : NSObject
{
    struct sqlite3 *db_;
    NSString *path_;
    int timeoutMS_;
    _Bool hasCFAdditions_;
    unsigned long long likeOptions_;
    unsigned long long globOptions_;
    NSMutableArray *userArgDataPool_;
}

+ (id)sqliteVersionString;
+ (int)sqliteVersionNumber;
+ (void)initialize;
- (id)description;
- (_Bool)commit;
- (_Bool)rollback;
- (_Bool)beginDeferredTransaction;
- (int)executeSQL:(id)arg1;
- (int)busyTimeoutMS;
- (int)setBusyTimeoutMS:(int)arg1;
- (void)interrupt;
- (unsigned long long)lastInsertRowID;
- (int)totalChangeCount;
- (int)lastChangeCount;
- (id)lastErrorString;
- (int)lastErrorCode;
- (unsigned long long)globComparisonOptions;
- (void)setGlobComparisonOptions:(unsigned long long)arg1;
- (unsigned long long)likeComparisonOptions;
- (void)setLikeComparisonOptions:(unsigned long long)arg1;
- (_Bool)hasCFAdditions;
- (void)synchronousMode:(_Bool)arg1;
- (struct sqlite3 *)sqlite3DB;
- (void)collationArgumentRetain:(id)arg1;
- (int)installCFAdditions;
- (void)cleanupDB;
- (void)dealloc;
- (id)initInMemoryWithCFAdditions:(_Bool)arg1 utf8:(_Bool)arg2 errorCode:(int *)arg3;
- (id)initWithPath:(id)arg1 withCFAdditions:(_Bool)arg2 utf8:(_Bool)arg3 errorCode:(int *)arg4;

@end

@interface GTMSQLiteStatement : NSObject
{
    struct sqlite3_stmt *statement_;
    _Bool hasCFAdditions_;
}

+ (id)quoteAndEscapeString:(id)arg1;
+ (_Bool)isCompleteStatement:(id)arg1;
+ (id)statementWithSQL:(id)arg1 inDatabase:(id)arg2 errorCode:(int *)arg3;
- (int)reset;
- (int)stepRowWithTimeout;
- (int)stepRow;
- (id)resultRowDictionary;
- (id)resultRowArray;
- (id)resultFoundationObjectAtPosition:(int)arg1;
- (id)resultStringAtPosition:(int)arg1;
- (id)resultNumberAtPosition:(int)arg1;
- (long long)resultLongLongAtPosition:(int)arg1;
- (int)resultInt32AtPosition:(int)arg1;
- (double)resultDoubleAtPosition:(int)arg1;
- (id)resultBlobDataAtPosition:(int)arg1;
- (int)resultColumnTypeAtPosition:(int)arg1;
- (int)rowDataCount;
- (id)resultColumnNameAtPosition:(int)arg1;
- (int)resultColumnCount;
- (int)bindStringAtPosition:(int)arg1 string:(id)arg2;
- (int)bindNumberAsLongLongAtPosition:(int)arg1 number:(id)arg2;
- (int)bindLongLongAtPosition:(int)arg1 value:(long long)arg2;
- (int)bindNumberAsInt32AtPosition:(int)arg1 number:(id)arg2;
- (int)bindInt32AtPosition:(int)arg1 value:(int)arg2;
- (int)bindNumberAsDoubleAtPosition:(int)arg1 number:(id)arg2;
- (int)bindDoubleAtPosition:(int)arg1 value:(double)arg2;
- (int)bindBlobAtPosition:(int)arg1 data:(id)arg2;
- (int)bindBlobAtPosition:(int)arg1 bytes:(void *)arg2 length:(int)arg3;
- (int)bindSQLNullAtPosition:(int)arg1;
- (id)nameOfParameterAtPosition:(int)arg1;
- (int)positionOfParameterNamed:(id)arg1;
- (int)parameterCount;
- (int)finalizeStatement;
- (struct sqlite3_stmt *)sqlite3Statement;
- (void)dealloc;
- (id)initWithSQL:(id)arg1 inDatabase:(id)arg2 errorCode:(int *)arg3;

@end

@interface PHTPhenotypeLogger : NSObject <CCTClearcutAutoCountersDelegate>
{
    id <PHTPhenotypeFlagsProtocol> _flags;
    id <CCTClockProtocol> _clock;
    GIPPseudonymousIDStore *_pseudonymousIDStore;
    NSURL *_clearcutLogDirectory;
    CCTClearcutAutoCounters *_autoCounters;
}

@property(retain, nonatomic) CCTClearcutAutoCounters *autoCounters; // @synthesize autoCounters=_autoCounters;
@property(retain, nonatomic) NSURL *clearcutLogDirectory; // @synthesize clearcutLogDirectory=_clearcutLogDirectory;
@property(retain, nonatomic) GIPPseudonymousIDStore *pseudonymousIDStore; // @synthesize pseudonymousIDStore=_pseudonymousIDStore;
@property(retain, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(retain, nonatomic) id <PHTPhenotypeFlagsProtocol> flags; // @synthesize flags=_flags;
- (void).cxx_destruct;
- (void)logWithLogSource:(long long)arg1 extension:(id)arg2 eventCode:(id)arg3;
- (_Bool)logEvents;
- (void)flushCountersToLogger;
- (void)logOperationEventWithExtension:(id)arg1 eventCode:(id)arg2;
- (void)increaseCounterWithName:(id)arg1 bucket:(long long)arg2 amount:(long long)arg3;
- (void)increaseCounterWithName:(id)arg1;
- (void)logCounters:(id)arg1;
- (long long)maxCounterCount;
- (_Bool)shouldLogCounters;
- (id)initWithClock:(id)arg1 clearcutLogDirectory:(id)arg2 pseudonymousIDStore:(id)arg3 flags:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CCTClearcutAutoCounters : NSObject
{
    id <CCTClearcutAutoCountersDelegate> _delegate;
    CCTClearcutCounters *_counters;
    id <NSObject> _terminateObserver;
    long long _totalCount;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) long long totalCount; // @synthesize totalCount=_totalCount;
@property(retain, nonatomic) id <NSObject> terminateObserver; // @synthesize terminateObserver=_terminateObserver;
@property(readonly, nonatomic) CCTClearcutCounters *counters; // @synthesize counters=_counters;
@property(readonly, nonatomic) __weak id <CCTClearcutAutoCountersDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)flushCountersToLoggerInternal;
- (void)flushCountersToLogger;
- (void)increaseCounterWithName:(id)arg1 dimension:(id)arg2 bucket:(long long)arg3 amount:(long long)arg4;
- (id)initWithDelegate:(id)arg1 clock:(id)arg2 regularFlush:(_Bool)arg3;
- (id)initWithDelegate:(id)arg1 regularFlush:(_Bool)arg2;

@end

@interface CCTLogWriter : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_outputStreams;
    CCTClientInfoMaker *_clientInfoMaker;
    NSMutableDictionary *_overrides;
    unsigned long long _backgroundTaskID;
    long long _pendingLogOperations;
}

+ (id)sharedInstance;
@property(nonatomic) long long pendingLogOperations; // @synthesize pendingLogOperations=_pendingLogOperations;
@property(nonatomic) unsigned long long backgroundTaskID; // @synthesize backgroundTaskID=_backgroundTaskID;
@property(readonly, nonatomic) NSMutableDictionary *overrides; // @synthesize overrides=_overrides;
@property(readonly, nonatomic) CCTClientInfoMaker *clientInfoMaker; // @synthesize clientInfoMaker=_clientInfoMaker;
@property(readonly, nonatomic) NSMutableDictionary *outputStreams; // @synthesize outputStreams=_outputStreams;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (id)createOutputStreamForContext:(id)arg1 directory:(id)arg2 clock:(id)arg3;
- (id)outputStreamForContext:(id)arg1 directory:(id)arg2 clock:(id)arg3;
- (void)flushInternal;
- (void)waitForQueueToFinish;
- (void)flush;
- (void)invalidateOverridesInDirectory:(id)arg1;
- (void)writeLogInternal:(id)arg1 pseudonymousID:(id)arg2 directory:(id)arg3 clock:(id)arg4 logTransformers:(id)arg5;
- (void)writeLog:(id)arg1 pseudonymousID:(id)arg2 directory:(id)arg3 clock:(id)arg4 logTransformers:(id)arg5;
- (void)endBackgroundTask;
- (void)startBackgroundTask;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CCTLogOutputStream : NSObject
{
    _Bool _isClosed;
    long long _creationTimeMilliseconds;
    long long _bytesWritten;
    NSURL *_destination;
    NSURL *_temporaryFile;
    NSOutputStream *_outputStream;
    GPBCodedOutputStream *_protoOutputStream;
    id <CCTClockProtocol> _clock;
}

@property(nonatomic) _Bool isClosed; // @synthesize isClosed=_isClosed;
@property(readonly, nonatomic) id <CCTClockProtocol> clock; // @synthesize clock=_clock;
@property(readonly, nonatomic) GPBCodedOutputStream *protoOutputStream; // @synthesize protoOutputStream=_protoOutputStream;
@property(readonly, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(readonly, nonatomic) NSURL *temporaryFile; // @synthesize temporaryFile=_temporaryFile;
@property(readonly, nonatomic) NSURL *destination; // @synthesize destination=_destination;
@property(nonatomic) long long bytesWritten; // @synthesize bytesWritten=_bytesWritten;
@property(readonly, nonatomic) long long creationTimeMilliseconds; // @synthesize creationTimeMilliseconds=_creationTimeMilliseconds;
- (void).cxx_destruct;
- (void)closeAndMaybeRename;
- (void)dealloc;
- (void)writeLogEvent:(id)arg1;
- (id)initWithURL:(id)arg1 clock:(id)arg2;

@end

@interface CCTQosTierOverrides : NSObject
{
    NSURL *_logDirectory;
    NSDictionary *_overrides;
}

@property(retain, nonatomic) NSDictionary *overrides; // @synthesize overrides=_overrides;
@property(retain, nonatomic) NSURL *logDirectory; // @synthesize logDirectory=_logDirectory;
- (void).cxx_destruct;
- (id)overrideForLogSource:(long long)arg1;
- (void)loadFromFile;
- (id)initWithLogDirectory:(id)arg1;

@end

@interface CCTClearcutFileUtility : NSObject
{
}

+ (id)directoryContents:(id)arg1;
+ (id)uploaderStateInDirectory:(id)arg1;
+ (id)uploaderLockFileURL:(id)arg1;
+ (id)uploaderStateFileURL:(id)arg1;
+ (id)defaultLogDirectory;
+ (_Bool)createDirectoryIfMissing:(id)arg1 error:(id *)arg2;
+ (void)setDefaultDirectory:(id)arg1;

@end

@interface CCTClearcutLogEvent : NSObject
{
    _Bool _isUserInitiated;
    _Bool _isAnonymousLog;
    int _eventCode;
    int _eventFlowID;
    GPBInt32Array *_experimentIDs;
    GPBInt32Array *_testCodes;
    long long _eventTimeMilliseconds;
    long long _eventUptimeMilliseconds;
    long long _eventTimeZoneOffsetSeconds;
    GPBMessage *_extension;
    NSData *_extensionData;
    long long _logSource;
    NSString *_componentID;
    NSString *_obfuscatedGaiaID;
    long long _qosTier;
    NSData *_clientVisualElements;
    NetworkConnectionInfo *_networkConnectionInfo;
    NSString *_testID;
    NSMutableArray *_mutableExperimentTokens;
}

@property(retain, nonatomic) NSMutableArray *mutableExperimentTokens; // @synthesize mutableExperimentTokens=_mutableExperimentTokens;
@property(copy, nonatomic) NSString *testID; // @synthesize testID=_testID;
@property(copy, nonatomic) NetworkConnectionInfo *networkConnectionInfo; // @synthesize networkConnectionInfo=_networkConnectionInfo;
@property(copy, nonatomic) NSData *clientVisualElements; // @synthesize clientVisualElements=_clientVisualElements;
@property(nonatomic) _Bool isAnonymousLog; // @synthesize isAnonymousLog=_isAnonymousLog;
@property(nonatomic) _Bool isUserInitiated; // @synthesize isUserInitiated=_isUserInitiated;
@property(nonatomic) int eventFlowID; // @synthesize eventFlowID=_eventFlowID;
@property(nonatomic) int eventCode; // @synthesize eventCode=_eventCode;
@property(nonatomic) long long qosTier; // @synthesize qosTier=_qosTier;
@property(copy, nonatomic) NSString *obfuscatedGaiaID; // @synthesize obfuscatedGaiaID=_obfuscatedGaiaID;
@property(copy, nonatomic) NSString *componentID; // @synthesize componentID=_componentID;
@property(nonatomic) long long logSource; // @synthesize logSource=_logSource;
@property(retain, nonatomic) NSData *extensionData; // @synthesize extensionData=_extensionData;
@property(retain, nonatomic) GPBMessage *extension; // @synthesize extension=_extension;
@property(readonly, nonatomic) long long eventTimeZoneOffsetSeconds; // @synthesize eventTimeZoneOffsetSeconds=_eventTimeZoneOffsetSeconds;
@property(readonly, nonatomic) long long eventUptimeMilliseconds; // @synthesize eventUptimeMilliseconds=_eventUptimeMilliseconds;
@property(readonly, nonatomic) long long eventTimeMilliseconds; // @synthesize eventTimeMilliseconds=_eventTimeMilliseconds;
- (void).cxx_destruct;
@property(readonly, nonatomic) GPBInt32Array *testCodes; // @synthesize testCodes=_testCodes;
- (void)addTestCode:(int)arg1;
- (void)addTestCodes:(id)arg1;
@property(readonly, nonatomic) NSArray *experimentTokens;
- (void)addExperimentTokens:(id)arg1;
@property(readonly, nonatomic) GPBInt32Array *experimentIDs; // @synthesize experimentIDs=_experimentIDs;
- (void)addExperimentID:(int)arg1;
- (void)addExperimentIDs:(id)arg1;
- (id)initWithLogSource:(long long)arg1;
- (id)initWithLogSource:(long long)arg1 isAnonymous:(_Bool)arg2;
- (id)initWithLogSource:(long long)arg1 isAnonymous:(_Bool)arg2 clock:(id)arg3;
- (id)toLogEventProto;

@end

@interface CCTClientInfoMaker : NSObject
{
    ClientInfo *_cachedClientInfo;
    long long _onceToken;
}

+ (id)currentCountryCode;
+ (id)currentLanguageCode;
- (void).cxx_destruct;
- (id)makeClientInfoInternal;
- (id)makeClientInfo;

@end

@interface CCTClearcutVersion : NSObject
{
}

+ (int)changelist;
+ (int)libraryVersion;

@end

@interface CCTClearcutCounters : NSObject
{
    NSMutableArray *_counters;
    id <CCTClockProtocol> _clock;
}

- (void).cxx_destruct;
- (id)descriptionForAllCountersWithName:(id)arg1;
- (id)countersProtoWithDimension:(id)arg1;
- (id)counterProtoNamed:(unsigned long long)arg1 dimension:(id)arg2;
- (id)bucketProtoWithBucketKey:(long long)arg1 nameHash:(unsigned long long)arg2 serializedDimension:(id)arg3;
- (id)countersProtosAndReset:(_Bool)arg1;
- (void)incrementCounterWithName:(id)arg1 dimension:(id)arg2 bucket:(long long)arg3 amount:(long long)arg4;
- (void)reset;
- (id)initWithClock:(id)arg1;
- (id)init;

@end

@interface CCTClearcutCounterInstance : NSObject <NSCopying>
{
    NSString *_name;
    CCTClearcutCounters *_counters;
}

- (void).cxx_destruct;
- (void)incrementWithDimension:(id)arg1 amount:(long long)arg2;
- (void)incrementWithDimension:(id)arg1;
- (void)increment;
- (id)counters;
- (id)name;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 counters:(id)arg2;

@end

@interface CCTClearcutIntegerHistogram : NSObject <NSCopying>
{
    NSString *_name;
    CCTClearcutCounters *_counters;
}

- (void).cxx_destruct;
- (void)incrementBucket:(long long)arg1 dimension:(id)arg2;
- (void)incrementBucket:(long long)arg1;
- (id)counters;
- (id)name;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 counters:(id)arg2;

@end

@interface CCTClearcutTimerHistogram : NSObject <NSCopying>
{
    double _startTime;
    NSString *_name;
    CCTClearcutCounters *_counters;
}

- (void).cxx_destruct;
- (_Bool)isTimerRunning;
- (void)stopAndLogTimeWithDimension:(id)arg1;
- (void)stopAndLogTime;
- (void)cancel;
- (void)start;
- (id)counters;
- (id)name;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 counters:(id)arg2;

@end

@interface CCTSystemClock : NSObject <CCTClockProtocol>
{
    long long _cachedBootTimeMilliseconds;
}

+ (long long)extractBootTimeMilliseconds;
+ (id)systemClock;
@property(nonatomic) long long cachedBootTimeMilliseconds; // @synthesize cachedBootTimeMilliseconds=_cachedBootTimeMilliseconds;
- (void)timeZoneDidChange:(id)arg1;
- (void)handleSignificantTimeChange:(id)arg1;
- (void)scheduleAfterTimeInterval:(double)arg1 block:(CDUnknownBlockType)arg2;
- (id)now;
- (double)elapsedTimeSince:(id)arg1;
- (long long)timezoneOffsetSeconds;
- (long long)uptimeMilliseconds;
- (long long)bootTimeMilliseconds;
- (long long)currentTimeMilliseconds;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PHTPhenotypeExperimentTokens : NSObject
{
    NSString *_user;
    NSArray *_tokens;
    NSDictionary *_crossTokens;
    ExperimentIds *_externalExperimentIDs;
}

+ (id)experimentIDsStringWithTokensArray:(id)arg1 userID:(id)arg2;
+ (id)experimentIDsWithTokensArray:(id)arg1 userID:(id)arg2;
@property(readonly, copy, nonatomic) ExperimentIds *externalExperimentIDs; // @synthesize externalExperimentIDs=_externalExperimentIDs;
@property(readonly, nonatomic) NSDictionary *crossTokens; // @synthesize crossTokens=_crossTokens;
@property(readonly, nonatomic) NSArray *tokens; // @synthesize tokens=_tokens;
@property(readonly, nonatomic) NSString *user; // @synthesize user=_user;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)equalTokenArrays:(id)arg1 other:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)initWithUser:(id)arg1 tokens:(id)arg2 crossTokens:(id)arg3;
- (id)initWithUser:(id)arg1 tokens:(id)arg2 crossTokens:(id)arg3 externalExperimentIDs:(id)arg4;

@end

@interface PHTPhenotypeUtil : NSObject
{
}

+ (id)bundleNamespacedPackage:(id)arg1 multiCommitMode:(_Bool)arg2;
+ (_Bool)isMultiCommitPackage:(id)arg1;
+ (id)defaultPhenotypeDatabasePath;
+ (id)defaultPhenotypeDirectory;
+ (void)setDefaultDirectory:(id)arg1;
+ (id)phenotypePackageName;
+ (unsigned long long)intPow:(unsigned long long)arg1 power:(unsigned long long)arg2;
+ (unsigned long long)appVersionAsInteger:(id)arg1 withMajorWidth:(unsigned long long)arg2 minorWidth:(unsigned long long)arg3 patchWidth:(unsigned long long)arg4;
+ (unsigned long long)appVersionAsInteger:(id)arg1 withWidth:(unsigned long long)arg2;
+ (unsigned long long)appVersionAsIntegerWithMajorWidth:(unsigned long long)arg1 minorWidth:(unsigned long long)arg2 patchWidth:(unsigned long long)arg3;
+ (unsigned long long)appVersionAsIntegerWithWidth:(unsigned long long)arg1;
+ (_Bool)createDirectoryIfMissing:(id)arg1 error:(id *)arg2;
+ (id)uuid;
+ (id)deviceModel;

@end

@interface GIPLoggingReroutingGTMLogger : GTMLogger
{
    id <GIPLogAppControl><GIPLogMultiplexing> _logMultiplexer;
    id <GTMLogFilter> _stackTraceFilter;
    CDUnknownFunctionPointerType _callStackSymbolProvider;
}

@property(nonatomic) CDUnknownFunctionPointerType callStackSymbolProvider; // @synthesize callStackSymbolProvider=_callStackSymbolProvider;
- (void).cxx_destruct;
- (void)setFilter:(id)arg1;
- (id)filter;
- (void)setFormatter:(id)arg1;
- (id)formatter;
- (void)setWriter:(id)arg1;
- (id)writer;
- (void)logInternalFunc:(const char *)arg1 format:(id)arg2 valist:(char *)arg3 level:(int)arg4;
- (id)initWithLogMultiplexer:(id)arg1;
- (id)initWithLogMultiplexer:(id)arg1 stackTraceFilter:(id)arg2;

@end

@interface GIPGTMForwardingLogger : NSObject <GIPSyncLogger>
{
}

- (id)filter;
- (void)logWithMessage:(id)arg1;

@end

@interface GIPLogMultiplexer : NSObject <GIPLogAppControl, GIPLogMultiplexing>
{
    id <GIPLogFilter> _filter;
    NSMutableSet *_syncLoggers;
    NSMutableSet *_asyncLoggers;
    GIPGTMForwardingLogger *_gtmForwardingLogger;
    NSObject<OS_dispatch_queue> *_loggingQueue;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *loggingQueue; // @synthesize loggingQueue=_loggingQueue;
- (void).cxx_destruct;
- (void)removeAsyncLogger:(id)arg1;
- (void)addAsyncLogger:(id)arg1;
- (void)removeSyncLogger:(id)arg1;
- (void)addSyncLogger:(id)arg1;
- (void)setLogFilter:(id)arg1;
- (void)logWithMessage:(id)arg1;
- (void)stopForwardingMessagesToGTMLogger;
- (id)init;

@end

@interface GIPLogNoFilter : NSObject <GIPLogFilter>
{
}

- (_Bool)allowLogMessage:(id)arg1;

@end

@interface GIPLogDropAllFilter : NSObject <GIPLogFilter>
{
}

- (_Bool)allowLogMessage:(id)arg1;

@end

@interface GIPLogMininumLevelFilter : NSObject <GIPLogFilter>
{
    unsigned long long _minimumLevel;
}

- (_Bool)allowLogMessage:(id)arg1;
- (id)initWithMinimumLevel:(unsigned long long)arg1;

@end

@interface GIPLogComponentFilter : NSObject <GIPLogFilter>
{
    NSString *_component;
}

- (void).cxx_destruct;
- (_Bool)allowLogMessage:(id)arg1;
- (id)initWithComponent:(id)arg1;

@end

@interface GIPLogMessage : NSObject <NSCopying>
{
    unsigned long long _level;
    NSString *_format;
    NSString *_formattedString;
    NSString *_file;
    NSString *_function;
    unsigned long long _line;
    NSString *_threadName;
    NSString *_dispatchQueueLabel;
    NSArray *_stackTrace;
    NSDictionary *_safeParameters;
    GIPLogMetadata *_logMetadata;
}

@property(readonly, nonatomic) GIPLogMetadata *logMetadata; // @synthesize logMetadata=_logMetadata;
@property(readonly, nonatomic) NSDictionary *safeParameters; // @synthesize safeParameters=_safeParameters;
@property(readonly, nonatomic) NSArray *stackTrace; // @synthesize stackTrace=_stackTrace;
@property(readonly, nonatomic) NSString *dispatchQueueLabel; // @synthesize dispatchQueueLabel=_dispatchQueueLabel;
@property(readonly, nonatomic) NSString *threadName; // @synthesize threadName=_threadName;
@property(readonly, nonatomic) unsigned long long line; // @synthesize line=_line;
@property(readonly, nonatomic) NSString *function; // @synthesize function=_function;
@property(readonly, nonatomic) NSString *file; // @synthesize file=_file;
@property(readonly, nonatomic) NSString *formattedString; // @synthesize formattedString=_formattedString;
@property(readonly, nonatomic) NSString *format; // @synthesize format=_format;
@property(readonly, nonatomic) unsigned long long level; // @synthesize level=_level;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithLevel:(unsigned long long)arg1 format:(id)arg2 formattedString:(id)arg3 file:(id)arg4 function:(id)arg5 line:(unsigned long long)arg6 threadName:(id)arg7 dispatchQueueLabel:(id)arg8 stackTrace:(id)arg9 safeParameters:(id)arg10 logMetadata:(id)arg11;

@end

@interface GIPLogMetadata : NSObject <NSCopying>
{
    NSDictionary *_properties;
}

+ (id)metadataWithObfuscatedGaiaID:(id)arg1 component:(id)arg2 cause:(id)arg3;
+ (id)metadataWithComponent:(id)arg1 stackTrace:(id)arg2;
+ (id)metadataWithObfuscatedGaiaID:(id)arg1 stackTrace:(id)arg2;
+ (id)metadataWithObfuscatedGaiaID:(id)arg1 component:(id)arg2;
+ (id)metadataWithStackTrace:(id)arg1;
+ (id)metadataWithCause:(id)arg1;
+ (id)metadataWithComponent:(id)arg1;
+ (id)metadataWithObfuscatedGaiaID:(id)arg1;
@property(readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (id)messageWithKey:(id)arg1 value:(id)arg2;
- (id)propertyForKey:(id)arg1;
@property(readonly, nonatomic) NSArray *stackTrace;
@property(readonly, nonatomic) NSError *cause;
@property(readonly, nonatomic) NSString *component;
@property(readonly, nonatomic) NSString *obfuscatedGaiaID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)metadataByAddingCause:(id)arg1;
- (id)metadataByAddingComponent:(id)arg1;
- (id)metadataByAddingObfuscatedGaiaID:(id)arg1;
- (id)init;
- (id)initWithProperties:(id)arg1;

@end

@interface GIPSafeParameter : NSObject <NSCopying>
{
    unsigned long long _type;
    NSString *_comment;
}

@property(readonly, nonatomic) NSString *comment; // @synthesize comment=_comment;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(unsigned long long)arg1 comment:(id)arg2;

@end

@interface GIPSafeStringParameter : GIPSafeParameter
{
    NSString *_stringValue;
}

+ (id)parameterWithString:(id)arg1 type:(unsigned long long)arg2 comment:(id)arg3;
@property(readonly, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithString:(id)arg1 type:(unsigned long long)arg2 comment:(id)arg3;

@end

@interface GIPSafeNumberParameter : GIPSafeParameter
{
    NSNumber *_numberValue;
}

+ (id)parameterWithNumber:(id)arg1 type:(unsigned long long)arg2 comment:(id)arg3;
@property(readonly, nonatomic) NSNumber *numberValue; // @synthesize numberValue=_numberValue;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithNumber:(id)arg1 type:(unsigned long long)arg2 comment:(id)arg3;

@end

@interface GIPPseudonymousIDStore : NSObject
{
    _Bool _hasInitialized;
    NSObject<OS_dispatch_queue> *_queue;
    NSHashTable *_observers;
    NSRegularExpression *_cookieValueRegex;
}

+ (id)sharedInstance;
+ (void)disableForTest;
+ (void)enable;
+ (void)setDefaultDirectory:(id)arg1;
@property(retain, nonatomic) NSRegularExpression *cookieValueRegex; // @synthesize cookieValueRegex=_cookieValueRegex;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)setPseudonymousIDFromResponse:(id)arg1;
- (void)updateRequestWithPseudonymousID:(id)arg1;
- (_Bool)isValidPseudonymousID:(id)arg1;
- (void)setPseudonymousIDWithoutCheckingEnabledStatus:(id)arg1;
@property(retain, nonatomic) NSString *pseudonymousID;
- (id)pseudonymousIDWithoutCheckingEnabledStatus;
- (id)pseudonymousIDURL;
- (_Bool)initializeStorage;
- (id)init;

@end

@interface GPBInt32Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(int)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(int)arg2;
- (void)insertValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const int *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBUInt32Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    unsigned int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(unsigned int)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(unsigned int)arg2;
- (void)insertValue:(unsigned int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(unsigned int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (unsigned int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBInt64Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    long long *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(long long)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(long long)arg2;
- (void)insertValue:(long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const long long *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(long long)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (long long)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBUInt64Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    unsigned long long *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(unsigned long long)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(unsigned long long)arg2;
- (void)insertValue:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(unsigned long long)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (unsigned long long)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBFloatArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    float *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(float)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(float)arg2;
- (void)insertValue:(float)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const float *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(float)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (float)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const float *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBDoubleArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    double *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(double)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(double)arg2;
- (void)insertValue:(double)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const double *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(double)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (double)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const double *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBBoolArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    _Bool *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(_Bool)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(_Bool)arg2;
- (void)insertValue:(_Bool)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const _Bool *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(_Bool)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (_Bool)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const _Bool *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBEnumArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    CDUnknownFunctionPointerType _validationFunc;
    int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2;
+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)array;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(int)arg2;
- (void)insertValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(int)arg1;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addRawValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withRawValue:(int)arg2;
- (void)insertRawValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addRawValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addRawValue:(int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (int)rawValueAtIndex:(unsigned long long)arg1;
- (int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateRawValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRawValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 count:(unsigned long long)arg3;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBAutocreatedArray : NSMutableArray
{
    GPBMessage *_autocreator;
    NSMutableArray *_array;
}

- (void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)addObject:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface GPBCodedInputStream : NSObject
{
    struct GPBCodedInputStreamState state_;
    NSData *buffer_;
}

+ (id)streamWithData:(id)arg1;
- (long long)readSInt64;
- (int)readSInt32;
- (long long)readSFixed64;
- (int)readSFixed32;
- (int)readEnum;
- (unsigned int)readUInt32;
- (id)readBytes;
- (void)readMapEntry:(id)arg1 extensionRegistry:(id)arg2 field:(id)arg3 parentMessage:(id)arg4;
- (void)readMessage:(id)arg1 extensionRegistry:(id)arg2;
- (void)readUnknownGroup:(int)arg1 message:(id)arg2;
- (void)readGroup:(int)arg1 message:(id)arg2 extensionRegistry:(id)arg3;
- (id)readString;
- (_Bool)readBool;
- (unsigned int)readFixed32;
- (unsigned long long)readFixed64;
- (int)readInt32;
- (long long)readInt64;
- (unsigned long long)readUInt64;
- (float)readFloat;
- (double)readDouble;
- (void)popLimit:(unsigned long long)arg1;
- (unsigned long long)pushLimit:(unsigned long long)arg1;
- (unsigned long long)position;
- (_Bool)isAtEnd;
- (void)skipMessage;
- (_Bool)skipField:(int)arg1;
- (void)checkLastTagWas:(int)arg1;
- (int)readTag;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface GPBCodedOutputStream : NSObject
{
    struct GPBOutputBufferState state_;
    NSMutableData *buffer_;
}

+ (id)streamWithData:(id)arg1;
+ (id)streamWithOutputStream:(id)arg1;
- (void)writeRawLittleEndian64:(long long)arg1;
- (void)writeRawLittleEndian32:(int)arg1;
- (void)writeRawVarint64:(long long)arg1;
- (void)writeRawVarintSizeTAs32:(unsigned long long)arg1;
- (void)writeRawVarint32:(int)arg1;
- (void)writeTag:(unsigned int)arg1 format:(int)arg2;
- (void)writeRawPtr:(const void *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (void)writeRawData:(id)arg1;
- (void)writeRawByte:(unsigned char)arg1;
- (void)flush;
- (void)writeRawMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroupArray:(int)arg1 values:(id)arg2;
- (void)writeGroupArray:(int)arg1 values:(id)arg2;
- (void)writeBytesArray:(int)arg1 values:(id)arg2;
- (void)writeMessageArray:(int)arg1 values:(id)arg2;
- (void)writeStringArray:(int)arg1 values:(id)arg2;
- (void)writeEnumArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeBoolArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFloatArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeDoubleArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64:(int)arg1 value:(long long)arg2;
- (void)writeSInt64NoTag:(long long)arg1;
- (void)writeSInt32:(int)arg1 value:(int)arg2;
- (void)writeSInt32NoTag:(int)arg1;
- (void)writeSFixed64:(int)arg1 value:(long long)arg2;
- (void)writeSFixed64NoTag:(long long)arg1;
- (void)writeSFixed32:(int)arg1 value:(int)arg2;
- (void)writeSFixed32NoTag:(int)arg1;
- (void)writeEnum:(int)arg1 value:(int)arg2;
- (void)writeEnumNoTag:(int)arg1;
- (void)writeUInt32:(int)arg1 value:(unsigned int)arg2;
- (void)writeUInt32NoTag:(unsigned int)arg1;
- (void)writeBytes:(int)arg1 value:(id)arg2;
- (void)writeBytesNoTag:(id)arg1;
- (void)writeMessage:(int)arg1 value:(id)arg2;
- (void)writeMessageNoTag:(id)arg1;
- (void)writeUnknownGroup:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeGroup:(int)arg1 value:(id)arg2;
- (void)writeGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeString:(int)arg1 value:(id)arg2;
- (void)writeStringNoTag:(id)arg1;
- (void)writeBool:(int)arg1 value:(_Bool)arg2;
- (void)writeBoolNoTag:(_Bool)arg1;
- (void)writeFixed32:(int)arg1 value:(unsigned int)arg2;
- (void)writeFixed32NoTag:(unsigned int)arg1;
- (void)writeFixed64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeFixed64NoTag:(unsigned long long)arg1;
- (void)writeInt32:(int)arg1 value:(int)arg2;
- (void)writeInt32NoTag:(int)arg1;
- (void)writeInt64:(int)arg1 value:(long long)arg2;
- (void)writeInt64NoTag:(long long)arg1;
- (void)writeUInt64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeUInt64NoTag:(unsigned long long)arg1;
- (void)writeFloat:(int)arg1 value:(float)arg2;
- (void)writeFloatNoTag:(float)arg1;
- (void)writeDouble:(int)arg1 value:(double)arg2;
- (void)writeDoubleNoTag:(double)arg1;
- (id)initWithOutputStream:(id)arg1 data:(id)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithOutputStream:(id)arg1;
- (void)dealloc;

@end

@interface GPBDescriptor : NSObject <NSCopying>
{
    NSArray *fields_;
    NSArray *oneofs_;
    unsigned int storageSize_;
    Class messageClass_;
    GPBFileDescriptor *file_;
    _Bool wireFormat_;
    unsigned int extensionRangesCount_;
    const struct GPBExtensionRange *extensionRanges_;
}

+ (id)allocDescriptorForClass:(Class)arg1 rootClass:(Class)arg2 file:(id)arg3 fields:(void *)arg4 fieldCount:(unsigned int)arg5 storageSize:(unsigned int)arg6 flags:(unsigned int)arg7;
@property(readonly, nonatomic, getter=isWireFormat) _Bool wireFormat; // @synthesize wireFormat=wireFormat_;
@property(readonly, nonatomic) GPBFileDescriptor *file; // @synthesize file=file_;
@property(readonly, nonatomic) unsigned int extensionRangesCount; // @synthesize extensionRangesCount=extensionRangesCount_;
@property(readonly, nonatomic) const struct GPBExtensionRange *extensionRanges; // @synthesize extensionRanges=extensionRanges_;
@property(readonly, nonatomic) NSArray *oneofs; // @synthesize oneofs=oneofs_;
@property(readonly, nonatomic) NSArray *fields; // @synthesize fields=fields_;
@property(readonly, nonatomic) Class messageClass; // @synthesize messageClass=messageClass_;
- (id)oneofWithName:(id)arg1;
- (id)fieldWithName:(id)arg1;
- (id)fieldWithNumber:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) NSString *fullName;
@property(readonly) GPBDescriptor *containingType;
@property(readonly, copy, nonatomic) NSString *name;
- (void)setupMessageClassNameSuffix:(id)arg1;
- (void)setupContainingMessageClassName:(const char *)arg1;
- (void)setupExtensionRanges:(const struct GPBExtensionRange *)arg1 count:(int)arg2;
- (void)setupExtraTextInfo:(const char *)arg1;
- (void)setupOneofs:(const char **)arg1 count:(unsigned int)arg2 firstHasIndex:(int)arg3;
- (void)dealloc;
- (id)initWithClass:(Class)arg1 file:(id)arg2 fields:(id)arg3 storageSize:(unsigned int)arg4 wireFormat:(_Bool)arg5;

@end

@interface GPBFileDescriptor : NSObject
{
    NSString *package_;
    NSString *objcPrefix_;
    unsigned char syntax_;
}

@property(readonly, nonatomic) unsigned char syntax; // @synthesize syntax=syntax_;
@property(readonly, copy, nonatomic) NSString *objcPrefix; // @synthesize objcPrefix=objcPrefix_;
@property(readonly, copy, nonatomic) NSString *package; // @synthesize package=package_;
- (void)dealloc;
- (id)initWithPackage:(id)arg1 syntax:(unsigned char)arg2;
- (id)initWithPackage:(id)arg1 objcPrefix:(id)arg2 syntax:(unsigned char)arg3;

@end

@interface GPBOneofDescriptor : NSObject
{
    const char *name_;
    NSArray *fields_;
    SEL caseSel_;
}

@property(readonly, nonatomic) NSArray *fields; // @synthesize fields=fields_;
- (id)fieldWithName:(id)arg1;
- (id)fieldWithNumber:(unsigned int)arg1;
@property(readonly, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithName:(const char *)arg1 fields:(id)arg2;

@end

@interface GPBFieldDescriptor : NSObject
{
    struct GPBMessageFieldDescription *description_;
    GPBOneofDescriptor *containingOneof_;
    SEL getSel_;
    SEL setSel_;
    SEL hasOrCountSel_;
    SEL setHasSel_;
    CDUnion_88782d86 defaultValue_;
    Class msgClass_;
    union {
        GPBEnumDescriptor *enumDescriptor_;
        CDUnknownFunctionPointerType enumVerifier_;
    } enumHandling_;
}

@property(readonly, nonatomic) GPBOneofDescriptor *containingOneof; // @synthesize containingOneof=containingOneof_;
@property(readonly, nonatomic) Class msgClass; // @synthesize msgClass=msgClass_;
- (id)textFormatName;
@property(readonly, nonatomic) CDUnion_88782d86 defaultValue;
@property(readonly, nonatomic) GPBEnumDescriptor *enumDescriptor;
- (_Bool)isValidEnumValue:(int)arg1;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic) unsigned char mapKeyDataType;
@property(readonly, nonatomic) unsigned char fieldType;
@property(readonly, nonatomic, getter=isOptional) _Bool optional;
@property(readonly, nonatomic, getter=isRequired) _Bool required;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, nonatomic) unsigned int number;
@property(readonly, nonatomic) _Bool hasDefaultValue;
@property(readonly, nonatomic) unsigned char dataType;
- (void)dealloc;
- (id)initWithFieldDescription:(void *)arg1 includesDefault:(_Bool)arg2 syntax:(unsigned char)arg3;
- (id)init;

@end

@interface GPBEnumDescriptor : NSObject
{
    NSString *name_;
    const char *valueNames_;
    const int *values_;
    CDUnknownFunctionPointerType enumVerifier_;
    const char *extraTextFormatInfo_;
    unsigned int *nameOffsets_;
    unsigned int valueCount_;
}

+ (id)allocDescriptorForName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5 extraTextFormatInfo:(const char *)arg6;
+ (id)allocDescriptorForName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5;
@property(readonly, nonatomic) CDUnknownFunctionPointerType enumVerifier; // @synthesize enumVerifier=enumVerifier_;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=name_;
- (id)getEnumTextFormatNameForIndex:(unsigned int)arg1;
- (id)getEnumNameForIndex:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int enumNameCount;
- (id)textFormatNameForValue:(int)arg1;
- (_Bool)getValue:(int *)arg1 forEnumTextFormatName:(id)arg2;
- (_Bool)getValue:(int *)arg1 forEnumName:(id)arg2;
- (id)enumNameForValue:(int)arg1;
- (void)calcValueNameOffsets;
- (void)dealloc;
- (id)initWithName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5;

@end

@interface GPBExtensionDescriptor : NSObject <NSCopying>
{
    struct GPBExtensionDescription *description_;
    CDUnion_88782d86 defaultValue_;
    Class containingMessageClass_;
}

@property(readonly, nonatomic) Class containingMessageClass; // @synthesize containingMessageClass=containingMessageClass_;
- (long long)compareByFieldNumber:(id)arg1;
@property(readonly, nonatomic) id defaultValue;
@property(readonly, nonatomic) GPBEnumDescriptor *enumDescriptor;
@property(readonly, nonatomic) Class msgClass;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic, getter=isRepeated) _Bool repeated;
@property(readonly, nonatomic) int alternateWireType;
@property(readonly, nonatomic) int wireType;
@property(readonly, nonatomic) unsigned char dataType;
@property(readonly, nonatomic) unsigned int fieldNumber;
- (const char *)singletonNameC;
@property(readonly, nonatomic) NSString *singletonName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithExtensionDescription:(struct GPBExtensionDescription *)arg1;

@end

@interface GPBUInt32UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt32ForKey:(unsigned int)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt32ForKey:(unsigned int)arg1;
- (void)setInt32:(int)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt64ForKey:(unsigned int)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt64ForKey:(unsigned int)arg1;
- (void)setInt64:(long long)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeBoolForKey:(unsigned int)arg1;
- (void)setBool:(_Bool)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeFloatForKey:(unsigned int)arg1;
- (void)setFloat:(float)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeDoubleForKey:(unsigned int)arg1;
- (void)setDouble:(double)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(unsigned int)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(unsigned int)arg1;
- (void)setRawValue:(int)arg1 forKey:(unsigned int)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(unsigned int)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned int *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBUInt32ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(unsigned int)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt32ForKey:(int)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt32ForKey:(int)arg1;
- (void)setInt32:(int)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt64ForKey:(int)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt64ForKey:(int)arg1;
- (void)setInt64:(long long)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeBoolForKey:(int)arg1;
- (void)setBool:(_Bool)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeFloatForKey:(int)arg1;
- (void)setFloat:(float)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeDoubleForKey:(int)arg1;
- (void)setDouble:(double)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(int)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(int)arg1;
- (void)setRawValue:(int)arg1 forKey:(int)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(int)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const int *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBInt32ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeObjectForKey:(int)arg1;
- (void)setObject:(id)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(int)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt32ForKey:(unsigned long long)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt32ForKey:(unsigned long long)arg1;
- (void)setInt32:(int)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt64ForKey:(unsigned long long)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt64ForKey:(unsigned long long)arg1;
- (void)setInt64:(long long)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeBoolForKey:(unsigned long long)arg1;
- (void)setBool:(_Bool)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeFloatForKey:(unsigned long long)arg1;
- (void)setFloat:(float)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeDoubleForKey:(unsigned long long)arg1;
- (void)setDouble:(double)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(unsigned long long)arg1;
- (void)setRawValue:(int)arg1 forKey:(unsigned long long)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(unsigned long long)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned long long *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBUInt64ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeObjectForKey:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(unsigned long long)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt32ForKey:(long long)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt32ForKey:(long long)arg1;
- (void)setInt32:(int)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt64ForKey:(long long)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt64ForKey:(long long)arg1;
- (void)setInt64:(long long)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeBoolForKey:(long long)arg1;
- (void)setBool:(_Bool)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeFloatForKey:(long long)arg1;
- (void)setFloat:(float)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeDoubleForKey:(long long)arg1;
- (void)setDouble:(double)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(long long)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(long long)arg1;
- (void)setRawValue:(int)arg1 forKey:(long long)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(long long)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const long long *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBInt64ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeObjectForKey:(long long)arg1;
- (void)setObject:(id)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(long long)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringUInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt32ForKey:(id)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt32ForKey:(id)arg1;
- (void)setInt32:(int)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringUInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeUInt64ForKey:(id)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeInt64ForKey:(id)arg1;
- (void)setInt64:(long long)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringBoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeBoolForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringFloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeFloatForKey:(id)arg1;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringDoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)removeAll;
- (void)removeDoubleForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringEnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(id)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(id)arg1;
- (void)setRawValue:(int)arg1 forKey:(id)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(id)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(id *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBBoolUInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    unsigned int _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeUInt32ForKey:(_Bool)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    int _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeInt32ForKey:(_Bool)arg1;
- (void)setInt32:(int)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getInt32:(int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolUInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    unsigned long long _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeUInt64ForKey:(_Bool)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    long long _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeInt64ForKey:(_Bool)arg1;
- (void)setInt64:(long long)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getInt64:(long long *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolBoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    _Bool _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeBoolForKey:(_Bool)arg1;
- (void)setBool:(_Bool)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getBool:(_Bool *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolFloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    float _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeFloatForKey:(_Bool)arg1;
- (void)setFloat:(float)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getFloat:(float *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolDoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    double _values[2];
    _Bool _valueSet[2];
}

- (void)removeAll;
- (void)removeDoubleForKey:(_Bool)arg1;
- (void)setDouble:(double)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getDouble:(double *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    id _values[2];
}

- (void)removeAll;
- (void)removeObjectForKey:(_Bool)arg1;
- (void)setObject:(id)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)objectForKey:(_Bool)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolEnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    CDUnknownFunctionPointerType _validationFunc;
    int _values[2];
    _Bool _valueSet[2];
}

@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)removeAll;
- (void)removeEnumForKey:(_Bool)arg1;
- (void)setRawValue:(int)arg1 forKey:(_Bool)arg2;
- (void)setEnum:(int)arg1 forKey:(_Bool)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(_Bool)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const _Bool *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBAutocreatedDictionary : NSMutableDictionary
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;

@end

@interface GPBExtensionRegistry : NSObject <NSCopying>
{
    NSMutableDictionary *mutableClassMap_;
}

- (void)addExtensions:(id)arg1;
- (id)extensionForDescriptor:(id)arg1 fieldNumber:(long long)arg2;
- (void)addExtension:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GPBMessage : NSObject <NSSecureCoding, NSCopying>
{
    GPBUnknownFieldSet *unknownFields_;
    NSMutableDictionary *extensionMap_;
    NSMutableDictionary *autocreatedExtensionMap_;
    GPBMessage *autocreator_;
    GPBFieldDescriptor *autocreatorField_;
    GPBExtensionDescriptor *autocreatorExtension_;
    // Error parsing type: A@, name: readOnlySemaphore_
    struct GPBMessage_Storage *messageStorage_;
}

+ (_Bool)accessInstanceVariablesDirectly;
+ (_Bool)supportsSecureCoding;
+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (id)parseDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromData:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromData:(id)arg1 error:(id *)arg2;
+ (id)message;
+ (id)descriptor;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)serializedSize;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (void)mergeFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (void)addUnknownMapEntry:(int)arg1 value:(id)arg2;
- (_Bool)parseUnknownField:(id)arg1 extensionRegistry:(id)arg2 tag:(unsigned int)arg3;
- (void)parseMessageSet:(id)arg1 extensionRegistry:(id)arg2;
@property(copy, nonatomic) GPBUnknownFieldSet *unknownFields;
- (void)mergeDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (void)mergeFromData:(id)arg1 extensionRegistry:(id)arg2;
- (void)clearExtension:(id)arg1;
- (void)setExtension:(id)arg1 index:(unsigned long long)arg2 value:(id)arg3;
- (void)addExtension:(id)arg1 value:(id)arg2;
- (void)setExtension:(id)arg1 value:(id)arg2;
- (void)writeExtensionsToCodedOutputStream:(id)arg1 range:(struct GPBExtensionRange)arg2;
- (id)extensionsCurrentlySet;
- (_Bool)hasExtension:(id)arg1;
- (id)getExistingExtension:(id)arg1;
- (id)getExtension:(id)arg1;
- (void)writeField:(id)arg1 toCodedOutputStream:(id)arg2;
- (void)writeDelimitedToCodedOutputStream:(id)arg1;
- (void)writeDelimitedToOutputStream:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1;
- (void)writeToOutputStream:(id)arg1;
- (id)delimitedData;
- (id)data;
- (id)descriptor;
@property(readonly, nonatomic, getter=isInitialized) _Bool initialized;
- (void)internalClear:(_Bool)arg1;
- (void)clear;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyFieldsInto:(id)arg1 zone:(struct _NSZone *)arg2 descriptor:(id)arg3;
- (void)dealloc;
- (id)initWithCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface GPBRootObject : NSObject <GPBMessageSignatureProtocol>
{
}

+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (void)globallyRegisterExtension:(id)arg1;
+ (id)extensionRegistry;
+ (void)initialize;

@end

@interface GPBUnknownField : NSObject <NSCopying>
{
    int number_;
    GPBUInt64Array *mutableVarintList_;
    GPBUInt32Array *mutableFixed32List_;
    GPBUInt64Array *mutableFixed64List_;
    NSMutableArray *mutableLengthDelimitedList_;
    NSMutableArray *mutableGroupList_;
}

@property(readonly, nonatomic) NSArray *groupList; // @synthesize groupList=mutableGroupList_;
@property(readonly, nonatomic) NSArray *lengthDelimitedList; // @synthesize lengthDelimitedList=mutableLengthDelimitedList_;
@property(readonly, nonatomic) GPBUInt64Array *fixed64List; // @synthesize fixed64List=mutableFixed64List_;
@property(readonly, nonatomic) GPBUInt32Array *fixed32List; // @synthesize fixed32List=mutableFixed32List_;
@property(readonly, nonatomic) GPBUInt64Array *varintList; // @synthesize varintList=mutableVarintList_;
@property(readonly, nonatomic) int number; // @synthesize number=number_;
- (void)addGroup:(id)arg1;
- (void)addLengthDelimited:(id)arg1;
- (void)addFixed64:(unsigned long long)arg1;
- (void)addFixed32:(unsigned int)arg1;
- (void)addVarint:(unsigned long long)arg1;
- (void)mergeFromField:(id)arg1;
- (id)description;
- (unsigned long long)serializedSizeAsMessageSetExtension;
- (void)writeAsMessageSetExtensionToOutput:(id)arg1;
- (unsigned long long)serializedSize;
- (void)writeToOutput:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithNumber:(int)arg1;

@end

@interface GPBUnknownFieldSet : NSObject <NSCopying>
{
    struct __CFDictionary *fields_;
}

+ (_Bool)isFieldTag:(int)arg1;
- (void)getTags:(int *)arg1;
- (void)mergeFromCodedInputStream:(id)arg1;
- (void)addUnknownMapEntry:(int)arg1 value:(id)arg2;
- (void)mergeMessageSetMessage:(int)arg1 data:(id)arg2;
- (_Bool)mergeFieldFrom:(int)arg1 input:(id)arg2;
- (void)mergeVarintField:(int)arg1 value:(int)arg2;
- (void)mergeFromData:(id)arg1;
- (void)mergeUnknownFields:(id)arg1;
- (id)mutableFieldForNumber:(int)arg1 create:(_Bool)arg2;
- (void)addField:(id)arg1;
- (id)data;
- (unsigned long long)serializedSizeAsMessageSet;
- (void)writeAsMessageSetTo:(id)arg1;
- (unsigned long long)serializedSize;
- (id)description;
- (void)writeToCodedOutputStream:(id)arg1;
- (id)sortedFields;
- (unsigned long long)countOfFields;
- (id)getField:(int)arg1;
- (_Bool)hasField:(int)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GPBAnyRoot : GPBRootObject
{
}

@end

@interface GPBAny : GPBMessage
{
}

+ (id)descriptor;
+ (id)anyWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
+ (id)anyWithMessage:(id)arg1 error:(id *)arg2;
- (id)unpackMessageClass:(Class)arg1 error:(id *)arg2;
- (_Bool)packWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
- (_Bool)packWithMessage:(id)arg1 error:(id *)arg2;
- (id)initWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
- (id)initWithMessage:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(copy, nonatomic) NSString *typeURL; // @dynamic typeURL;
@property(copy, nonatomic) NSData *value; // @dynamic value;

@end

@interface GPBApiRoot : GPBRootObject
{
}

@end

@interface GPBApi : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(retain, nonatomic) NSMutableArray *methodsArray; // @dynamic methodsArray;
@property(readonly, nonatomic) unsigned long long methodsArray_Count; // @dynamic methodsArray_Count;
@property(retain, nonatomic) NSMutableArray *mixinsArray; // @dynamic mixinsArray;
@property(readonly, nonatomic) unsigned long long mixinsArray_Count; // @dynamic mixinsArray_Count;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;
@property(copy, nonatomic) NSString *version; // @dynamic version;

@end

@interface GPBMethod : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(nonatomic) _Bool requestStreaming; // @dynamic requestStreaming;
@property(copy, nonatomic) NSString *requestTypeURL; // @dynamic requestTypeURL;
@property(nonatomic) _Bool responseStreaming; // @dynamic responseStreaming;
@property(copy, nonatomic) NSString *responseTypeURL; // @dynamic responseTypeURL;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBMixin : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *root; // @dynamic root;

@end

@interface GPBDurationRoot : GPBRootObject
{
}

@end

@interface GPBDuration : GPBMessage
{
}

+ (id)descriptor;
@property(nonatomic) double timeIntervalSince1970;
@property(nonatomic) double timeInterval;
- (id)initWithTimeIntervalSince1970:(double)arg1;
- (id)initWithTimeInterval:(double)arg1;

// Remaining properties
@property(nonatomic) int nanos; // @dynamic nanos;
@property(nonatomic) long long seconds; // @dynamic seconds;

@end

@interface GPBEmptyRoot : GPBRootObject
{
}

@end

@interface GPBEmpty : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GPBFieldMaskRoot : GPBRootObject
{
}

@end

@interface GPBFieldMask : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *pathsArray; // @dynamic pathsArray;
@property(readonly, nonatomic) unsigned long long pathsArray_Count; // @dynamic pathsArray_Count;

@end

@interface GPBSourceContextRoot : GPBRootObject
{
}

@end

@interface GPBSourceContext : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *fileName; // @dynamic fileName;

@end

@interface GPBStructRoot : GPBRootObject
{
}

@end

@interface GPBStruct : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableDictionary *fields; // @dynamic fields;
@property(readonly, nonatomic) unsigned long long fields_Count; // @dynamic fields_Count;

@end

@interface GPBValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool boolValue; // @dynamic boolValue;
@property(readonly, nonatomic) int kindOneOfCase; // @dynamic kindOneOfCase;
@property(retain, nonatomic) GPBListValue *listValue; // @dynamic listValue;
@property(nonatomic) int nullValue; // @dynamic nullValue;
@property(nonatomic) double numberValue; // @dynamic numberValue;
@property(copy, nonatomic) NSString *stringValue; // @dynamic stringValue;
@property(retain, nonatomic) GPBStruct *structValue; // @dynamic structValue;

@end

@interface GPBListValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *valuesArray; // @dynamic valuesArray;
@property(readonly, nonatomic) unsigned long long valuesArray_Count; // @dynamic valuesArray_Count;

@end

@interface GPBTimestampRoot : GPBRootObject
{
}

@end

@interface GPBTimestamp : GPBMessage
{
}

+ (id)descriptor;
@property(nonatomic) double timeIntervalSince1970;
@property(retain, nonatomic) NSDate *date;
- (id)initWithTimeIntervalSince1970:(double)arg1;
- (id)initWithDate:(id)arg1;

// Remaining properties
@property(nonatomic) int nanos; // @dynamic nanos;
@property(nonatomic) long long seconds; // @dynamic seconds;

@end

@interface GPBTypeRoot : GPBRootObject
{
}

@end

@interface GPBType : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *fieldsArray; // @dynamic fieldsArray;
@property(readonly, nonatomic) unsigned long long fieldsArray_Count; // @dynamic fieldsArray_Count;
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *oneofsArray; // @dynamic oneofsArray;
@property(readonly, nonatomic) unsigned long long oneofsArray_Count; // @dynamic oneofsArray_Count;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBField : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int cardinality; // @dynamic cardinality;
@property(copy, nonatomic) NSString *defaultValue; // @dynamic defaultValue;
@property(copy, nonatomic) NSString *jsonName; // @dynamic jsonName;
@property(nonatomic) int kind; // @dynamic kind;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(nonatomic) int oneofIndex; // @dynamic oneofIndex;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(nonatomic) _Bool packed; // @dynamic packed;
@property(copy, nonatomic) NSString *typeURL; // @dynamic typeURL;

@end

@interface GPBEnum : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *enumvalueArray; // @dynamic enumvalueArray;
@property(readonly, nonatomic) unsigned long long enumvalueArray_Count; // @dynamic enumvalueArray_Count;
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBEnumValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;

@end

@interface GPBOption : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBAny *value; // @dynamic value;

@end

@interface GPBWrappersRoot : GPBRootObject
{
}

@end

@interface GPBDoubleValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) double value; // @dynamic value;

@end

@interface GPBFloatValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) float value; // @dynamic value;

@end

@interface GPBInt64Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long value; // @dynamic value;

@end

@interface GPBUInt64Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) unsigned long long value; // @dynamic value;

@end

@interface GPBInt32Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int value; // @dynamic value;

@end

@interface GPBUInt32Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) unsigned int value; // @dynamic value;

@end

@interface GPBBoolValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool value; // @dynamic value;

@end

@interface GPBStringValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GPBBytesValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSData *value; // @dynamic value;

@end

@interface GIPAppGroupsHolder : NSObject
{
    NSString *_sharedAppGroupName;
}

+ (id)sharedAppGroupName;
+ (id)guessApplicationGroup;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *sharedAppGroupName; // @synthesize sharedAppGroupName=_sharedAppGroupName;
- (void).cxx_destruct;
- (id)init;

@end

@interface GIPAppGroups : NSObject
{
}

+ (void)setSharedAppGroupName:(id)arg1;
+ (id)sharedAppGroupName;

@end

@interface PHTPhenotypeSSOAccount : NSObject <PHTPhenotypeAccount>
{
    SSOIdentity *_identity;
    SSOService *_ssoService;
}

@property(readonly, nonatomic) SSOService *ssoService; // @synthesize ssoService=_ssoService;
@property(readonly, nonatomic) SSOIdentity *identity; // @synthesize identity=_identity;
- (void).cxx_destruct;
- (id)authorization:(id *)arg1;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSString *obfuscatedGaiaID;
- (id)initWithIdentity:(id)arg1 service:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSOAuthAdvice : NSObject
{
    NSDictionary *_json;
    long long _adviceCode;
    NSURL *_URI;
    NSString *_verifier;
    NSString *_clientState;
    NSString *_error;
    NSString *_errorDescription;
    NSURL *_errorURI;
    NSArray *_actions;
    NSArray *_actionObjects;
    NSDate *_nextSyncDate;
}

+ (void)initializeRequestTriggerMap;
+ (void)initializeScenarioMaps;
+ (id)requestTriggerValueToStringMap;
+ (id)scenarioStringToValueMap;
+ (id)scenarioValueToStringMap;
+ (id)stringFromRequestTrigger:(long long)arg1;
+ (long long)scenarioFromString:(id)arg1;
+ (id)stringFromScenario:(long long)arg1;
@property(readonly, nonatomic) NSDate *nextSyncDate; // @synthesize nextSyncDate=_nextSyncDate;
@property(readonly, copy, nonatomic) NSArray *actionObjects; // @synthesize actionObjects=_actionObjects;
@property(readonly, copy, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(readonly, copy, nonatomic) NSURL *errorURI; // @synthesize errorURI=_errorURI;
@property(readonly, copy, nonatomic) NSString *errorDescription; // @synthesize errorDescription=_errorDescription;
@property(readonly, copy, nonatomic) NSString *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) NSString *clientState; // @synthesize clientState=_clientState;
@property(readonly, copy, nonatomic) NSString *verifier; // @synthesize verifier=_verifier;
@property(readonly, copy, nonatomic) NSURL *URI; // @synthesize URI=_URI;
@property(readonly, nonatomic) long long adviceCode; // @synthesize adviceCode=_adviceCode;
@property(readonly, copy, nonatomic) NSDictionary *json; // @synthesize json=_json;
- (void).cxx_destruct;
- (id)initWithJSONDictionary:(id)arg1;

@end

@interface SSOAuthAdviceAction : NSObject
{
    long long _scenario;
    NSString *_displayMessage;
    NSString *_languageCode;
    NSString *_bootstrapURI;
    NSArray *_experimentIDs;
}

@property(readonly, copy, nonatomic) NSArray *experimentIDs; // @synthesize experimentIDs=_experimentIDs;
@property(readonly, copy, nonatomic) NSString *bootstrapURI; // @synthesize bootstrapURI=_bootstrapURI;
@property(readonly, copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(readonly, copy, nonatomic) NSString *displayMessage; // @synthesize displayMessage=_displayMessage;
@property(readonly, nonatomic) long long scenario; // @synthesize scenario=_scenario;
- (void).cxx_destruct;
- (id)initWithJSONDictionary:(id)arg1;

@end

@interface SSOAuthAdviceActionsData : NSObject
{
    _Bool _stale;
    NSArray *_actions;
}

+ (id)JSONDictionaryFromDictionary:(id)arg1 stale:(_Bool)arg2;
+ (id)JSONDictionaryWithActions:(id)arg1 stale:(_Bool)arg2;
@property(readonly, nonatomic, getter=isStale) _Bool stale; // @synthesize stale=_stale;
@property(readonly, copy, nonatomic) NSArray *actions; // @synthesize actions=_actions;
- (void).cxx_destruct;
- (id)initWithJSONDictionary:(id)arg1;

@end

@interface SSOAuthAdviceBootstrapData : NSObject
{
    long long _state;
    long long _scenario;
    NSString *_packageName;
    NSDate *_date;
}

+ (id)bootstrapStateValueToStringMap;
+ (id)stringFromBootstrapState:(long long)arg1;
+ (id)dataWithState:(long long)arg1 scenario:(long long)arg2;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, copy, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
@property(readonly, nonatomic) long long scenario; // @synthesize scenario=_scenario;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)JSONDictionary;
- (id)initWithState:(long long)arg1 scenario:(long long)arg2;

@end

@interface SSOAuthAdviceEvent : NSObject
{
    long long _type;
    long long _scenario;
    NSString *_packageName;
    NSDate *_date;
}

+ (id)eventTypeValueToStringMap;
+ (id)stringFromEventType:(long long)arg1;
+ (id)eventWithType:(long long)arg1 scenario:(long long)arg2;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, copy, nonatomic) NSString *packageName; // @synthesize packageName=_packageName;
@property(readonly, nonatomic) long long scenario; // @synthesize scenario=_scenario;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)JSONDictionary;
- (id)initWithType:(long long)arg1 scenario:(long long)arg2;

@end

@interface AuthorizerCallback : NSObject
{
    NSMutableURLRequest *_request;
    CDUnknownBlockType _handler;
    id _delegate;
    SEL _selector;
    NSThread *_thread;
    NSError *_error;
}

+ (id)callbackWithRequest:(id)arg1 handler:(CDUnknownBlockType)arg2 delegate:(id)arg3 selector:(SEL)arg4 thread:(id)arg5;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain) NSThread *thread; // @synthesize thread=_thread;
@property SEL selector; // @synthesize selector=_selector;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(copy) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)clear;

@end

@interface SSOAuthorizationImpl : NSObject <SSOAuthorization>
{
    _Bool _shouldAuthorizeAllRequests;
    _Bool _requestPending;
    _Bool _libraryAuth;
    _Bool _invalidated;
    id <GTMSessionFetcherServiceProtocol> _fetcherService;
    SSOIdentity *_identity;
    NSString *_delegateeUserID;
    unsigned long long _delegationType;
    NSObject<OS_dispatch_queue> *_refreshAccessTokenCallbackQueue;
    NSString *_libraryClientID;
    NSArray *_scopes;
    NSMutableArray *_authorizationQueue;
    NSString *_accessToken;
    NSDate *_tokenExpirationDate;
}

+ (id)libraryAuthorizationWithClientID:(id)arg1 identity:(id)arg2 scopes:(id)arg3;
+ (id)SSOLibraryAuthorizationWithIdentity:(id)arg1 scopes:(id)arg2;
@property(nonatomic, getter=isInvalidated) _Bool invalidated; // @synthesize invalidated=_invalidated;
@property(nonatomic, getter=isLibraryAuth) _Bool libraryAuth; // @synthesize libraryAuth=_libraryAuth;
@property(nonatomic, getter=isRequestPending) _Bool requestPending; // @synthesize requestPending=_requestPending;
@property(retain, nonatomic) NSDate *tokenExpirationDate; // @synthesize tokenExpirationDate=_tokenExpirationDate;
@property(retain, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(retain, nonatomic) NSMutableArray *authorizationQueue; // @synthesize authorizationQueue=_authorizationQueue;
@property(retain, nonatomic) NSArray *scopes; // @synthesize scopes=_scopes;
@property(copy, nonatomic) NSString *libraryClientID; // @synthesize libraryClientID=_libraryClientID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *refreshAccessTokenCallbackQueue; // @synthesize refreshAccessTokenCallbackQueue=_refreshAccessTokenCallbackQueue;
@property(readonly, nonatomic) unsigned long long delegationType; // @synthesize delegationType=_delegationType;
@property(readonly, copy, nonatomic) NSString *delegateeUserID; // @synthesize delegateeUserID=_delegateeUserID;
@property(readonly, nonatomic) SSOIdentity *identity; // @synthesize identity=_identity;
@property __weak id <GTMSessionFetcherServiceProtocol> fetcherService; // @synthesize fetcherService=_fetcherService;
@property _Bool shouldAuthorizeAllRequests;
- (void).cxx_destruct;
@property(readonly) NSString *userEmail;
- (_Bool)isAuthorizedRequest:(id)arg1;
- (_Bool)isAuthorizingRequest:(id)arg1;
- (void)stopAuthorizationForRequest:(id)arg1;
- (void)stopAuthorization;
- (void)postTokenRefreshNotificationWithError:(id)arg1;
- (void)authorizeRequest:(id)arg1 callback:(id)arg2;
- (void)authorizeRequest:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
- (void)refreshAccessTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) _Bool canAuthorize;
- (void)invalidate;
- (void)authorizeRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)primeForRefresh;
- (_Bool)hasToken;
- (void)invokeCallback:(id)arg1;
- (id)initWithLibraryClientID:(id)arg1 identity:(id)arg2 scopes:(id)arg3;
- (id)initWithUserID:(id)arg1 ownerIdentity:(id)arg2 delegationType:(unsigned long long)arg3 scopes:(id)arg4;
- (id)initWithSSOIdentity:(id)arg1 scopes:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSOClientDataStore : NSObject
{
    SSOConfiguration *_configuration;
}

- (void).cxx_destruct;
- (_Bool)updateNextSyncDate:(id)arg1 forIdentity:(id)arg2 error:(id *)arg3;
- (id)nextSyncDatesForIdentity:(id)arg1;
- (_Bool)markActionsAsStaleForIdentity:(id)arg1 error:(id *)arg2;
- (_Bool)writeActions:(id)arg1 forIdentity:(id)arg2 error:(id *)arg3;
- (id)actionsDataForIdentity:(id)arg1;
- (id)actionsDataJSONDictioanryForIdentity:(id)arg1;
- (_Bool)writeEvents:(id)arg1 forIdentity:(id)arg2 error:(id *)arg3;
- (id)allEventsForIdentity:(id)arg1;
- (_Bool)updateClientDataWithEvent:(id)arg1 identity:(id)arg2 error:(id *)arg3;
- (void)updateNextSyncDate:(id)arg1 forIdentity:(id)arg2;
- (_Bool)shouldSyncWithServerForIdentity:(id)arg1;
- (id)activeExperimentIDsForIdentity:(id)arg1;
- (id)actionsForIdentity:(id)arg1;
- (void)updateActions:(id)arg1 forIdentity:(id)arg2;
- (id)bootstrapDataForIdentity:(id)arg1;
- (void)pushEvents:(id)arg1 identity:(id)arg2;
- (id)popEventsForIdentity:(id)arg1;
- (void)logEvent:(id)arg1 forIdentity:(id)arg2;
- (id)initWithConfiguration:(id)arg1;

@end

@interface SSOClientLogin : NSObject
{
}

+ (id)defaultSourceString;
+ (id)trimmedStringFromString:(id)arg1;
+ (void)fetchUberAuthTokenWithAuth:(id)arg1 service:(id)arg2 source:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

@interface SSOIdentityPrivate : SSOIdentity
{
    NSString *_cachedUserID;
    unsigned long long _hash;
    NSString *_hashedUserID;
    _Bool _canSelect;
    NSDate *_creationDate;
    SSOConfiguration *_configuration;
    SSOLoginScopedAuthorization *_auth;
    NSString *_userFullName;
    CDUnknownBlockType _signInCallback;
    NSString *_filterAnnotation;
    GTMSessionFetcher *_tokenRevocationFetcher;
    NSMutableArray *_pendingTokenRevocationCallbacks;
}

+ (id)unexpectedResponseErrorFromError:(id)arg1;
+ (id)cookieFromDictionary:(id)arg1;
+ (id)stringFromDelegationType:(unsigned long long)arg1;
@property(retain, nonatomic) NSMutableArray *pendingTokenRevocationCallbacks; // @synthesize pendingTokenRevocationCallbacks=_pendingTokenRevocationCallbacks;
@property(retain, nonatomic) GTMSessionFetcher *tokenRevocationFetcher; // @synthesize tokenRevocationFetcher=_tokenRevocationFetcher;
@property(copy, nonatomic) NSString *filterAnnotation; // @synthesize filterAnnotation=_filterAnnotation;
@property(copy, nonatomic) CDUnknownBlockType signInCallback; // @synthesize signInCallback=_signInCallback;
@property(nonatomic) _Bool canSelect; // @synthesize canSelect=_canSelect;
@property(copy, nonatomic) NSString *userFullName; // @synthesize userFullName=_userFullName;
@property(retain) SSOLoginScopedAuthorization *auth; // @synthesize auth=_auth;
@property(readonly, nonatomic) SSOConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
- (void).cxx_destruct;
- (_Bool)hasValidAuth;
- (id)identityPropertyForKey:(id)arg1;
@property(readonly, nonatomic, getter=isRestricted) _Bool restricted;
- (id)hashedUserID;
- (id)userID;
- (id)userEmail;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithConfiguration:(id)arg1;
- (id)init;
- (void)saveServiceBits:(id)arg1;
- (id)serviceBits;
- (void)writeLibraryAccessToken;
- (id)keychainItem;
- (id)initWithConfiguration:(id)arg1 keychainItem:(id)arg2;
- (id)revokeToken:(CDUnknownBlockType)arg1;
- (id)requestAuthAdviceReauthenticating:(id)arg1 requestTrigger:(long long)arg2 service:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)requestAccessTokenForUserID:(id)arg1 delegationType:(unsigned long long)arg2 scopes:(id)arg3 callback:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5;
- (void)requestAccessTokenForScopes:(id)arg1 callback:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (id)extraParametersForLibraryClientID:(id)arg1;
- (void)requestLibraryAccessTokenForClientID:(id)arg1 scopes:(id)arg2 callback:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;
- (void)requestLibraryAccessTokenForClientID:(id)arg1 scopes:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)requestAccessTokenForUserID:(id)arg1 delegationType:(unsigned long long)arg2 scopes:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)requestAccessTokenForScopes:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)requestTokenForScopes:(id)arg1 clientID:(id)arg2 extraParameters:(id)arg3 callback:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5;
- (void)requestCookiesForTargetURLs:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)summaryForScopes:(id)arg1;
- (void)requestTokenAuthURL:(id)arg1 service:(id)arg2 source:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)authenticateWithCode:(id)arg1 verifier:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signIn:(id)arg1 finishedWithAuth:(id)arg2 error:(id)arg3;
- (id)appendJSONDataToError:(id)arg1 data:(id)arg2 fetcher:(id)arg3;
- (id)parseJSONResponse:(id)arg1 error:(id *)arg2;

@end

@interface SSOLoginScopedAuthorizationArgs : NSObject
{
    NSMutableURLRequest *_request;
    CDUnknownBlockType _handler;
    id _delegate;
    SEL _selector;
    NSThread *_thread;
    NSError *_error;
}

+ (id)argsWithRequest:(id)arg1 handler:(CDUnknownBlockType)arg2 delegate:(id)arg3 selector:(SEL)arg4 thread:(id)arg5;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain) NSThread *thread; // @synthesize thread=_thread;
@property SEL selector; // @synthesize selector=_selector;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(copy) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;

@end

@interface SSOLoginScopedAuthorization : NSObject <GTMFetcherAuthorizationProtocol>
{
    NSMutableArray *_authorizationQueue;
    NSString *_userEmail;
    NSString *_userID;
    NSString *_code;
    NSString *_refreshToken;
    NSString *_accessToken;
    NSDictionary *_IDTokenPayload;
    NSDate *_expirationDate;
    NSDictionary *_additionalTokenRequestParameters;
    id <GTMSessionFetcherServiceProtocol> _fetcherService;
    NSURL *_tokenURL;
    NSString *_clientID;
    GTMSessionFetcher *_refreshFetcher;
}

+ (void)invokeDelegate:(id)arg1 selector:(SEL)arg2 object:(id)arg3 object:(id)arg4 object:(id)arg5;
+ (id)dictionaryWithJSONData:(id)arg1;
+ (id)unencodedOAuthParameterForString:(id)arg1;
+ (id)encodedOAuthValueForString:(id)arg1;
+ (id)encodedQueryParametersForDictionary:(id)arg1;
+ (id)dictionaryWithResponseString:(id)arg1;
@property(retain) GTMSessionFetcher *refreshFetcher; // @synthesize refreshFetcher=_refreshFetcher;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSURL *tokenURL; // @synthesize tokenURL=_tokenURL;
@property __weak id <GTMSessionFetcherServiceProtocol> fetcherService; // @synthesize fetcherService=_fetcherService;
@property(copy) NSDictionary *additionalTokenRequestParameters; // @synthesize additionalTokenRequestParameters=_additionalTokenRequestParameters;
@property(retain) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(copy) NSDictionary *IDTokenPayload; // @synthesize IDTokenPayload=_IDTokenPayload;
@property(copy) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(copy) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(copy) NSString *code; // @synthesize code=_code;
@property(copy) NSString *userID; // @synthesize userID=_userID;
@property(retain) NSString *userEmail; // @synthesize userEmail=_userEmail;
- (void).cxx_destruct;
- (void)updateWithIDToken:(id)arg1;
- (void)updateExpirationDateWithExpiresIn:(id)arg1;
- (void)updateWithResponseDictionary:(id)arg1;
- (void)updateWithResponseJSONData:(id)arg1;
- (void)tokenFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (id)beginTokenFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;
- (_Bool)primeForRefresh;
- (_Bool)isAuthorizedRequest:(id)arg1;
- (_Bool)isAuthorizingRequest:(id)arg1;
- (void)stopAuthorizationForRequest:(id)arg1;
- (void)stopAuthorization;
- (void)invokeCallbackArgs:(id)arg1;
- (_Bool)authorizeRequestImmediateArgs:(id)arg1;
- (void)auth:(id)arg1 finishedRefreshWithFetcher:(id)arg2 error:(id)arg3;
- (_Bool)shouldRefreshAccessToken;
- (_Bool)authorizeRequestArgs:(id)arg1;
- (void)authorizeRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)authorizeRequest:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
@property(readonly) _Bool canAuthorize;
- (id)initWithTokenURL:(id)arg1 clientID:(id)arg2;
@property(readonly, nonatomic) SSOIdentity *identity;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property _Bool shouldAuthorizeAllRequests;
@property(readonly) Class superclass;

@end

@interface SSOOAuth2SignIn : NSObject
{
    _Bool _hasHandledCallback;
    GTMSessionFetcher *_pendingFetcher;
    SSOConfiguration *_configuration;
    id <SSOOAuth2SignInDelegate> _delegate;
    SSOLoginScopedAuthorization *_authorization;
    NSURL *_authorizationURL;
}

+ (id)mutableURLRequestWithURL:(id)arg1;
+ (id)googleTokenURL;
+ (id)authorizationForClientID:(id)arg1;
@property(copy, nonatomic) NSURL *authorizationURL; // @synthesize authorizationURL=_authorizationURL;
@property(retain, nonatomic) SSOLoginScopedAuthorization *authorization; // @synthesize authorization=_authorization;
@property(nonatomic) __weak id <SSOOAuth2SignInDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)invokeFinalCallbackWithError:(id)arg1;
- (void)displayRequest:(id)arg1;
- (void)viewDismissed;
- (void)auth:(id)arg1 finishedWithFetcher:(id)arg2 error:(id)arg3;
- (void)authCodeObtained;
- (_Bool)loadFailedWithError:(id)arg1;
- (void)cookiesDidUpdate:(id)arg1;
- (void)startWebRequest;
- (void)startSigningIn;
- (id)initWithAuthentication:(id)arg1 configuration:(id)arg2;

@end

@interface SSOConfiguration : NSObject
{
    _Bool _requiresSignIn;
    _Bool _appExtension;
    _Bool _disableProfileSource;
    _Bool _omitAppNameSingleAppSignOut;
    _Bool _disableUnfilteredIdentities;
    _Bool _enableSafariVC;
    _Bool _disableSafariAuthenticationSession;
    _Bool _enableWebKit;
    _Bool _enableMDM;
    _Bool _enableManageOptionInAccountSelector;
    _Bool _showDefaultAccountSelector;
    _Bool _usesShortAppNameForIncognitoModeButton;
    _Bool _enableIdentitiesRequiringReauth;
    _Bool _temporarilyDisableSafariSignIn;
    NSString *_applicationIdentifier;
    NSString *_clientID;
    NSString *_shortAppName;
    NSString *_applicationScheme;
    NSString *_languageCode;
    id <GTMSessionFetcherServiceProtocol> _fetcherService;
    id <SSOWebViewProvider> _webViewProvider;
    id <SSOCookieManager> _cookieManager;
    NSString *_testDeviceName;
    NSArray *_supportedAccountServices;
}

+ (_Bool)isAuthenticationSessionAvailable;
+ (_Bool)isSafariViewControllerAvailable;
+ (id)libraryUserAgentForRequest:(id)arg1;
+ (_Bool)isLibraryClientID:(id)arg1;
+ (id)libraryClientID;
+ (id)authorizationHost;
+ (id)accountsHost;
+ (id)OAuthAccountManagerHost;
+ (id)APIHost;
+ (void)setAccountNamespace:(long long)arg1;
+ (long long)accountNamespace;
+ (void)setServerEnvironment:(long long)arg1;
@property(nonatomic) _Bool temporarilyDisableSafariSignIn; // @synthesize temporarilyDisableSafariSignIn=_temporarilyDisableSafariSignIn;
@property(nonatomic) _Bool enableIdentitiesRequiringReauth; // @synthesize enableIdentitiesRequiringReauth=_enableIdentitiesRequiringReauth;
@property(nonatomic) _Bool usesShortAppNameForIncognitoModeButton; // @synthesize usesShortAppNameForIncognitoModeButton=_usesShortAppNameForIncognitoModeButton;
@property(readonly, copy, nonatomic) NSArray *supportedAccountServices; // @synthesize supportedAccountServices=_supportedAccountServices;
@property(copy, nonatomic) NSString *testDeviceName; // @synthesize testDeviceName=_testDeviceName;
@property(nonatomic) _Bool showDefaultAccountSelector; // @synthesize showDefaultAccountSelector=_showDefaultAccountSelector;
@property(nonatomic) _Bool enableManageOptionInAccountSelector; // @synthesize enableManageOptionInAccountSelector=_enableManageOptionInAccountSelector;
@property(nonatomic) _Bool enableMDM; // @synthesize enableMDM=_enableMDM;
@property(nonatomic) _Bool enableWebKit; // @synthesize enableWebKit=_enableWebKit;
@property(nonatomic) _Bool disableSafariAuthenticationSession; // @synthesize disableSafariAuthenticationSession=_disableSafariAuthenticationSession;
@property(nonatomic) _Bool enableSafariVC; // @synthesize enableSafariVC=_enableSafariVC;
@property(retain, nonatomic) id <SSOCookieManager> cookieManager; // @synthesize cookieManager=_cookieManager;
@property(retain, nonatomic) id <SSOWebViewProvider> webViewProvider; // @synthesize webViewProvider=_webViewProvider;
@property(retain, nonatomic) id <GTMSessionFetcherServiceProtocol> fetcherService; // @synthesize fetcherService=_fetcherService;
@property(copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(copy, nonatomic) NSString *applicationScheme; // @synthesize applicationScheme=_applicationScheme;
@property(nonatomic) _Bool disableUnfilteredIdentities; // @synthesize disableUnfilteredIdentities=_disableUnfilteredIdentities;
@property(nonatomic) _Bool omitAppNameSingleAppSignOut; // @synthesize omitAppNameSingleAppSignOut=_omitAppNameSingleAppSignOut;
@property(nonatomic) _Bool disableProfileSource; // @synthesize disableProfileSource=_disableProfileSource;
@property(nonatomic, getter=isAppExtension) _Bool appExtension; // @synthesize appExtension=_appExtension;
@property(nonatomic) _Bool requiresSignIn; // @synthesize requiresSignIn=_requiresSignIn;
@property(copy, nonatomic) NSString *shortAppName; // @synthesize shortAppName=_shortAppName;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void).cxx_destruct;
- (_Bool)shouldEnableSafariSignIn;
- (id)bootstrapCallbackURLString;
- (id)authCallbackURLString;
- (id)initWithClientID:(id)arg1 supportedAccountServices:(id)arg2;
- (id)initWithClientID:(id)arg1;

@end

@interface SSOCookieFetcher : NSObject <UIWebViewDelegate>
{
    SSOService *_ssoService;
    NSMutableArray *_requestQueue;
    UIWebView *_cookieFetchWebView;
    SSOCookieFetchRequest *_currentRequest;
    _Bool _continueURLStartedLoading;
    NSTimer *_timeoutTimer;
    double _fetchTimeout;
}

@property(nonatomic) double fetchTimeout; // @synthesize fetchTimeout=_fetchTimeout;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)fetchCookiesForIdentity:(id)arg1 service:(id)arg2 continueURL:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)timeoutDidFire:(id)arg1;
- (_Bool)isURL:(id)arg1 terminationURL:(id)arg2 service:(id)arg3;
- (void)currentRequestDidFinishWithError:(id)arg1;
- (void)performFetchRequest:(id)arg1;
- (void)dealloc;
- (id)initWithService:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSOCookieFetchRequest : NSObject
{
    NSString *_service;
    SSOIdentity *_identity;
    NSURL *_continueURL;
    CDUnknownBlockType _callback;
}

+ (id)requestForIdentity:(id)arg1 service:(id)arg2 continueURL:(id)arg3 callback:(CDUnknownBlockType)arg4;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) NSURL *continueURL; // @synthesize continueURL=_continueURL;
@property(retain, nonatomic) SSOIdentity *identity; // @synthesize identity=_identity;
@property(copy, nonatomic) NSString *service; // @synthesize service=_service;
- (void).cxx_destruct;

@end

@interface SSOIdentity : NSObject <SSOIdentity>
{
}

- (id)creationDate;
- (id)identityPropertyForKey:(id)arg1;
- (_Bool)canSelect;
- (id)userFullName;
- (_Bool)hasValidAuth;
- (id)hashedUserID;
- (id)userID;
- (id)userEmail;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSOKeychain : NSObject
{
}

+ (id)optionalDataForKey:(id)arg1 identity:(id)arg2;
+ (void)removeAllOptionalDataForIdentity:(id)arg1;
+ (void)cleanupOptionalDataForKey:(id)arg1;
+ (void)removeOptionalDataForKey:(id)arg1 identity:(id)arg2;
+ (_Bool)setOptionalData:(id)arg1 forKey:(id)arg2 identity:(id)arg3 error:(id *)arg4;
+ (id)optionalDataServiceNameForKey:(id)arg1;
+ (_Bool)setAuthAdviceState:(id)arg1 error:(id *)arg2;
+ (id)authAdviceState;
+ (id)creationDateForIdentity:(id)arg1;
+ (_Bool)deleteIdentity:(id)arg1 restricted:(_Bool)arg2 error:(id *)arg3;
+ (_Bool)allIdentitiesRemoved;
+ (_Bool)removeIdentity:(id)arg1 error:(id *)arg2;
+ (_Bool)writeIdentity:(id)arg1 restricted:(_Bool)arg2 error:(id *)arg3;
+ (_Bool)readKeychainItemForIdentity:(id)arg1 result:(id *)arg2 error:(id *)arg3;
+ (_Bool)writeSharedKeychain:(id)arg1 error:(id *)arg2;
+ (id)restrictedIdentitiesForConfiguration:(id)arg1 error:(id *)arg2;
+ (id)identitiesForConfiguration:(id)arg1 error:(id *)arg2;
+ (id)identitiesForConfiguration:(id)arg1 restricted:(_Bool)arg2 error:(id *)arg3;
+ (_Bool)removeGeneratedDeviceIdentifierError:(id *)arg1;
+ (id)generatedDeviceIdentifier;
+ (id)queryAllMatchingRestricted:(_Bool)arg1;
+ (id)queryAllMatching;
+ (id)queryMatchingID:(id)arg1 serviceName:(id)arg2;
+ (id)deleteQueryMatchingID:(id)arg1 serviceName:(id)arg2;
+ (id)queryForUpdatingKeychainItem:(id)arg1;
+ (id)updateQueryKeys;
+ (id)nonCreatableKeys;
+ (void)updateAccessibilityForKeychainItems:(id)arg1;
+ (id)accessGroup;
+ (id)sharedAccessGroup;
+ (id)computeAppIdentifierPrefix;
+ (id)keychainErrorWithStatus:(int)arg1;
+ (int)secItemUpdate:(id)arg1 value:(id)arg2;
+ (int)secItemDelete:(id)arg1;
+ (int)secItemAdd:(id)arg1 result:(id *)arg2;
+ (int)secItemCopyMatching:(id)arg1 result:(id *)arg2;
+ (id)keychainItemAccessibility;

@end

@interface SSOProfileSource : NSObject <SSOProfileSourceInternal, SSOProfileSource>
{
    NSObject<OS_dispatch_queue> *_fileWriteQueue;
    Class _serviceClass;
    NSSet *_ignoredKeysForProfileComparison;
    _Bool _shouldCacheCoverImages;
    double _profileRefreshInterval;
    unsigned long long _profileImageWidth;
    NSCache *_profileCache;
    NSCache *_profileImageCache;
    NSCache *_coverImageCache;
    NSMutableDictionary *_profileFetchers;
    NSMutableDictionary *_profileImageCallbacks;
    NSMutableDictionary *_profileCoverCallbacks;
    SSOService *_service;
    NSMapTable *_imageToDefaultMap;
    NSMapTable *_imageToDisabledMap;
}

+ (id)ownerUserTypesForProfile:(id)arg1;
+ (id)hostedDomainForProfile:(id)arg1;
+ (id)coverImageForProfile:(id)arg1;
+ (id)imageForProfile:(id)arg1;
+ (id)coverImageURLStringForProfile:(id)arg1;
+ (id)primaryProfileImageURLStringForProfile:(id)arg1;
+ (id)primaryEmailForProfile:(id)arg1;
+ (id)primaryFamilyNameForProfile:(id)arg1;
+ (id)primaryGivenNameForProfile:(id)arg1;
+ (id)primaryDisplayNameForProfile:(id)arg1;
+ (id)profileSSODictionaryForProfile:(id)arg1;
+ (id)primarySSODictionaryForKey:(id)arg1 profile:(id)arg2;
+ (id)defaultSizePlaceholderProfileImage;
+ (id)defaultSizeProfileImageForImage:(id)arg1;
+ (id)resizedCoverPhotoURLStringForDefaultURLString:(id)arg1;
+ (void)load;
+ (id)identityMissingError;
@property(retain, nonatomic) NSMapTable *imageToDisabledMap; // @synthesize imageToDisabledMap=_imageToDisabledMap;
@property(retain, nonatomic) NSMapTable *imageToDefaultMap; // @synthesize imageToDefaultMap=_imageToDefaultMap;
@property(nonatomic) __weak SSOService *service; // @synthesize service=_service;
@property(retain, nonatomic) NSMutableDictionary *profileCoverCallbacks; // @synthesize profileCoverCallbacks=_profileCoverCallbacks;
@property(retain, nonatomic) NSMutableDictionary *profileImageCallbacks; // @synthesize profileImageCallbacks=_profileImageCallbacks;
@property(retain, nonatomic) NSMutableDictionary *profileFetchers; // @synthesize profileFetchers=_profileFetchers;
@property(retain, nonatomic) NSCache *coverImageCache; // @synthesize coverImageCache=_coverImageCache;
@property(retain, nonatomic) NSCache *profileImageCache; // @synthesize profileImageCache=_profileImageCache;
@property(retain, nonatomic) NSCache *profileCache; // @synthesize profileCache=_profileCache;
@property(nonatomic) _Bool shouldCacheCoverImages; // @synthesize shouldCacheCoverImages=_shouldCacheCoverImages;
@property(nonatomic) unsigned long long profileImageWidth; // @synthesize profileImageWidth=_profileImageWidth;
@property(nonatomic) double profileRefreshInterval; // @synthesize profileRefreshInterval=_profileRefreshInterval;
- (void).cxx_destruct;
- (id)defaultSizeProfileImageForIdentity:(id)arg1;
- (id)disabledProfileImageForImage:(id)arg1;
- (id)peopleAPIURLParameters;
- (void)applicationWillEnterForeground:(id)arg1;
- (_Bool)isStaleProfile:(id)arg1;
- (void)refreshProfilesFromNetworkIfStale;
- (void)fetchImageForItemType:(long long)arg1 profile:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setProfileUpdateDate:(id)arg1 forIdentity:(id)arg2;
- (void)requestProfileForIdentity:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)URLForProfileSourceCacheDirectory;
- (id)imageURLStringForItemType:(long long)arg1 profile:(id)arg2;
- (Class)fileObjectClassForItemType:(long long)arg1;
- (id)callbacksInFlightForItemType:(long long)arg1;
- (id)memoryCacheForItemType:(long long)arg1;
- (id)cacheFilenameForItemType:(long long)arg1 tag:(id)arg2;
- (id)updatedProfile:(id)arg1 withCachedImagesForIdentity:(id)arg2;
- (id)cachedObjectDirectoryURLForIdentity:(id)arg1;
- (id)cachedObjectFileURLForIdentity:(id)arg1 itemType:(long long)arg2 tag:(id)arg3;
- (void)removeProfileFileCache;
- (void)checkForFieldsParameterUpdateAndClearCacheIfNeeded;
- (void)removeCacheItemAtURL:(id)arg1;
- (void)removeCachedDataForIdentity:(id)arg1;
- (id)profileImageWidthString;
- (_Bool)protectFileAtURL:(id)arg1;
- (void)cacheObject:(id)arg1 itemType:(long long)arg2 tag:(id)arg3 identity:(id)arg4;
- (id)cachedProfileForIdentity:(id)arg1;
- (id)cachedCoverImageForIdentity:(id)arg1;
- (id)cachedProfileImageForIdentity:(id)arg1;
- (id)cachedImageWithItemType:(long long)arg1 tag:(id)arg2 identity:(id)arg3 fetchIfMissing:(_Bool)arg4;
- (id)cachedObjectForIdentity:(id)arg1 itemType:(long long)arg2 tag:(id)arg3;
- (void)sendImageUpdateNotificationForItemType:(long long)arg1 identity:(id)arg2 image:(id)arg3;
- (void)sendProfileUpdateNotificationForIdentity:(id)arg1 profile:(id)arg2;
- (id)checkAndUpdateCachedProfileForIdentity:(id)arg1 withImage:(id)arg2 forItemType:(long long)arg3 andOriginalProfile:(id)arg4;
- (_Bool)isProfile:(id)arg1 sameAs:(id)arg2;
- (void)fetchProfileForIdentity:(id)arg1 useCachedProfile:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)invokeImageCallbacksForItemType:(long long)arg1 identity:(id)arg2 image:(id)arg3 error:(id)arg4;
- (void)fetchImageForItemType:(long long)arg1 tag:(id)arg2 identity:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SSOResources : NSObject
{
    NSString *_bundleName;
    NSBundle *_bundle;
    NSString *_fullBundleName;
}

+ (id)tintImage:(id)arg1 withColor:(id)arg2;
+ (id)iconInSquareFromIcon:(id)arg1;
+ (id)bundleSearchOrder;
+ (id)resources;
@property(retain, nonatomic) NSString *fullBundleName; // @synthesize fullBundleName=_fullBundleName;
@property(retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(copy, nonatomic) NSString *bundleName; // @synthesize bundleName=_bundleName;
- (void).cxx_destruct;
- (id)dropDownImage;
- (id)lighterDropDownImage;
- (id)defaultAvatar;
- (id)lighterImageWithResourceName:(id)arg1;
- (id)imageWithResourceName:(id)arg1;
- (id)stringForID:(int)arg1;
- (id)init;

@end

@interface SSOServiceExternalAuthState : NSObject
{
    CDUnknownBlockType _signInCallback;
    NSString *_verifier;
    NSString *_expectedEmail;
    NSString *_userID;
}

@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, copy, nonatomic) NSString *expectedEmail; // @synthesize expectedEmail=_expectedEmail;
@property(readonly, copy, nonatomic) NSString *verifier; // @synthesize verifier=_verifier;
- (void).cxx_destruct;
- (void)invokeCallbackWithStore:(id)arg1 identity:(id)arg2 error:(id)arg3;
- (id)initWithVerifier:(id)arg1 expectedEmail:(id)arg2 callback:(CDUnknownBlockType)arg3;

@end

@interface SSOService : NSObject <CCTClearcutAuthorizer, PHTPhenotypeAccountService, SSOServiceInternal, SSOService, SSOServiceDeprecated>
{
    NSMutableDictionary *_identities;
    NSMutableDictionary *_allIdentities;
    NSMutableDictionary *_identitiesRequiringReauth;
    SSOProfileSource *_profileSource;
    NSDateFormatter *_dateFormatter;
    _Bool _isSigningInWithController;
    GTMSessionFetcher *_authAdviceFetcher;
    CDUnknownBlockType _signInCallback;
    NSMutableDictionary *_authorizerCache;
    _Bool _isAppInForeground;
    _Bool _areIdentitiesStale;
    SSOClientDataStore *_clientDataStore;
    id <SSOServiceSafariBootstrapDelegate> _safariBootstrapDelegate;
    CDUnknownBlockType _safariSignInOpenURLHandler;
    SSOConfiguration *_configuration;
    SSOServiceExternalAuthState *_externalAuthState;
    NSURL *_testSignInURL;
    NSError *_testSignInError;
}

+ (id)serviceBitsFromIdentity:(id)arg1;
+ (id)filterRestrictedIdentities:(id)arg1;
+ (void)setFetcherToCallBackOnMainQueue:(id)arg1;
+ (id)errorForCancelWithDismissal:(_Bool)arg1;
+ (_Bool)isSSOFetcher:(id)arg1;
+ (id)fetcherWithRequest:(id)arg1 configuration:(id)arg2;
+ (id)sortedScopesStringFromScopes:(id)arg1;
+ (id)libraryAuthorizationWithClientID:(id)arg1 identity:(id)arg2 scopes:(id)arg3;
+ (void)setTestProfileSource:(id)arg1;
+ (id)deviceIdentifier;
@property(retain, nonatomic) NSError *testSignInError; // @synthesize testSignInError=_testSignInError;
@property(copy, nonatomic) NSURL *testSignInURL; // @synthesize testSignInURL=_testSignInURL;
@property(retain, nonatomic) SSOServiceExternalAuthState *externalAuthState; // @synthesize externalAuthState=_externalAuthState;
@property(nonatomic) _Bool areIdentitiesStale; // @synthesize areIdentitiesStale=_areIdentitiesStale;
@property(retain, nonatomic) SSOConfiguration *configuration; // @synthesize configuration=_configuration;
@property(copy, nonatomic) CDUnknownBlockType safariSignInOpenURLHandler; // @synthesize safariSignInOpenURLHandler=_safariSignInOpenURLHandler;
@property(nonatomic) __weak id <SSOServiceSafariBootstrapDelegate> safariBootstrapDelegate; // @synthesize safariBootstrapDelegate=_safariBootstrapDelegate;
@property(readonly, nonatomic) SSOClientDataStore *clientDataStore; // @synthesize clientDataStore=_clientDataStore;
- (void).cxx_destruct;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)resetNumberOfReauthPromptsShownForIdentity:(id)arg1;
- (void)incrementNumberOfReauthPromptsShownForIdentity:(id)arg1;
- (unsigned long long)numberOfReauthPromptsShownForIdentity:(id)arg1;
- (void)markIdentityAsUnselected:(id)arg1;
- (void)markIdentityAsSelected:(id)arg1;
- (id)lastUsedDateForIdentity:(id)arg1;
- (_Bool)updateKeychainForIdentity:(id)arg1 error:(id *)arg2;
- (_Bool)writeNewlySignedInIdentity:(id)arg1 outputIdentity:(id *)arg2 error:(id *)arg3;
- (id)errorFromAuthAdvice:(id)arg1;
- (id)identitiesSortedForDefaultAccountSelection;
- (_Bool)supportsAllServiceBits:(id)arg1;
- (id)filterIdentities:(id)arg1;
- (void)maybeReloadIdentitiesWithError:(id *)arg1;
- (id)identitiesWithError:(id *)arg1;
- (id)identitiesRequiringReauth;
- (id)allIdentities;
- (id)identities;
- (void)identityListDidChange:(id)arg1;
- (_Bool)handleInvalidGrantForAuth:(id)arg1;
- (void)accessTokenRefreshFailed:(id)arg1;
- (_Bool)handleAppTokenRefreshWithAuth:(id)arg1;
- (_Bool)handleLoginTokenRefreshWithAuth:(id)arg1;
- (void)accessTokenRefreshed:(id)arg1;
- (void)postIdentitySelectionDidChangeNotificationWithUserInfo:(id)arg1;
- (void)postIdentityListChangedNotificationWithUserInfo:(id)arg1;
- (void)reauthPromptShownForIdentity:(id)arg1;
- (_Bool)shouldShowReauthPromptForIdentity:(id)arg1;
- (void)reauthenticateUser:(id)arg1 userID:(id)arg2 UIDelegate:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)requestAccessTokenWithIdentity:(id)arg1 scopes:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)signOutURLWithTargetURL:(id)arg1 source:(id)arg2;
- (void)requestTokenAuthURLForIdentity:(id)arg1 targetURL:(id)arg2 service:(id)arg3 source:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (id)authorizationForIdentity:(id)arg1 scopes:(id)arg2 error:(id *)arg3;
- (id)authorizationForUserID:(id)arg1 ownerIdentity:(id)arg2 delegationType:(unsigned long long)arg3 scopes:(id)arg4;
- (id)authorizationForIdentity:(id)arg1 scopes:(id)arg2;
- (id)forgetIdentity:(id)arg1 revokeToken:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (id)forgetIdentity:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)removeCachedAuthorizersForUserID:(id)arg1 shouldInvalidate:(_Bool)arg2;
- (void)clearFileCache;
- (_Bool)isValidUserID:(id)arg1;
- (_Bool)isValidIdentity:(id)arg1;
- (void)continueAuthenticationForURL:(id)arg1 externalAuthState:(id)arg2;
- (void)finishExternalSignInWithCallbackURL:(id)arg1 error:(id)arg2;
- (void)prepareExternalSignInWithVerifier:(id)arg1 expectedEmail:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)handleOpenURL:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)finishEmbeddedSignInWithAuth:(id)arg1 expectedEmail:(id)arg2 error:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)cancelSignIn;
- (void)signInWithUserEmail:(id)arg1 UIDelegate:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)identitiesSortedForDisplay;
@property(retain, nonatomic) SSOIdentity *userSelectedDefaultIdentity; // @dynamic userSelectedDefaultIdentity;
- (id)defaultIdentity;
- (id)identitiesSortedByCreationDate;
- (id)identitiesSortedBySelectionDate;
- (id)identityForHashedUserID:(id)arg1;
- (id)profileSource;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (id)authorizationForObfuscatedGaiaID:(id)arg1;
@property(readonly, nonatomic) NSArray *PHTAccounts;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MDMPasscodeCache : NSObject
{
    _Bool _hasLocalAuthentication;
    NSDictionary *_localAuthenticationInfo;
    _Bool _hasEnteredBackground;
    _Bool _hasKeychain;
    NSDictionary *_keychainInfo;
    NSDate *_keychainExpireTime;
    MDMPasscodeState *_cachedState;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)info;
- (id)status;
- (void)obtainKeychainInfo;
- (void)obtainLocalAuthenticationInfo;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)hasKeychain;
- (_Bool)hasLocalAuthentication;
- (id)passcodeState;
- (void)dealloc;
- (id)init;

@end

@interface MDMPasscodeState : NSObject
{
    NSString *_status;
    NSString *_info;
}

+ (id)passcodeState;
@property(readonly, nonatomic) NSString *info; // @synthesize info=_info;
@property(readonly, nonatomic) NSString *status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)initWithStatus:(id)arg1 info:(id)arg2;

@end

@interface SSOError : NSObject
{
}

+ (_Bool)isCanceledError:(id)arg1;
+ (long long)errorCategoryForError:(id)arg1;

@end

@interface SSOUtilities : NSObject
{
}

+ (id)unarchiveObjectWithData:(id)arg1;
+ (id)encodedWebSafeBase64WithData:(id)arg1;
+ (id)decodeWebSafeBase64:(id)arg1;
+ (id)dictionaryFromIDToken:(id)arg1;
+ (id)hashedDataFromString:(id)arg1;
+ (id)hashedString:(id)arg1;
+ (id)arrayWithScopes:(id)arg1;
+ (_Bool)isEmail:(id)arg1 equalToEmail:(id)arg2;

@end

@interface GTMSessionFetcher : NSObject <NSURLSessionDelegate>
{
    NSMutableURLRequest *_request;
    _Bool _useUploadTask;
    NSURL *_bodyFileURL;
    CDUnknownBlockType _bodyStreamProvider;
    NSURLSession *_session;
    _Bool _shouldInvalidateSession;
    NSURLSession *_sessionNeedingInvalidation;
    NSURLSessionConfiguration *_configuration;
    NSURLSessionTask *_sessionTask;
    NSString *_taskDescription;
    float _taskPriority;
    NSURLResponse *_response;
    NSString *_sessionIdentifier;
    _Bool _wasCreatedFromBackgroundSession;
    _Bool _didCreateSessionIdentifier;
    NSString *_sessionIdentifierUUID;
    _Bool _userRequestedBackgroundSession;
    _Bool _usingBackgroundSession;
    NSMutableData *_downloadedData;
    NSError *_downloadFinishedError;
    NSData *_downloadResumeData;
    NSData *_downloadTaskErrorData;
    NSURL *_destinationFileURL;
    long long _downloadedLength;
    NSURLCredential *_credential;
    NSURLCredential *_proxyCredential;
    _Bool _isStopNotificationNeeded;
    _Bool _isUsingTestBlock;
    id _userData;
    NSMutableDictionary *_properties;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_dispatch_group> *_callbackGroup;
    NSOperationQueue *_delegateQueue;
    id <GTMFetcherAuthorizationProtocol> _authorizer;
    id <GTMSessionFetcherServiceProtocol> _service;
    NSString *_serviceHost;
    long long _servicePriority;
    _Bool _hasStoppedFetching;
    _Bool _userStoppedFetching;
    _Bool _isRetryEnabled;
    NSTimer *_retryTimer;
    unsigned long long _retryCount;
    double _maxRetryInterval;
    double _minRetryInterval;
    double _retryFactor;
    double _lastRetryInterval;
    NSDate *_initialBeginFetchDate;
    NSDate *_initialRequestDate;
    _Bool _hasAttemptedAuthRefresh;
    NSString *_comment;
    NSString *_log;
    _Bool _canShareSession;
    _Bool _allowLocalhostRequest;
    _Bool _allowInvalidServerCertificates;
    _Bool _skipBackgroundTask;
    CDUnknownBlockType _configurationBlock;
    NSDictionary *_sessionUserInfo;
    CDUnknownBlockType _completionHandler;
    NSData *_bodyData;
    long long _bodyLength;
    CDUnknownBlockType _accumulateDataBlock;
    CDUnknownBlockType _receivedProgressBlock;
    CDUnknownBlockType _downloadProgressBlock;
    CDUnknownBlockType _resumeDataBlock;
    CDUnknownBlockType _didReceiveResponseBlock;
    CDUnknownBlockType _challengeBlock;
    CDUnknownBlockType _willRedirectBlock;
    CDUnknownBlockType _sendProgressBlock;
    CDUnknownBlockType _willCacheURLResponseBlock;
    CDUnknownBlockType _retryBlock;
    NSArray *_allowedInsecureSchemes;
    NSHTTPCookieStorage *_cookieStorage;
    CDUnknownBlockType _testBlock;
    unsigned long long _testBlockAccumulateDataChunkCount;
    unsigned long long _backgroundTaskIdentifier;
}

+ (_Bool)isLoggingEnabled;
+ (void)setLoggingEnabled:(_Bool)arg1;
+ (CDUnknownBlockType)systemCompletionHandlerForSessionIdentifier:(id)arg1;
+ (void)setSystemCompletionHandler:(CDUnknownBlockType)arg1 forSessionIdentifier:(id)arg2;
+ (void)evaluateServerTrust:(struct __SecTrust *)arg1 forRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)fetcherUIApplication;
+ (id)substituteUIApplication;
+ (void)setSubstituteUIApplication:(id)arg1;
+ (void)setGlobalTestBlock:(CDUnknownBlockType)arg1;
+ (id)staticCookieStorage;
+ (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)fetchersForBackgroundSessions;
+ (id)activePersistedBackgroundSessions;
+ (id)fetcherUserDefaults;
+ (_Bool)appAllowsInsecureRequests;
+ (id)sessionIdentifierToFetcherMap;
+ (id)fetcherWithSessionIdentifier:(id)arg1;
+ (id)fetcherWithDownloadResumeData:(id)arg1;
+ (id)fetcherWithURLString:(id)arg1;
+ (id)fetcherWithURL:(id)arg1;
+ (id)fetcherWithRequest:(id)arg1;
+ (void)load;
@property _Bool skipBackgroundTask; // @synthesize skipBackgroundTask=_skipBackgroundTask;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(copy) NSString *log; // @synthesize log=_log;
@property(copy) NSString *comment; // @synthesize comment=_comment;
@property unsigned long long testBlockAccumulateDataChunkCount; // @synthesize testBlockAccumulateDataChunkCount=_testBlockAccumulateDataChunkCount;
@property(copy) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(readonly) NSDate *initialBeginFetchDate; // @synthesize initialBeginFetchDate=_initialBeginFetchDate;
@property(retain) NSHTTPCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property _Bool allowInvalidServerCertificates; // @synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates;
@property _Bool allowLocalhostRequest; // @synthesize allowLocalhostRequest=_allowLocalhostRequest;
@property(copy) NSArray *allowedInsecureSchemes; // @synthesize allowedInsecureSchemes=_allowedInsecureSchemes;
@property double retryFactor; // @synthesize retryFactor=_retryFactor;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(copy) CDUnknownBlockType willCacheURLResponseBlock; // @synthesize willCacheURLResponseBlock=_willCacheURLResponseBlock;
@property(copy) CDUnknownBlockType sendProgressBlock; // @synthesize sendProgressBlock=_sendProgressBlock;
@property(copy) CDUnknownBlockType willRedirectBlock; // @synthesize willRedirectBlock=_willRedirectBlock;
@property(copy) CDUnknownBlockType challengeBlock; // @synthesize challengeBlock=_challengeBlock;
@property(copy) CDUnknownBlockType didReceiveResponseBlock; // @synthesize didReceiveResponseBlock=_didReceiveResponseBlock;
@property(copy) CDUnknownBlockType resumeDataBlock; // @synthesize resumeDataBlock=_resumeDataBlock;
@property(copy) CDUnknownBlockType downloadProgressBlock; // @synthesize downloadProgressBlock=_downloadProgressBlock;
@property(copy) CDUnknownBlockType receivedProgressBlock; // @synthesize receivedProgressBlock=_receivedProgressBlock;
@property(copy) CDUnknownBlockType accumulateDataBlock; // @synthesize accumulateDataBlock=_accumulateDataBlock;
@property(copy) NSString *serviceHost; // @synthesize serviceHost=_serviceHost;
@property(retain) id <GTMSessionFetcherServiceProtocol> service; // @synthesize service=_service;
@property(retain) NSData *bodyData; // @synthesize bodyData=_bodyData;
@property(retain) NSURLCredential *proxyCredential; // @synthesize proxyCredential=_proxyCredential;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property float taskPriority; // @synthesize taskPriority=_taskPriority;
@property(copy) NSString *taskDescription; // @synthesize taskDescription=_taskDescription;
@property(readonly) _Bool wasCreatedFromBackgroundSession; // @synthesize wasCreatedFromBackgroundSession=_wasCreatedFromBackgroundSession;
@property(copy) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain) NSData *downloadResumeData; // @synthesize downloadResumeData=_downloadResumeData;
- (void).cxx_destruct;
- (void)setCommentWithFormat:(id)arg1;
- (void)addPropertiesFromDictionary:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
@property(copy) NSDictionary *properties;
@property(retain) NSURL *destinationFileURL;
@property(retain) id userData;
- (_Bool)userStoppedFetching;
@property(retain) NSOperationQueue *sessionDelegateQueue;
- (void)setSessionNeedingInvalidation:(id)arg1;
- (id)sessionNeedingInvalidation;
@property(getter=isUsingBackgroundSession) _Bool usingBackgroundSession; // @synthesize usingBackgroundSession=_usingBackgroundSession;
@property _Bool useBackgroundSession;
- (void)setCanShareSession:(_Bool)arg1;
@property(readonly) _Bool canShareSession; // @synthesize canShareSession=_canShareSession;
@property(retain) NSURLSession *session;
@property long long servicePriority;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
- (void)setDownloadedLength:(long long)arg1;
@property(readonly) long long downloadedLength;
@property(retain) NSData *downloadedData;
@property(retain) id <GTMFetcherAuthorizationProtocol> authorizer;
@property(copy) CDUnknownBlockType bodyStreamProvider;
@property(retain) NSURL *bodyFileURL;
@property _Bool useUploadTask;
@property(readonly) long long bodyLength; // @synthesize bodyLength=_bodyLength;
- (void)setResponse:(id)arg1;
- (void)updateRequestValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)setRequestValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)updateMutableRequest:(id)arg1;
- (void)setMutableRequest:(id)arg1;
@property(readonly) NSMutableURLRequest *mutableRequest;
- (id)mutableRequestForTesting;
@property(retain) NSURLRequest *request;
- (void)setSystemCompletionHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)systemCompletionHandler;
@property double minRetryInterval;
@property double maxRetryInterval;
@property(getter=isRetryEnabled) _Bool retryEnabled;
- (_Bool)isRetryEnabledUnsynchronized;
- (id)retryTimer;
- (double)nextRetryIntervalUnsynchronized;
@property(readonly) double nextRetryInterval;
@property(readonly) unsigned long long retryCount;
- (void)destroyRetryTimer;
- (void)retryTimerFired:(id)arg1;
- (void)beginRetryTimer;
- (double)retryAfterInterval;
- (_Bool)hasRetryAfterInterval;
- (void)shouldRetryNowForStatus:(long long)arg1 error:(id)arg2 forceAssumeRetry:(_Bool)arg3 response:(CDUnknownBlockType)arg4;
- (_Bool)isRetryError:(id)arg1;
- (void)logNowWithError:(id)arg1;
- (_Bool)shouldReleaseCallbacksUponCompletion;
- (void)finishWithError:(id)arg1 shouldRetry:(_Bool)arg2;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)postNotificationOnMainThreadWithName:(id)arg1 userInfo:(id)arg2 requireAsync:(_Bool)arg3;
- (void)invokeFetchCallbacksOnCallbackQueueWithData:(id)arg1 error:(id)arg2;
- (void)invokeOnCallbackQueue:(id)arg1 afterUserStopped:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)invokeOnCallbackUnsynchronizedQueueAfterUserStopped:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)invokeOnCallbackQueueAfterUserStopped:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)invokeOnCallbackQueueUnlessStopped:(CDUnknownBlockType)arg1;
- (void)respondToChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (_Bool)waitForCompletionWithTimeout:(double)arg1;
- (void)retryFetch;
- (void)sendStopNotificationIfNeeded;
- (void)setStopNotificationNeeded:(_Bool)arg1;
- (void)stopFetchReleasingCallbacks:(_Bool)arg1;
- (void)stopFetching;
- (void)forgetSessionIdentifierForFetcherWithoutSyncCheck;
- (void)forgetSessionIdentifierForFetcher;
- (void)releaseCallbacks;
- (id)responseHeadersUnsynchronized;
@property(readonly) NSDictionary *responseHeaders;
- (long long)statusCodeUnsynchronized;
@property(readonly) long long statusCode;
- (id)responseUnsynchronized;
@property(readonly) NSURLResponse *response;
- (_Bool)isFetchingUnsynchronized;
@property(readonly, getter=isFetching) _Bool fetching;
- (_Bool)canFetchWithBackgroundSession;
- (void)authorizer:(id)arg1 request:(id)arg2 finishedWithError:(id)arg3;
- (void)authorizeRequest;
- (void)endBackgroundTask;
- (void)failToBeginFetchWithError:(id)arg1;
- (id)createSessionIdentifierWithMetadata:(id)arg1;
- (id)sessionIdentifierMetadataUnsynchronized;
- (id)sessionIdentifierMetadata;
- (void)restoreDefaultStateForSessionIdentifierMetadata;
- (id)sessionIdentifierDefaultMetadata;
@property(retain) NSDictionary *sessionUserInfo; // @synthesize sessionUserInfo=_sessionUserInfo;
- (void)setSessionIdentifierInternal:(id)arg1;
- (void)setSessionIdentifier:(id)arg1;
@property(readonly) NSString *sessionIdentifier;
- (void)removePersistedBackgroundSessionFromDefaults;
- (void)addPersistedBackgroundSessionToDefaults;
@property(readonly) NSURLSessionTask *sessionTask; // @synthesize sessionTask=_sessionTask;
- (void)setSessionTask:(id)arg1;
- (void)simulateByteTransferWithData:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)simulateDataCallbacksForTestBlockWithBodyData:(id)arg1 response:(id)arg2 responseData:(id)arg3 error:(id)arg4;
- (void)simulateByteTransferReportWithDataLength:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)simulateFetchForTestBlock;
- (void)beginFetchMayDelay:(_Bool)arg1 mayAuthorize:(_Bool)arg2;
- (void)beginFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;
- (CDUnknownBlockType)completionHandlerWithTarget:(id)arg1 didFinishSelector:(SEL)arg2;
- (void)beginFetchForRetry;
- (void)beginFetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRequest:(id)arg1 configuration:(id)arg2;
- (id)initWithRequest:(id)arg1;
- (id)init;
- (void)setCookieStorageMethod:(long long)arg1;
@property(readonly) GTMSessionUploadFetcher *parentUploadFetcher;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionCookieStorage : NSHTTPCookieStorage
{
    NSMutableArray *_cookies;
    unsigned long long _policy;
}

+ (_Bool)hasCookieExpired:(id)arg1;
- (void).cxx_destruct;
- (void)setCookieAcceptPolicy:(unsigned long long)arg1;
- (unsigned long long)cookieAcceptPolicy;
- (void)removeAllCookies;
- (void)removeExpiredCookies;
- (id)cookieMatchingCookie:(id)arg1;
- (void)getCookiesForTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)storeCookies:(id)arg1 forTask:(id)arg2;
- (id)cookiesForURL:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3;
- (void)setCookies:(id)arg1;
- (void)internalSetCookie:(id)arg1;
- (void)setCookie:(id)arg1;
- (id)cookies;
- (id)init;

@end

@interface GTMSessionFetcherService : NSObject <GTMSessionFetcherServiceProtocol>
{
    NSMutableDictionary *_delayedFetchersByHost;
    NSMutableDictionary *_runningFetchersByHost;
    unsigned long long _maxRunningFetchersPerHost;
    GTMSessionFetcherSessionDelegateDispatcher *_delegateDispatcher;
    NSObject<OS_dispatch_semaphore> *_sessionCreationSemaphore;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSOperationQueue *_delegateQueue;
    NSHTTPCookieStorage *_cookieStorage;
    NSString *_userAgent;
    double _timeout;
    NSURLCredential *_credential;
    NSURLCredential *_proxyCredential;
    long long _cookieStorageMethod;
    id <GTMFetcherAuthorizationProtocol> _authorizer;
    NSMutableArray *_stoppedFetchersToWaitFor;
    NSDate *_stoppedAllFetchersDate;
    _Bool _allowLocalhostRequest;
    _Bool _allowInvalidServerCertificates;
    _Bool _retryEnabled;
    _Bool _skipBackgroundTask;
    NSURLSessionConfiguration *_configuration;
    CDUnknownBlockType _configurationBlock;
    CDUnknownBlockType _challengeBlock;
    NSArray *_allowedInsecureSchemes;
    CDUnknownBlockType _retryBlock;
    double _maxRetryInterval;
    double _minRetryInterval;
    NSDictionary *_properties;
    double _unusedSessionTimeout;
    CDUnknownBlockType _testBlock;
}

+ (unsigned long long)numberOfNonBackgroundSessionFetchers:(id)arg1;
+ (id)mockFetcherServiceWithFakedData:(id)arg1 fakedResponse:(id)arg2 fakedError:(id)arg3;
+ (id)mockFetcherServiceWithFakedData:(id)arg1 fakedError:(id)arg2;
@property _Bool skipBackgroundTask; // @synthesize skipBackgroundTask=_skipBackgroundTask;
@property(copy) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(copy) NSDictionary *properties; // @synthesize properties=_properties;
@property double minRetryInterval; // @synthesize minRetryInterval=_minRetryInterval;
@property double maxRetryInterval; // @synthesize maxRetryInterval=_maxRetryInterval;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(getter=isRetryEnabled) _Bool retryEnabled; // @synthesize retryEnabled=_retryEnabled;
@property _Bool allowInvalidServerCertificates; // @synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates;
@property _Bool allowLocalhostRequest; // @synthesize allowLocalhostRequest=_allowLocalhostRequest;
@property(copy) NSArray *allowedInsecureSchemes; // @synthesize allowedInsecureSchemes=_allowedInsecureSchemes;
@property(retain) NSURLCredential *proxyCredential; // @synthesize proxyCredential=_proxyCredential;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(copy) CDUnknownBlockType challengeBlock; // @synthesize challengeBlock=_challengeBlock;
@property(copy) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(retain) NSHTTPCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property(copy) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property unsigned long long maxRunningFetchersPerHost; // @synthesize maxRunningFetchersPerHost=_maxRunningFetchersPerHost;
- (void).cxx_destruct;
@property(readonly) NSOperationQueue *delegateQueue;
@property(retain) NSOperationQueue *sessionDelegateQueue;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue;
- (void)detachAuthorizer;
@property(retain) id <GTMFetcherAuthorizationProtocol> authorizer;
@property(retain) NSDictionary *delayedFetchersByHost;
@property(retain) NSDictionary *runningFetchersByHost;
- (void)abandonDispatcher;
@property double unusedSessionTimeout; // @synthesize unusedSessionTimeout=_unusedSessionTimeout;
- (void)resetSessionForDispatcherDiscardTimer:(id)arg1;
- (void)resetSessionInternal;
- (void)resetSession;
@property _Bool reuseSession;
- (id)stoppedAllFetchersDate;
- (void)stopAllFetchers;
- (id)issuedFetchersWithRequestURL:(id)arg1;
- (id)issuedFetchers;
- (unsigned long long)numberOfDelayedFetchers;
- (unsigned long long)numberOfRunningFetchers;
- (unsigned long long)numberOfFetchers;
- (void)fetcherDidStop:(id)arg1;
- (void)stopFetcher:(id)arg1;
- (void)fetcherDidBeginFetching:(id)arg1;
- (void)fetcherDidCreateSession:(id)arg1;
- (id)delegateDispatcherForFetcher:(id)arg1;
- (void)startFetcher:(id)arg1;
- (_Bool)fetcherShouldBeginFetching:(id)arg1;
- (_Bool)isDelayingFetcher:(id)arg1;
- (void)addDelayedFetcher:(id)arg1 forHost:(id)arg2;
- (void)addRunningFetcher:(id)arg1 forHost:(id)arg2;
- (id)sessionDelegate;
- (id)sessionForFetcherCreation;
- (id)session;
- (id)fetcherWithURLString:(id)arg1;
- (id)fetcherWithURL:(id)arg1;
- (id)fetcherWithRequest:(id)arg1;
- (id)fetcherWithRequest:(id)arg1 fetcherClass:(Class)arg2;
- (void)dealloc;
- (id)init;
- (_Bool)waitForCompletionOfAllFetchersWithTimeout:(double)arg1;
@property long long cookieStorageMethod;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionFetcherSessionDelegateDispatcher : NSObject <NSURLSessionDelegate>
{
    GTMSessionFetcherService *_parentService;
    NSURLSession *_session;
    NSMutableDictionary *_taskToFetcherMap;
    NSTimer *_discardTimer;
    double _discardInterval;
}

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
@property double discardInterval; // @synthesize discardInterval=_discardInterval;
@property(retain) NSURLSession *session; // @synthesize session=_session;
- (void)removeTaskFromMap:(id)arg1;
- (id)fetcherForTask:(id)arg1;
- (void)removeFetcher:(id)arg1;
- (void)setFetcher:(id)arg1 forTask:(id)arg2;
- (void)destroySessionAndTimer;
- (void)startSessionUsage;
- (void)abandon;
- (void)discardTimerFired:(id)arg1;
- (void)destroyDiscardTimer;
- (void)startDiscardTimer;
@property(readonly) NSTimer *discardTimer;
@property(readonly, copy) NSString *description;
- (id)initWithParentService:(id)arg1 sessionDiscardInterval:(double)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionUploadFetcher : GTMSessionFetcher
{
    GTMSessionFetcher *_chunkFetcher;
    CDUnknownBlockType _delegateCompletionHandler;
    NSObject<OS_dispatch_queue> *_delegateCallbackQueue;
    long long _initialBodyLength;
    long long _initialBodySent;
    NSURL *_uploadLocationURL;
    NSData *_uploadData;
    NSFileHandle *_uploadFileHandle;
    CDUnknownBlockType _uploadDataProvider;
    NSURL *_uploadFileURL;
    long long _uploadFileLength;
    NSString *_uploadMIMEType;
    long long _chunkSize;
    long long _uploadGranularity;
    _Bool _isPaused;
    _Bool _isRestartedUpload;
    _Bool _shouldInitiateOffsetQuery;
    _Bool _useBackgroundSessionOnChunkFetchers;
    long long _currentOffset;
    NSDictionary *_recentChunkReponseHeaders;
    long long _recentChunkStatusCode;
    GTMSessionFetcher *_fetcherInFlight;
    _Bool _isSubdataGenerating;
    _Bool _isCancelInFlight;
    CDUnknownBlockType _cancellationHandler;
    _Bool _subdataGenerating;
    NSURLRequest *_lastChunkRequest;
}

+ (void)removePointer:(void *)arg1 fromPointerArray:(id)arg2;
+ (unsigned long long)uploadStatusFromResponseHeaders:(id)arg1;
+ (id)uploadFetchersForBackgroundSessions;
+ (id)uploadFetcherForSessionIdentifier:(id)arg1;
+ (id)uploadFetcherPointerArrayForBackgroundSessions;
+ (id)uploadFetcherWithRequest:(id)arg1 fetcherService:(id)arg2;
+ (id)uploadFetcherForSessionIdentifierMetadata:(id)arg1;
+ (id)uploadFetcherWithLocation:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3 fetcherService:(id)arg4;
+ (id)uploadFetcherWithRequest:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3 fetcherService:(id)arg4;
+ (void)load;
@property long long uploadGranularity; // @synthesize uploadGranularity=_uploadGranularity;
@property _Bool shouldInitiateOffsetQuery; // @synthesize shouldInitiateOffsetQuery=_shouldInitiateOffsetQuery;
@property(getter=isSubdataGenerating) _Bool subdataGenerating; // @synthesize subdataGenerating=_subdataGenerating;
@property(retain) NSURLRequest *lastChunkRequest; // @synthesize lastChunkRequest=_lastChunkRequest;
@property(readonly) CDUnknownBlockType delegateCompletionHandler; // @synthesize delegateCompletionHandler=_delegateCompletionHandler;
@property long long currentOffset; // @synthesize currentOffset=_currentOffset;
- (void).cxx_destruct;
- (_Bool)waitForCompletionWithTimeout:(double)arg1;
- (_Bool)isFetching;
@property(readonly) GTMSessionFetcher *activeFetcher; // @dynamic activeFetcher;
@property(retain) NSURL *uploadLocationURL;
- (void)setInitialBodySent:(long long)arg1;
- (long long)initialBodySent;
- (void)setInitialBodyLength:(long long)arg1;
- (long long)initialBodyLength;
@property long long statusCode; // @dynamic statusCode;
- (long long)statusCodeUnsynchronized;
- (id)responseHeaders;
- (_Bool)canFetchWithBackgroundSession;
- (void)setUseBackgroundSession:(_Bool)arg1;
- (_Bool)useBackgroundSession;
- (long long)updateChunkFetcher:(id)arg1 forChunkAtOffset:(long long)arg2;
- (_Bool)triggerCancellationHandlerForFetch:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)stopFetching;
- (void)resumeFetching;
- (void)pauseFetching;
- (_Bool)isPaused;
- (void)retrieveUploadChunkGranularityFromResponseHeaders:(id)arg1;
- (void)invokeDelegateWithDidSendBytes:(long long)arg1 totalBytesSent:(long long)arg2 totalBytesExpectedToSend:(long long)arg3;
- (void)destroyChunkFetcher;
- (void)chunkFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (id)uploadFetcherWithProperties:(id)arg1 isQueryFetch:(_Bool)arg2;
- (id)uploadSessionIdentifierMetadata;
- (void)attachSendProgressBlockToChunkFetcher:(id)arg1;
- (void)beginChunkFetcher:(id)arg1 offset:(long long)arg2;
- (void)uploadNextChunkWithOffset:(long long)arg1 fetcherProperties:(id)arg2;
- (void)sendCancelUploadWithFetcherProperties:(id)arg1;
- (void)queryFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (void)sendQueryForUploadOffsetWithFetcherProperties:(id)arg1;
- (void)uploadNextChunkWithOffset:(long long)arg1;
- (void)stopFetchReleasingCallbacks:(_Bool)arg1;
- (void)releaseUploadAndBaseCallbacks:(_Bool)arg1;
- (void)invokeFinalCallbackWithData:(id)arg1 error:(id)arg2 shouldInvalidateLocation:(_Bool)arg3;
- (_Bool)shouldReleaseCallbacksUponCompletion;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)beginChunkFetches;
- (void)beginFetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)beginFetchForRetry;
@property(copy) CDUnknownBlockType cancellationHandler;
@property(retain) GTMSessionFetcher *fetcherInFlight; // @dynamic fetcherInFlight;
@property(retain) GTMSessionFetcher *chunkFetcher; // @synthesize chunkFetcher=_chunkFetcher;
- (_Bool)isRestartedUpload;
@property(readonly) NSObject<OS_dispatch_queue> *delegateCallbackQueue; // @dynamic delegateCallbackQueue;
- (void)setDelegateCallbackQueue:(id)arg1;
- (void)setCompletionHandler:(CDUnknownBlockType)arg1;
- (id)prematureFailureErrorWithUserInfo:(id)arg1;
- (id)uploadChunkUnavailableErrorWithDescription:(id)arg1;
- (void)generateChunkSubdataFromFileURL:(id)arg1 offset:(long long)arg2 length:(long long)arg3 response:(CDUnknownBlockType)arg4;
- (void)generateChunkSubdataFromFileHandle:(id)arg1 offset:(long long)arg2 length:(long long)arg3 response:(CDUnknownBlockType)arg4;
- (void)generateChunkSubdataWithOffset:(long long)arg1 length:(long long)arg2 response:(CDUnknownBlockType)arg3;
- (long long)fullUploadLength;
- (void)setLocationURL:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3;
- (void)setupRequestHeaders;
@property long long chunkSize;
@property(copy) NSString *uploadMIMEType;
@property(readonly, copy) CDUnknownBlockType uploadDataProvider;
- (void)setUploadDataLength:(long long)arg1 provider:(CDUnknownBlockType)arg2;
- (void)setUploadFileLength:(long long)arg1;
@property(retain) NSURL *uploadFileURL;
@property(retain) NSFileHandle *uploadFileHandle;
@property(retain) NSData *uploadData;

@end

@interface GTMStringEncoding : NSObject
{
    NSData *charMapData_;
    char *charMap_;
    int reverseCharMap_[128];
    int shift_;
    int mask_;
    _Bool doPad_;
    BOOL paddingChar_;
    int padLen_;
}

+ (id)stringEncodingWithString:(id)arg1;
+ (id)rfc4648Base64WebsafeStringEncoding;
+ (id)rfc4648Base64StringEncoding;
+ (id)crockfordBase32StringEncoding;
+ (id)rfc4648Base32HexStringEncoding;
+ (id)rfc4648Base32StringEncoding;
+ (id)hexStringEncoding;
+ (id)binaryStringEncoding;
- (id)stringByDecoding:(id)arg1 error:(id *)arg2;
- (id)stringByDecoding:(id)arg1;
- (id)decode:(id)arg1 error:(id *)arg2;
- (id)decode:(id)arg1;
- (id)encodeString:(id)arg1 error:(id *)arg2;
- (id)encodeString:(id)arg1;
- (id)encode:(id)arg1 error:(id *)arg2;
- (id)encode:(id)arg1;
- (void)setPaddingChar:(BOOL)arg1;
- (void)setDoPad:(_Bool)arg1;
- (_Bool)doPad;
- (void)ignoreCharacters:(id)arg1;
- (void)addDecodeSynonyms:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface EXHDeviceExperimentIdsRoot : GPBRootObject
{
}

@end

@interface EXHDeviceExperimentIds : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBInt32Array *alwaysArray; // @dynamic alwaysArray;
@property(readonly, nonatomic) unsigned long long alwaysArray_Count; // @dynamic alwaysArray_Count;
@property(retain, nonatomic) GPBInt32Array *byGaiaArray; // @dynamic byGaiaArray;
@property(readonly, nonatomic) unsigned long long byGaiaArray_Count; // @dynamic byGaiaArray_Count;
@property(retain, nonatomic) GPBInt32Array *byOtherArray; // @dynamic byOtherArray;
@property(readonly, nonatomic) unsigned long long byOtherArray_Count; // @dynamic byOtherArray_Count;
@property(retain, nonatomic) GPBInt32Array *byPseudonymousArray; // @dynamic byPseudonymousArray;
@property(readonly, nonatomic) unsigned long long byPseudonymousArray_Count; // @dynamic byPseudonymousArray_Count;

@end

@interface EXHExperimentsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface EXHParam : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool boolValue; // @dynamic boolValue;
@property(nonatomic) _Bool deleted; // @dynamic deleted;
@property(retain, nonatomic) EXHParam_ExtensionValue *extensionValue; // @dynamic extensionValue;
@property(nonatomic) double float64Value; // @dynamic float64Value;
@property(nonatomic) _Bool hasBoolValue; // @dynamic hasBoolValue;
@property(nonatomic) _Bool hasDeleted; // @dynamic hasDeleted;
@property(nonatomic) _Bool hasExtensionValue; // @dynamic hasExtensionValue;
@property(nonatomic) _Bool hasFloat64Value; // @dynamic hasFloat64Value;
@property(nonatomic) _Bool hasIntValue; // @dynamic hasIntValue;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasParamStorageType; // @dynamic hasParamStorageType;
@property(nonatomic) _Bool hasStringValue; // @dynamic hasStringValue;
@property(nonatomic) _Bool hasValueType; // @dynamic hasValueType;
@property(nonatomic) long long intValue; // @dynamic intValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int paramStorageType; // @dynamic paramStorageType;
@property(copy, nonatomic) NSString *stringValue; // @dynamic stringValue;
@property(nonatomic) int valueType; // @dynamic valueType;

@end

@interface EXHParam_ExtensionValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSerializedValue; // @dynamic hasSerializedValue;
@property(copy, nonatomic) NSData *serializedValue; // @dynamic serializedValue;

@end

@interface EXHScope : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *configPackage; // @dynamic configPackage;
@property(nonatomic) _Bool hasConfigPackage; // @dynamic hasConfigPackage;
@property(nonatomic) _Bool hasVersionCode; // @dynamic hasVersionCode;
@property(nonatomic) long long versionCode; // @dynamic versionCode;

@end

@interface EXHParamPartition : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasParamPartitionTag; // @dynamic hasParamPartitionTag;
@property(nonatomic) _Bool hasUpdateType; // @dynamic hasUpdateType;
@property(retain, nonatomic) NSMutableArray *paramArray; // @dynamic paramArray;
@property(readonly, nonatomic) unsigned long long paramArray_Count; // @dynamic paramArray_Count;
@property(retain, nonatomic) EXHParamPartitionTag *paramPartitionTag; // @dynamic paramPartitionTag;
@property(nonatomic) int updateType; // @dynamic updateType;

@end

@interface EXHCrossAppDescriptor : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSData *experimentToken; // @dynamic experimentToken;
@property(retain, nonatomic) EXHScope *fromScope; // @dynamic fromScope;
@property(nonatomic) _Bool hasExperimentToken; // @dynamic hasExperimentToken;
@property(nonatomic) _Bool hasFromScope; // @dynamic hasFromScope;
@property(nonatomic) _Bool hasProvenance; // @dynamic hasProvenance;
@property(nonatomic) int provenance; // @dynamic provenance;

@end

@interface EXHApplicationResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBInt32Array *clientExperimentIdArray; // @dynamic clientExperimentIdArray;
@property(readonly, nonatomic) unsigned long long clientExperimentIdArray_Count; // @dynamic clientExperimentIdArray_Count;
@property(retain, nonatomic) NSMutableArray *crossAppDescriptorArray; // @dynamic crossAppDescriptorArray;
@property(readonly, nonatomic) unsigned long long crossAppDescriptorArray_Count; // @dynamic crossAppDescriptorArray_Count;
@property(copy, nonatomic) NSData *experimentToken; // @dynamic experimentToken;
@property(nonatomic) _Bool hasExperimentToken; // @dynamic hasExperimentToken;
@property(nonatomic) _Bool hasScope; // @dynamic hasScope;
@property(nonatomic) _Bool hasServerTriggerToken; // @dynamic hasServerTriggerToken;
@property(nonatomic) _Bool hasTokensTag; // @dynamic hasTokensTag;
@property(retain, nonatomic) NSMutableArray *paramPartitionArray; // @dynamic paramPartitionArray;
@property(readonly, nonatomic) unsigned long long paramPartitionArray_Count; // @dynamic paramPartitionArray_Count;
@property(retain, nonatomic) EXHScope *scope; // @dynamic scope;
@property(copy, nonatomic) NSString *serverTriggerToken; // @dynamic serverTriggerToken;
@property(copy, nonatomic) NSData *tokensTag; // @dynamic tokensTag;

@end

@interface EXHClientProperties : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool authenticated; // @dynamic authenticated;
@property(retain, nonatomic) ClientInfo *clientInfo; // @dynamic clientInfo;
@property(copy, nonatomic) NSData *dogfoodToken; // @dynamic dogfoodToken;
@property(nonatomic) _Bool hasAuthenticated; // @dynamic hasAuthenticated;
@property(nonatomic) _Bool hasClientInfo; // @dynamic hasClientInfo;
@property(nonatomic) _Bool hasDogfoodToken; // @dynamic hasDogfoodToken;
@property(nonatomic) _Bool hasIsMaybeGooglerGmscore; // @dynamic hasIsMaybeGooglerGmscore;
@property(nonatomic) _Bool hasPseudonymousCookie; // @dynamic hasPseudonymousCookie;
@property(nonatomic) _Bool hasPseudonymousId; // @dynamic hasPseudonymousId;
@property(nonatomic) _Bool hasUserId; // @dynamic hasUserId;
@property(nonatomic) _Bool isMaybeGooglerGmscore; // @dynamic isMaybeGooglerGmscore;
@property(copy, nonatomic) NSString *pseudonymousCookie; // @dynamic pseudonymousCookie;
@property(nonatomic) long long pseudonymousId; // @dynamic pseudonymousId;
@property(nonatomic) long long userId; // @dynamic userId;

@end

@interface EXHParamPartitionTag : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasTag; // @dynamic hasTag;
@property(nonatomic) long long id_p; // @dynamic id_p;
@property(copy, nonatomic) NSData *tag; // @dynamic tag;

@end

@interface EXHApplicationRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSData *applicationProperties; // @dynamic applicationProperties;
@property(nonatomic) _Bool hasApplicationProperties; // @dynamic hasApplicationProperties;
@property(nonatomic) _Bool hasScope; // @dynamic hasScope;
@property(nonatomic) _Bool hasTokensTag; // @dynamic hasTokensTag;
@property(retain, nonatomic) NSMutableArray *paramPartitionTagArray; // @dynamic paramPartitionTagArray;
@property(readonly, nonatomic) unsigned long long paramPartitionTagArray_Count; // @dynamic paramPartitionTagArray_Count;
@property(retain, nonatomic) EXHScope *scope; // @dynamic scope;
@property(copy, nonatomic) NSData *tokensTag; // @dynamic tokensTag;

@end

@interface EXHExperimentsAndConfigsRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *applicationRequestArray; // @dynamic applicationRequestArray;
@property(readonly, nonatomic) unsigned long long applicationRequestArray_Count; // @dynamic applicationRequestArray_Count;
@property(retain, nonatomic) EXHClientProperties *clientProperties; // @dynamic clientProperties;
@property(nonatomic) int clientType; // @dynamic clientType;
@property(copy, nonatomic) NSString *fetchConfigPackage; // @dynamic fetchConfigPackage;
@property(nonatomic) _Bool hasClientProperties; // @dynamic hasClientProperties;
@property(nonatomic) _Bool hasClientType; // @dynamic hasClientType;
@property(nonatomic) _Bool hasFetchConfigPackage; // @dynamic hasFetchConfigPackage;
@property(nonatomic) _Bool hasRequestConfigTag; // @dynamic hasRequestConfigTag;
@property(copy, nonatomic) NSData *requestConfigTag; // @dynamic requestConfigTag;

@end

@interface EXHExperimentsAndConfigsResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *applicationResponseArray; // @dynamic applicationResponseArray;
@property(readonly, nonatomic) unsigned long long applicationResponseArray_Count; // @dynamic applicationResponseArray_Count;
@property(nonatomic) _Bool hasPseudonymousCookie; // @dynamic hasPseudonymousCookie;
@property(nonatomic) _Bool hasRequestConfigTag; // @dynamic hasRequestConfigTag;
@property(nonatomic) _Bool hasServerBuildVersion; // @dynamic hasServerBuildVersion;
@property(nonatomic) _Bool hasServerConfigurationVersion; // @dynamic hasServerConfigurationVersion;
@property(retain, nonatomic) GPBInt32Array *invalidAuthTokenIndexArray; // @dynamic invalidAuthTokenIndexArray;
@property(readonly, nonatomic) unsigned long long invalidAuthTokenIndexArray_Count; // @dynamic invalidAuthTokenIndexArray_Count;
@property(copy, nonatomic) NSString *pseudonymousCookie; // @dynamic pseudonymousCookie;
@property(copy, nonatomic) NSData *requestConfigTag; // @dynamic requestConfigTag;
@property(nonatomic) long long serverBuildVersion; // @dynamic serverBuildVersion;
@property(nonatomic) long long serverConfigurationVersion; // @dynamic serverConfigurationVersion;

@end

@interface TypedFeaturesRoot : GPBRootObject
{
}

@end

@interface Int64ListParam : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBInt64Array *elementArray; // @dynamic elementArray;
@property(readonly, nonatomic) unsigned long long elementArray_Count; // @dynamic elementArray_Count;

@end

@interface StringListParam : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *elementArray; // @dynamic elementArray;
@property(readonly, nonatomic) unsigned long long elementArray_Count; // @dynamic elementArray_Count;

@end

@interface CCTLogContextRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface CCTLogContext : GPBMessage
{
}

+ (id)descriptor;
- (id)hashForFilePath;

// Remaining properties
@property(retain, nonatomic) ClientInfo *clientInfo; // @dynamic clientInfo;
@property(nonatomic) _Bool hasClientInfo; // @dynamic hasClientInfo;
@property(nonatomic) _Bool hasIsAnonymous; // @dynamic hasIsAnonymous;
@property(nonatomic) _Bool hasLogSource; // @dynamic hasLogSource;
@property(nonatomic) _Bool hasObfuscatedGaiaId; // @dynamic hasObfuscatedGaiaId;
@property(nonatomic) _Bool hasPseudonymousId; // @dynamic hasPseudonymousId;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(nonatomic) _Bool isAnonymous; // @dynamic isAnonymous;
@property(nonatomic) int logSource; // @dynamic logSource;
@property(copy, nonatomic) NSString *obfuscatedGaiaId; // @dynamic obfuscatedGaiaId;
@property(copy, nonatomic) NSString *pseudonymousId; // @dynamic pseudonymousId;
@property(nonatomic) int qosTier; // @dynamic qosTier;

@end

@interface CCTUploaderStateRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface CCTUploaderState : GPBMessage
{
}

+ (id)descriptor;
- (_Bool)isCollectForDebugEnabled:(long long)arg1;

// Remaining properties
@property(nonatomic) long long collectForDebugExpiryTimeMilliseconds; // @dynamic collectForDebugExpiryTimeMilliseconds;
@property(nonatomic) long long collectForDebugStartTimeMilliseconds; // @dynamic collectForDebugStartTimeMilliseconds;
@property(nonatomic) _Bool hasCollectForDebugExpiryTimeMilliseconds; // @dynamic hasCollectForDebugExpiryTimeMilliseconds;
@property(nonatomic) _Bool hasCollectForDebugStartTimeMilliseconds; // @dynamic hasCollectForDebugStartTimeMilliseconds;
@property(nonatomic) _Bool hasLastDefaultUploadTimeMilliseconds; // @dynamic hasLastDefaultUploadTimeMilliseconds;
@property(nonatomic) _Bool hasLastUploadTimeMilliseconds; // @dynamic hasLastUploadTimeMilliseconds;
@property(nonatomic) _Bool hasNextUploadTimeMilliseconds; // @dynamic hasNextUploadTimeMilliseconds;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(nonatomic) _Bool hasUploadEndUptimeMilliseconds; // @dynamic hasUploadEndUptimeMilliseconds;
@property(nonatomic) _Bool hasUploadInProgress; // @dynamic hasUploadInProgress;
@property(nonatomic) _Bool hasUploadStateUptimeMilliseconds; // @dynamic hasUploadStateUptimeMilliseconds;
@property(nonatomic) long long lastDefaultUploadTimeMilliseconds; // @dynamic lastDefaultUploadTimeMilliseconds;
@property(nonatomic) long long lastUploadTimeMilliseconds; // @dynamic lastUploadTimeMilliseconds;
@property(nonatomic) long long nextUploadTimeMilliseconds; // @dynamic nextUploadTimeMilliseconds;
@property(retain, nonatomic) QosTiersOverride *qosTier; // @dynamic qosTier;
@property(nonatomic) long long uploadEndUptimeMilliseconds; // @dynamic uploadEndUptimeMilliseconds;
@property(nonatomic) _Bool uploadInProgress; // @dynamic uploadInProgress;
@property(nonatomic) long long uploadStateUptimeMilliseconds; // @dynamic uploadStateUptimeMilliseconds;

@end

@interface GNCPConnectionsEnumsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface GNCPMagicPairEnumsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface GNCPMagicPairEvent : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GNCPNearbyClientEnumsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface GNSPSetupEnumsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface GNSHPSharingEnumsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface NearbyClientLogRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface NearbyClientLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int clientType; // @dynamic clientType;
@property(retain, nonatomic) ConnectionsLog *connections; // @dynamic connections;
@property(nonatomic) _Bool hasClientType; // @dynamic hasClientType;
@property(nonatomic) _Bool hasConnections; // @dynamic hasConnections;
@property(nonatomic) _Bool hasMagicPair; // @dynamic hasMagicPair;
@property(nonatomic) _Bool hasPackageName; // @dynamic hasPackageName;
@property(nonatomic) _Bool hasSetup; // @dynamic hasSetup;
@property(nonatomic) _Bool hasSharing; // @dynamic hasSharing;
@property(retain, nonatomic) MagicPairLog *magicPair; // @dynamic magicPair;
@property(copy, nonatomic) NSString *packageName; // @dynamic packageName;
@property(retain, nonatomic) SetupLog *setup; // @dynamic setup;
@property(retain, nonatomic) SharingLog *sharing; // @dynamic sharing;

@end

@interface SharingLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SharingLog_AcceptAgreements *acceptAgreements; // @dynamic acceptAgreements;
@property(retain, nonatomic) SharingLog_AdvertiseDevicePresenceEnd *advertiseDevicePresenceEnd; // @dynamic advertiseDevicePresenceEnd;
@property(retain, nonatomic) SharingLog_AdvertiseDevicePresenceStart *advertiseDevicePresenceStart; // @dynamic advertiseDevicePresenceStart;
@property(retain, nonatomic) SharingLog_CancelReceivingAttachments *cancelReceivingAttachments; // @dynamic cancelReceivingAttachments;
@property(retain, nonatomic) SharingLog_CancelSendingAttachments *cancelSendingAttachments; // @dynamic cancelSendingAttachments;
@property(retain, nonatomic) SharingLog_DescribeAttachments *describeAttachments; // @dynamic describeAttachments;
@property(retain, nonatomic) SharingLog_DiscoverShareTarget *discoverShareTarget; // @dynamic discoverShareTarget;
@property(retain, nonatomic) SharingLog_EnableNearbySharing *enableNearbySharing; // @dynamic enableNearbySharing;
@property(nonatomic) int eventType; // @dynamic eventType;
@property(nonatomic) _Bool hasAcceptAgreements; // @dynamic hasAcceptAgreements;
@property(nonatomic) _Bool hasAdvertiseDevicePresenceEnd; // @dynamic hasAdvertiseDevicePresenceEnd;
@property(nonatomic) _Bool hasAdvertiseDevicePresenceStart; // @dynamic hasAdvertiseDevicePresenceStart;
@property(nonatomic) _Bool hasCancelReceivingAttachments; // @dynamic hasCancelReceivingAttachments;
@property(nonatomic) _Bool hasCancelSendingAttachments; // @dynamic hasCancelSendingAttachments;
@property(nonatomic) _Bool hasDescribeAttachments; // @dynamic hasDescribeAttachments;
@property(nonatomic) _Bool hasDiscoverShareTarget; // @dynamic hasDiscoverShareTarget;
@property(nonatomic) _Bool hasEnableNearbySharing; // @dynamic hasEnableNearbySharing;
@property(nonatomic) _Bool hasEventType; // @dynamic hasEventType;
@property(nonatomic) _Bool hasOpenReceivedAttachments; // @dynamic hasOpenReceivedAttachments;
@property(nonatomic) _Bool hasReceiveAttachmentsEnd; // @dynamic hasReceiveAttachmentsEnd;
@property(nonatomic) _Bool hasReceiveAttachmentsStart; // @dynamic hasReceiveAttachmentsStart;
@property(nonatomic) _Bool hasReceiveInitialization; // @dynamic hasReceiveInitialization;
@property(nonatomic) _Bool hasReceiveIntroduction; // @dynamic hasReceiveIntroduction;
@property(nonatomic) _Bool hasRespondIntroduction; // @dynamic hasRespondIntroduction;
@property(nonatomic) _Bool hasScanForShareTargetsEnd; // @dynamic hasScanForShareTargetsEnd;
@property(nonatomic) _Bool hasScanForShareTargetsStart; // @dynamic hasScanForShareTargetsStart;
@property(nonatomic) _Bool hasSendAttachmentsEnd; // @dynamic hasSendAttachmentsEnd;
@property(nonatomic) _Bool hasSendAttachmentsStart; // @dynamic hasSendAttachmentsStart;
@property(nonatomic) _Bool hasSendInitialization; // @dynamic hasSendInitialization;
@property(nonatomic) _Bool hasSendIntroduction; // @dynamic hasSendIntroduction;
@property(nonatomic) _Bool hasSetVisibility; // @dynamic hasSetVisibility;
@property(nonatomic) _Bool hasUnknownEvent; // @dynamic hasUnknownEvent;
@property(retain, nonatomic) SharingLog_OpenReceivedAttachments *openReceivedAttachments; // @dynamic openReceivedAttachments;
@property(retain, nonatomic) SharingLog_ReceiveAttachmentsEnd *receiveAttachmentsEnd; // @dynamic receiveAttachmentsEnd;
@property(retain, nonatomic) SharingLog_ReceiveAttachmentsStart *receiveAttachmentsStart; // @dynamic receiveAttachmentsStart;
@property(retain, nonatomic) SharingLog_ReceiveFastInitialization *receiveInitialization; // @dynamic receiveInitialization;
@property(retain, nonatomic) SharingLog_ReceiveIntroduction *receiveIntroduction; // @dynamic receiveIntroduction;
@property(retain, nonatomic) SharingLog_RespondToIntroduction *respondIntroduction; // @dynamic respondIntroduction;
@property(retain, nonatomic) SharingLog_ScanForShareTargetsEnd *scanForShareTargetsEnd; // @dynamic scanForShareTargetsEnd;
@property(retain, nonatomic) SharingLog_ScanForShareTargetsStart *scanForShareTargetsStart; // @dynamic scanForShareTargetsStart;
@property(retain, nonatomic) SharingLog_SendAttachmentsEnd *sendAttachmentsEnd; // @dynamic sendAttachmentsEnd;
@property(retain, nonatomic) SharingLog_SendAttachmentsStart *sendAttachmentsStart; // @dynamic sendAttachmentsStart;
@property(retain, nonatomic) SharingLog_SendFastInitialization *sendInitialization; // @dynamic sendInitialization;
@property(retain, nonatomic) SharingLog_SendIntroduction *sendIntroduction; // @dynamic sendIntroduction;
@property(retain, nonatomic) SharingLog_SetVisibility *setVisibility; // @dynamic setVisibility;
@property(retain, nonatomic) SharingLog_UnknownEvent *unknownEvent; // @dynamic unknownEvent;

@end

@interface SharingLog_UnknownEvent : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_AcceptAgreements : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_EnableNearbySharing : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) int status; // @dynamic status;

@end

@interface SharingLog_SetVisibility : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasVisibility; // @dynamic hasVisibility;
@property(nonatomic) int visibility; // @dynamic visibility;

@end

@interface SharingLog_ScanForShareTargetsStart : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) long long sessionId; // @dynamic sessionId;

@end

@interface SharingLog_ScanForShareTargetsEnd : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) long long sessionId; // @dynamic sessionId;
@property(nonatomic) int status; // @dynamic status;

@end

@interface SharingLog_AdvertiseDevicePresenceStart : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) _Bool hasVisibility; // @dynamic hasVisibility;
@property(nonatomic) long long sessionId; // @dynamic sessionId;
@property(nonatomic) int visibility; // @dynamic visibility;

@end

@interface SharingLog_AdvertiseDevicePresenceEnd : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) long long sessionId; // @dynamic sessionId;
@property(nonatomic) int status; // @dynamic status;

@end

@interface SharingLog_SendFastInitialization : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_ReceiveFastInitialization : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_DiscoverShareTarget : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBDuration *durationSinceScanning; // @dynamic durationSinceScanning;
@property(nonatomic) _Bool hasDurationSinceScanning; // @dynamic hasDurationSinceScanning;
@property(nonatomic) _Bool hasShareTargetInfo; // @dynamic hasShareTargetInfo;
@property(retain, nonatomic) SharingLog_ShareTargetInfo *shareTargetInfo; // @dynamic shareTargetInfo;

@end

@interface SharingLog_DescribeAttachments : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SharingLog_AttachmentsInfo *attachmentsInfo; // @dynamic attachmentsInfo;
@property(nonatomic) _Bool hasAttachmentsInfo; // @dynamic hasAttachmentsInfo;

@end

@interface SharingLog_SendIntroduction : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasShareTargetInfo; // @dynamic hasShareTargetInfo;
@property(retain, nonatomic) SharingLog_ShareTargetInfo *shareTargetInfo; // @dynamic shareTargetInfo;

@end

@interface SharingLog_ReceiveIntroduction : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_RespondToIntroduction : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int action; // @dynamic action;
@property(nonatomic) _Bool hasAction; // @dynamic hasAction;

@end

@interface SharingLog_SendAttachmentsStart : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SharingLog_AttachmentsInfo *attachmentsInfo; // @dynamic attachmentsInfo;
@property(nonatomic) _Bool hasAttachmentsInfo; // @dynamic hasAttachmentsInfo;
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) long long sessionId; // @dynamic sessionId;

@end

@interface SharingLog_SendAttachmentsEnd : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSentBytes; // @dynamic hasSentBytes;
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) long long sentBytes; // @dynamic sentBytes;
@property(nonatomic) long long sessionId; // @dynamic sessionId;
@property(nonatomic) int status; // @dynamic status;

@end

@interface SharingLog_ReceiveAttachmentsStart : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SharingLog_AttachmentsInfo *attachmentsInfo; // @dynamic attachmentsInfo;
@property(nonatomic) _Bool hasAttachmentsInfo; // @dynamic hasAttachmentsInfo;
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) long long sessionId; // @dynamic sessionId;

@end

@interface SharingLog_ReceiveAttachmentsEnd : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasReceivedBytes; // @dynamic hasReceivedBytes;
@property(nonatomic) _Bool hasSessionId; // @dynamic hasSessionId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) long long receivedBytes; // @dynamic receivedBytes;
@property(nonatomic) long long sessionId; // @dynamic sessionId;
@property(nonatomic) int status; // @dynamic status;

@end

@interface SharingLog_CancelSendingAttachments : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_CancelReceivingAttachments : GPBMessage
{
}

+ (id)descriptor;

@end

@interface SharingLog_OpenReceivedAttachments : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SharingLog_AttachmentsInfo *attachmentsInfo; // @dynamic attachmentsInfo;
@property(nonatomic) _Bool hasAttachmentsInfo; // @dynamic hasAttachmentsInfo;

@end

@interface SharingLog_ShareTargetInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int deviceRelationship; // @dynamic deviceRelationship;
@property(nonatomic) int deviceType; // @dynamic deviceType;
@property(nonatomic) _Bool hasDeviceRelationship; // @dynamic hasDeviceRelationship;
@property(nonatomic) _Bool hasDeviceType; // @dynamic hasDeviceType;
@property(nonatomic) _Bool hasOsType; // @dynamic hasOsType;
@property(nonatomic) int osType; // @dynamic osType;

@end

@interface SharingLog_AttachmentsInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *fileAttachmentArray; // @dynamic fileAttachmentArray;
@property(readonly, nonatomic) unsigned long long fileAttachmentArray_Count; // @dynamic fileAttachmentArray_Count;
@property(nonatomic) _Bool hasRequiredApp; // @dynamic hasRequiredApp;
@property(copy, nonatomic) NSString *requiredApp; // @dynamic requiredApp;
@property(retain, nonatomic) NSMutableArray *textAttachmentArray; // @dynamic textAttachmentArray;
@property(readonly, nonatomic) unsigned long long textAttachmentArray_Count; // @dynamic textAttachmentArray_Count;

@end

@interface SharingLog_TextAttachment : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSizeBytes; // @dynamic hasSizeBytes;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) long long sizeBytes; // @dynamic sizeBytes;
@property(nonatomic) int type; // @dynamic type;

@end

@interface SharingLog_FileAttachment : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSizeBytes; // @dynamic hasSizeBytes;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) long long sizeBytes; // @dynamic sizeBytes;
@property(nonatomic) int type; // @dynamic type;

@end

@interface ConnectionsLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) ConnectionsLog_ClientSession *clientSession; // @dynamic clientSession;
@property(nonatomic) int eventType; // @dynamic eventType;
@property(nonatomic) _Bool hasClientSession; // @dynamic hasClientSession;
@property(nonatomic) _Bool hasEventType; // @dynamic hasEventType;

@end

@interface ConnectionsLog_ClientSession : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(retain, nonatomic) NSMutableArray *strategySessionArray; // @dynamic strategySessionArray;
@property(readonly, nonatomic) unsigned long long strategySessionArray_Count; // @dynamic strategySessionArray_Count;

@end

@interface ConnectionsLog_StrategySession : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *advertisingPhaseArray; // @dynamic advertisingPhaseArray;
@property(readonly, nonatomic) unsigned long long advertisingPhaseArray_Count; // @dynamic advertisingPhaseArray_Count;
@property(retain, nonatomic) NSMutableArray *connectionAttemptArray; // @dynamic connectionAttemptArray;
@property(readonly, nonatomic) unsigned long long connectionAttemptArray_Count; // @dynamic connectionAttemptArray_Count;
@property(retain, nonatomic) NSMutableArray *discoveryPhaseArray; // @dynamic discoveryPhaseArray;
@property(readonly, nonatomic) unsigned long long discoveryPhaseArray_Count; // @dynamic discoveryPhaseArray_Count;
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(retain, nonatomic) NSMutableArray *establishedConnectionArray; // @dynamic establishedConnectionArray;
@property(readonly, nonatomic) unsigned long long establishedConnectionArray_Count; // @dynamic establishedConnectionArray_Count;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasStrategy; // @dynamic hasStrategy;
@property(retain, nonatomic) GPBEnumArray *roleArray; // @dynamic roleArray;
@property(readonly, nonatomic) unsigned long long roleArray_Count; // @dynamic roleArray_Count;
@property(nonatomic) int strategy; // @dynamic strategy;
@property(retain, nonatomic) NSMutableArray *upgradeAttemptArray; // @dynamic upgradeAttemptArray;
@property(readonly, nonatomic) unsigned long long upgradeAttemptArray_Count; // @dynamic upgradeAttemptArray_Count;

@end

@interface ConnectionsLog_DiscoveryPhase : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *discoveredEndpointArray; // @dynamic discoveredEndpointArray;
@property(readonly, nonatomic) unsigned long long discoveredEndpointArray_Count; // @dynamic discoveredEndpointArray_Count;
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(retain, nonatomic) GPBEnumArray *mediumArray; // @dynamic mediumArray;
@property(readonly, nonatomic) unsigned long long mediumArray_Count; // @dynamic mediumArray_Count;
@property(retain, nonatomic) NSMutableArray *sentConnectionRequestArray; // @dynamic sentConnectionRequestArray;
@property(readonly, nonatomic) unsigned long long sentConnectionRequestArray_Count; // @dynamic sentConnectionRequestArray_Count;

@end

@interface ConnectionsLog_DiscoveredEndpoint : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLatencyMillis; // @dynamic hasLatencyMillis;
@property(nonatomic) _Bool hasMedium; // @dynamic hasMedium;
@property(nonatomic) long long latencyMillis; // @dynamic latencyMillis;
@property(nonatomic) int medium; // @dynamic medium;

@end

@interface ConnectionsLog_AdvertisingPhase : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(retain, nonatomic) GPBEnumArray *mediumArray; // @dynamic mediumArray;
@property(readonly, nonatomic) unsigned long long mediumArray_Count; // @dynamic mediumArray_Count;
@property(retain, nonatomic) NSMutableArray *receivedConnectionRequestArray; // @dynamic receivedConnectionRequestArray;
@property(readonly, nonatomic) unsigned long long receivedConnectionRequestArray_Count; // @dynamic receivedConnectionRequestArray_Count;

@end

@interface ConnectionsLog_ConnectionRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasLocalResponse; // @dynamic hasLocalResponse;
@property(nonatomic) _Bool hasRemoteResponse; // @dynamic hasRemoteResponse;
@property(nonatomic) _Bool hasRequestDelayMillis; // @dynamic hasRequestDelayMillis;
@property(nonatomic) int localResponse; // @dynamic localResponse;
@property(nonatomic) int remoteResponse; // @dynamic remoteResponse;
@property(nonatomic) long long requestDelayMillis; // @dynamic requestDelayMillis;

@end

@interface ConnectionsLog_ConnectionAttempt : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int attemptResult; // @dynamic attemptResult;
@property(nonatomic) int direction; // @dynamic direction;
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasAttemptResult; // @dynamic hasAttemptResult;
@property(nonatomic) _Bool hasDirection; // @dynamic hasDirection;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasMedium; // @dynamic hasMedium;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) int medium; // @dynamic medium;
@property(nonatomic) int type; // @dynamic type;

@end

@interface ConnectionsLog_EstablishedConnection : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int disconnectionReason; // @dynamic disconnectionReason;
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDisconnectionReason; // @dynamic hasDisconnectionReason;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasMedium; // @dynamic hasMedium;
@property(nonatomic) int medium; // @dynamic medium;
@property(retain, nonatomic) NSMutableArray *receivedPayloadArray; // @dynamic receivedPayloadArray;
@property(readonly, nonatomic) unsigned long long receivedPayloadArray_Count; // @dynamic receivedPayloadArray_Count;
@property(retain, nonatomic) NSMutableArray *sentPayloadArray; // @dynamic sentPayloadArray;
@property(readonly, nonatomic) unsigned long long sentPayloadArray_Count; // @dynamic sentPayloadArray_Count;

@end

@interface ConnectionsLog_Payload : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasNumBytesTransferred; // @dynamic hasNumBytesTransferred;
@property(nonatomic) _Bool hasNumChunks; // @dynamic hasNumChunks;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasTotalSizeBytes; // @dynamic hasTotalSizeBytes;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) long long numBytesTransferred; // @dynamic numBytesTransferred;
@property(nonatomic) int numChunks; // @dynamic numChunks;
@property(nonatomic) int status; // @dynamic status;
@property(nonatomic) long long totalSizeBytes; // @dynamic totalSizeBytes;
@property(nonatomic) int type; // @dynamic type;

@end

@interface ConnectionsLog_BandwidthUpgradeAttempt : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int direction; // @dynamic direction;
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) int errorStage; // @dynamic errorStage;
@property(nonatomic) int fromMedium; // @dynamic fromMedium;
@property(nonatomic) _Bool hasDirection; // @dynamic hasDirection;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;
@property(nonatomic) _Bool hasErrorStage; // @dynamic hasErrorStage;
@property(nonatomic) _Bool hasFromMedium; // @dynamic hasFromMedium;
@property(nonatomic) _Bool hasToMedium; // @dynamic hasToMedium;
@property(nonatomic) _Bool hasUpgradeResult; // @dynamic hasUpgradeResult;
@property(nonatomic) int toMedium; // @dynamic toMedium;
@property(nonatomic) int upgradeResult; // @dynamic upgradeResult;

@end

@interface MagicPairLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) MagicPairLog_CreateBondEvent *bondEvent; // @dynamic bondEvent;
@property(nonatomic) int bondState; // @dynamic bondState;
@property(retain, nonatomic) MagicPairLog_BrEdrHandoverEvent *brEdrHandoverEvent; // @dynamic brEdrHandoverEvent;
@property(retain, nonatomic) MagicPairLog_ConnectEvent *connectEvent; // @dynamic connectEvent;
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(retain, nonatomic) MagicPairLog_GattEvent *gattEvent; // @dynamic gattEvent;
@property(nonatomic) _Bool hasBondEvent; // @dynamic hasBondEvent;
@property(nonatomic) _Bool hasBondState; // @dynamic hasBondState;
@property(nonatomic) _Bool hasBrEdrHandoverEvent; // @dynamic hasBrEdrHandoverEvent;
@property(nonatomic) _Bool hasConnectEvent; // @dynamic hasConnectEvent;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasGattEvent; // @dynamic hasGattEvent;
@property(nonatomic) _Bool hasHashedSaltedDeviceAddress; // @dynamic hasHashedSaltedDeviceAddress;
@property(nonatomic) _Bool hasModelId; // @dynamic hasModelId;
@property(nonatomic) long long hashedSaltedDeviceAddress; // @dynamic hashedSaltedDeviceAddress;
@property(nonatomic) int modelId; // @dynamic modelId;

@end

@interface MagicPairLog_GattEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorFromOs; // @dynamic errorFromOs;
@property(nonatomic) _Bool hasErrorFromOs; // @dynamic hasErrorFromOs;

@end

@interface MagicPairLog_BrEdrHandoverEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;

@end

@interface MagicPairLog_CreateBondEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasUnbondReason; // @dynamic hasUnbondReason;
@property(nonatomic) int unbondReason; // @dynamic unbondReason;

@end

@interface MagicPairLog_ConnectEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasProfileUuid; // @dynamic hasProfileUuid;
@property(nonatomic) int profileUuid; // @dynamic profileUuid;

@end

@interface NearbyDimensions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) FastPairDimensions *fastPair; // @dynamic fastPair;
@property(nonatomic) _Bool hasFastPair; // @dynamic hasFastPair;

@end

@interface FastPairDimensions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasModelId; // @dynamic hasModelId;
@property(nonatomic) int modelId; // @dynamic modelId;

@end

@interface SetupLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) SetupLog_ClientSession *clientSession; // @dynamic clientSession;
@property(nonatomic) int eventType; // @dynamic eventType;
@property(nonatomic) _Bool hasClientSession; // @dynamic hasClientSession;
@property(nonatomic) _Bool hasEventType; // @dynamic hasEventType;

@end

@interface SetupLog_ClientSession : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long durationMillis; // @dynamic durationMillis;
@property(nonatomic) _Bool hasDurationMillis; // @dynamic hasDurationMillis;

@end

@interface LOGSLogsAnnotationsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface LOGSMessageDetails : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *mayAppearInArray; // @dynamic mayAppearInArray;
@property(readonly, nonatomic) unsigned long long mayAppearInArray_Count; // @dynamic mayAppearInArray_Count;

@end

@interface LOGSMessageDetails_Type : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLogType; // @dynamic hasLogType;
@property(nonatomic) _Bool hasSourceType; // @dynamic hasSourceType;
@property(copy, nonatomic) NSString *logType; // @dynamic logType;
@property(copy, nonatomic) NSString *sourceType; // @dynamic sourceType;

@end

@interface CLCCCountersRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface CLCCCounters : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *counterArray; // @dynamic counterArray;
@property(readonly, nonatomic) unsigned long long counterArray_Count; // @dynamic counterArray_Count;
@property(copy, nonatomic) NSData *dimensionsInstance; // @dynamic dimensionsInstance;
@property(copy, nonatomic) NSString *dimensionsInstanceJs; // @dynamic dimensionsInstanceJs;
@property(copy, nonatomic) NSString *dimensionsInstanceJson; // @dynamic dimensionsInstanceJson;
@property(nonatomic) _Bool hasDimensionsInstance; // @dynamic hasDimensionsInstance;
@property(nonatomic) _Bool hasDimensionsInstanceJs; // @dynamic hasDimensionsInstanceJs;
@property(nonatomic) _Bool hasDimensionsInstanceJson; // @dynamic hasDimensionsInstanceJson;
@property(nonatomic) _Bool hasTimestampMillis; // @dynamic hasTimestampMillis;
@property(nonatomic) _Bool hasUptimeMillis; // @dynamic hasUptimeMillis;
@property(nonatomic) long long timestampMillis; // @dynamic timestampMillis;
@property(nonatomic) long long uptimeMillis; // @dynamic uptimeMillis;

@end

@interface CLCCCounter : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *bucketArray; // @dynamic bucketArray;
@property(readonly, nonatomic) unsigned long long bucketArray_Count; // @dynamic bucketArray_Count;
@property(nonatomic) _Bool hasHashedName; // @dynamic hasHashedName;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) unsigned long long hashedName; // @dynamic hashedName;
@property(copy, nonatomic) NSString *name; // @dynamic name;

@end

@interface CLCCBucket : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long count; // @dynamic count;
@property(nonatomic) _Bool hasCount; // @dynamic hasCount;
@property(nonatomic) _Bool hasKey; // @dynamic hasKey;
@property(nonatomic) long long key; // @dynamic key;

@end

@interface MetalogRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface MetalogLog : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) MetalogCounterDimensions *counterDimensions; // @dynamic counterDimensions;
@property(nonatomic) _Bool hasCounterDimensions; // @dynamic hasCounterDimensions;

@end

@interface MetalogCounterDimensions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIsCharging; // @dynamic hasIsCharging;
@property(nonatomic) _Bool hasIsConnectionUnmetered; // @dynamic hasIsConnectionUnmetered;
@property(nonatomic) _Bool hasLogDropReason; // @dynamic hasLogDropReason;
@property(nonatomic) _Bool hasLogSource; // @dynamic hasLogSource;
@property(nonatomic) _Bool hasLogSourceName; // @dynamic hasLogSourceName;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(nonatomic) _Bool hasUidHash; // @dynamic hasUidHash;
@property(nonatomic) _Bool isCharging; // @dynamic isCharging;
@property(nonatomic) _Bool isConnectionUnmetered; // @dynamic isConnectionUnmetered;
@property(copy, nonatomic) NSString *logDropReason; // @dynamic logDropReason;
@property(nonatomic) int logSource; // @dynamic logSource;
@property(copy, nonatomic) NSString *logSourceName; // @dynamic logSourceName;
@property(nonatomic) int qosTier; // @dynamic qosTier;
@property(nonatomic) unsigned long long uidHash; // @dynamic uidHash;

@end

@interface PHTPhenotypeLogRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface PHTPhenotypeLogEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) PHTApplicationInfo *applicationInfo; // @dynamic applicationInfo;
@property(retain, nonatomic) NSMutableArray *bulkApplicationInfoArray; // @dynamic bulkApplicationInfoArray;
@property(readonly, nonatomic) unsigned long long bulkApplicationInfoArray_Count; // @dynamic bulkApplicationInfoArray_Count;
@property(nonatomic) _Bool hasApplicationInfo; // @dynamic hasApplicationInfo;
@property(nonatomic) _Bool hasModuleVersion; // @dynamic hasModuleVersion;
@property(nonatomic) _Bool hasPhenotypeInfo; // @dynamic hasPhenotypeInfo;
@property(nonatomic) int moduleVersion; // @dynamic moduleVersion;
@property(retain, nonatomic) PHTPhenotypeInfo *phenotypeInfo; // @dynamic phenotypeInfo;

@end

@interface PHTApplicationInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *commitToken; // @dynamic commitToken;
@property(nonatomic) int fetchReason; // @dynamic fetchReason;
@property(nonatomic) _Bool hasCommitToken; // @dynamic hasCommitToken;
@property(nonatomic) _Bool hasFetchReason; // @dynamic hasFetchReason;
@property(nonatomic) _Bool hasOperationExecutionMs; // @dynamic hasOperationExecutionMs;
@property(nonatomic) _Bool hasPackageName; // @dynamic hasPackageName;
@property(nonatomic) _Bool hasPackageVersion; // @dynamic hasPackageVersion;
@property(nonatomic) _Bool hasRequestedServingVersion; // @dynamic hasRequestedServingVersion;
@property(nonatomic) _Bool hasServingVersion; // @dynamic hasServingVersion;
@property(nonatomic) _Bool hasSourcePackageName; // @dynamic hasSourcePackageName;
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(retain, nonatomic) GPBEnumArray *logSourceArray; // @dynamic logSourceArray;
@property(readonly, nonatomic) unsigned long long logSourceArray_Count; // @dynamic logSourceArray_Count;
@property(retain, nonatomic) NSMutableArray *logSourceNameArray; // @dynamic logSourceNameArray;
@property(readonly, nonatomic) unsigned long long logSourceNameArray_Count; // @dynamic logSourceNameArray_Count;
@property(nonatomic) int operationExecutionMs; // @dynamic operationExecutionMs;
@property(copy, nonatomic) NSString *packageName; // @dynamic packageName;
@property(nonatomic) int packageVersion; // @dynamic packageVersion;
@property(nonatomic) long long requestedServingVersion; // @dynamic requestedServingVersion;
@property(nonatomic) long long servingVersion; // @dynamic servingVersion;
@property(copy, nonatomic) NSString *sourcePackageName; // @dynamic sourcePackageName;
@property(copy, nonatomic) NSString *user; // @dynamic user;
@property(retain, nonatomic) GPBInt32Array *weakExperimentIdArray; // @dynamic weakExperimentIdArray;
@property(readonly, nonatomic) unsigned long long weakExperimentIdArray_Count; // @dynamic weakExperimentIdArray_Count;

@end

@interface PHTPhenotypeInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool committedDummyBooleanFlag; // @dynamic committedDummyBooleanFlag;
@property(nonatomic) int committedDummyIntegerFlag; // @dynamic committedDummyIntegerFlag;
@property(copy, nonatomic) NSString *committedDummyStringFlag; // @dynamic committedDummyStringFlag;
@property(nonatomic) _Bool dummyBooleanFlag; // @dynamic dummyBooleanFlag;
@property(nonatomic) int dummyIntegerFlag; // @dynamic dummyIntegerFlag;
@property(copy, nonatomic) NSString *dummyStringFlag; // @dynamic dummyStringFlag;
@property(nonatomic) _Bool hasCommittedDummyBooleanFlag; // @dynamic hasCommittedDummyBooleanFlag;
@property(nonatomic) _Bool hasCommittedDummyIntegerFlag; // @dynamic hasCommittedDummyIntegerFlag;
@property(nonatomic) _Bool hasCommittedDummyStringFlag; // @dynamic hasCommittedDummyStringFlag;
@property(nonatomic) _Bool hasDummyBooleanFlag; // @dynamic hasDummyBooleanFlag;
@property(nonatomic) _Bool hasDummyIntegerFlag; // @dynamic hasDummyIntegerFlag;
@property(nonatomic) _Bool hasDummyStringFlag; // @dynamic hasDummyStringFlag;

@end

@interface GPBDescriptorRoot : GPBRootObject
{
}

@end

@interface GPBFileDescriptorSet : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *fileArray; // @dynamic fileArray;
@property(readonly, nonatomic) unsigned long long fileArray_Count; // @dynamic fileArray_Count;

@end

@interface GPBFileDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *dependencyArray; // @dynamic dependencyArray;
@property(readonly, nonatomic) unsigned long long dependencyArray_Count; // @dynamic dependencyArray_Count;
@property(retain, nonatomic) NSMutableArray *enumTypeArray; // @dynamic enumTypeArray;
@property(readonly, nonatomic) unsigned long long enumTypeArray_Count; // @dynamic enumTypeArray_Count;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasPackage; // @dynamic hasPackage;
@property(nonatomic) _Bool hasSourceCodeInfo; // @dynamic hasSourceCodeInfo;
@property(nonatomic) _Bool hasSyntax; // @dynamic hasSyntax;
@property(retain, nonatomic) NSMutableArray *messageTypeArray; // @dynamic messageTypeArray;
@property(readonly, nonatomic) unsigned long long messageTypeArray_Count; // @dynamic messageTypeArray_Count;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBFileOptions *options; // @dynamic options;
@property(copy, nonatomic) NSString *package; // @dynamic package;
@property(retain, nonatomic) GPBInt32Array *publicDependencyArray; // @dynamic publicDependencyArray;
@property(readonly, nonatomic) unsigned long long publicDependencyArray_Count; // @dynamic publicDependencyArray_Count;
@property(retain, nonatomic) NSMutableArray *serviceArray; // @dynamic serviceArray;
@property(readonly, nonatomic) unsigned long long serviceArray_Count; // @dynamic serviceArray_Count;
@property(retain, nonatomic) GPBSourceCodeInfo *sourceCodeInfo; // @dynamic sourceCodeInfo;
@property(copy, nonatomic) NSString *syntax; // @dynamic syntax;
@property(retain, nonatomic) GPBInt32Array *weakDependencyArray; // @dynamic weakDependencyArray;
@property(readonly, nonatomic) unsigned long long weakDependencyArray_Count; // @dynamic weakDependencyArray_Count;

@end

@interface GPBDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *enumTypeArray; // @dynamic enumTypeArray;
@property(readonly, nonatomic) unsigned long long enumTypeArray_Count; // @dynamic enumTypeArray_Count;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(retain, nonatomic) NSMutableArray *extensionRangeArray; // @dynamic extensionRangeArray;
@property(readonly, nonatomic) unsigned long long extensionRangeArray_Count; // @dynamic extensionRangeArray_Count;
@property(retain, nonatomic) NSMutableArray *fieldArray; // @dynamic fieldArray;
@property(readonly, nonatomic) unsigned long long fieldArray_Count; // @dynamic fieldArray_Count;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *nestedTypeArray; // @dynamic nestedTypeArray;
@property(readonly, nonatomic) unsigned long long nestedTypeArray_Count; // @dynamic nestedTypeArray_Count;
@property(retain, nonatomic) NSMutableArray *oneofDeclArray; // @dynamic oneofDeclArray;
@property(readonly, nonatomic) unsigned long long oneofDeclArray_Count; // @dynamic oneofDeclArray_Count;
@property(retain, nonatomic) GPBMessageOptions *options; // @dynamic options;
@property(retain, nonatomic) NSMutableArray *reservedNameArray; // @dynamic reservedNameArray;
@property(readonly, nonatomic) unsigned long long reservedNameArray_Count; // @dynamic reservedNameArray_Count;
@property(retain, nonatomic) NSMutableArray *reservedRangeArray; // @dynamic reservedRangeArray;
@property(readonly, nonatomic) unsigned long long reservedRangeArray_Count; // @dynamic reservedRangeArray_Count;

@end

@interface GPBDescriptorProto_ExtensionRange : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasStart; // @dynamic hasStart;
@property(retain, nonatomic) GPBExtensionRangeOptions *options; // @dynamic options;
@property(nonatomic) int start; // @dynamic start;

@end

@interface GPBDescriptorProto_ReservedRange : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasStart; // @dynamic hasStart;
@property(nonatomic) int start; // @dynamic start;

@end

@interface GPBExtensionRangeOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBFieldDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *defaultValue; // @dynamic defaultValue;
@property(copy, nonatomic) NSString *extendee; // @dynamic extendee;
@property(nonatomic) _Bool hasDefaultValue; // @dynamic hasDefaultValue;
@property(nonatomic) _Bool hasExtendee; // @dynamic hasExtendee;
@property(nonatomic) _Bool hasJsonName; // @dynamic hasJsonName;
@property(nonatomic) _Bool hasLabel; // @dynamic hasLabel;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasNumber; // @dynamic hasNumber;
@property(nonatomic) _Bool hasOneofIndex; // @dynamic hasOneofIndex;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) _Bool hasTypeName; // @dynamic hasTypeName;
@property(copy, nonatomic) NSString *jsonName; // @dynamic jsonName;
@property(nonatomic) int label; // @dynamic label;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(nonatomic) int oneofIndex; // @dynamic oneofIndex;
@property(retain, nonatomic) GPBFieldOptions *options; // @dynamic options;
@property(nonatomic) int type; // @dynamic type;
@property(copy, nonatomic) NSString *typeName; // @dynamic typeName;

@end

@interface GPBOneofDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBOneofOptions *options; // @dynamic options;

@end

@interface GPBEnumDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBEnumOptions *options; // @dynamic options;
@property(retain, nonatomic) NSMutableArray *reservedNameArray; // @dynamic reservedNameArray;
@property(readonly, nonatomic) unsigned long long reservedNameArray_Count; // @dynamic reservedNameArray_Count;
@property(retain, nonatomic) NSMutableArray *reservedRangeArray; // @dynamic reservedRangeArray;
@property(readonly, nonatomic) unsigned long long reservedRangeArray_Count; // @dynamic reservedRangeArray_Count;
@property(retain, nonatomic) NSMutableArray *valueArray; // @dynamic valueArray;
@property(readonly, nonatomic) unsigned long long valueArray_Count; // @dynamic valueArray_Count;

@end

@interface GPBEnumDescriptorProto_EnumReservedRange : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasStart; // @dynamic hasStart;
@property(nonatomic) int start; // @dynamic start;

@end

@interface GPBEnumValueDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasNumber; // @dynamic hasNumber;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(retain, nonatomic) GPBEnumValueOptions *options; // @dynamic options;

@end

@interface GPBServiceDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(retain, nonatomic) NSMutableArray *methodArray; // @dynamic methodArray;
@property(readonly, nonatomic) unsigned long long methodArray_Count; // @dynamic methodArray_Count;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBServiceOptions *options; // @dynamic options;
@property(retain, nonatomic) NSMutableArray *streamArray; // @dynamic streamArray;
@property(readonly, nonatomic) unsigned long long streamArray_Count; // @dynamic streamArray_Count;

@end

@interface GPBMethodDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool clientStreaming; // @dynamic clientStreaming;
@property(nonatomic) _Bool hasClientStreaming; // @dynamic hasClientStreaming;
@property(nonatomic) _Bool hasInputType; // @dynamic hasInputType;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasOutputType; // @dynamic hasOutputType;
@property(nonatomic) _Bool hasServerStreaming; // @dynamic hasServerStreaming;
@property(copy, nonatomic) NSString *inputType; // @dynamic inputType;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBMethodOptions *options; // @dynamic options;
@property(copy, nonatomic) NSString *outputType; // @dynamic outputType;
@property(nonatomic) _Bool serverStreaming; // @dynamic serverStreaming;

@end

@interface GPBStreamDescriptorProto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *clientMessageType; // @dynamic clientMessageType;
@property(nonatomic) _Bool hasClientMessageType; // @dynamic hasClientMessageType;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasServerMessageType; // @dynamic hasServerMessageType;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBStreamOptions *options; // @dynamic options;
@property(copy, nonatomic) NSString *serverMessageType; // @dynamic serverMessageType;

@end

@interface GPBFileOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ccApiVersion; // @dynamic ccApiVersion;
@property(nonatomic) _Bool ccEnableArenas; // @dynamic ccEnableArenas;
@property(nonatomic) _Bool ccGenericServices; // @dynamic ccGenericServices;
@property(nonatomic) _Bool ccUtf8Verification; // @dynamic ccUtf8Verification;
@property(copy, nonatomic) NSString *csharpNamespace; // @dynamic csharpNamespace;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(copy, nonatomic) NSString *goPackage; // @dynamic goPackage;
@property(nonatomic) _Bool hasCcApiVersion; // @dynamic hasCcApiVersion;
@property(nonatomic) _Bool hasCcEnableArenas; // @dynamic hasCcEnableArenas;
@property(nonatomic) _Bool hasCcGenericServices; // @dynamic hasCcGenericServices;
@property(nonatomic) _Bool hasCcUtf8Verification; // @dynamic hasCcUtf8Verification;
@property(nonatomic) _Bool hasCsharpNamespace; // @dynamic hasCsharpNamespace;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasGoPackage; // @dynamic hasGoPackage;
@property(nonatomic) _Bool hasJavaAltApiPackage; // @dynamic hasJavaAltApiPackage;
@property(nonatomic) _Bool hasJavaApiVersion; // @dynamic hasJavaApiVersion;
@property(nonatomic) _Bool hasJavaEnableDualGenerateMutableApi; // @dynamic hasJavaEnableDualGenerateMutableApi;
@property(nonatomic) _Bool hasJavaGenericServices; // @dynamic hasJavaGenericServices;
@property(nonatomic) _Bool hasJavaJava5Enums; // @dynamic hasJavaJava5Enums;
@property(nonatomic) _Bool hasJavaMultipleFiles; // @dynamic hasJavaMultipleFiles;
@property(nonatomic) _Bool hasJavaMultipleFilesMutablePackage; // @dynamic hasJavaMultipleFilesMutablePackage;
@property(nonatomic) _Bool hasJavaMutableApi; // @dynamic hasJavaMutableApi;
@property(nonatomic) _Bool hasJavaOuterClassname; // @dynamic hasJavaOuterClassname;
@property(nonatomic) _Bool hasJavaPackage; // @dynamic hasJavaPackage;
@property(nonatomic) _Bool hasJavaStringCheckUtf8; // @dynamic hasJavaStringCheckUtf8;
@property(nonatomic) _Bool hasJavaUseJavaproto2; // @dynamic hasJavaUseJavaproto2;
@property(nonatomic) _Bool hasJavaUseJavastrings; // @dynamic hasJavaUseJavastrings;
@property(nonatomic) _Bool hasJavascriptPackage; // @dynamic hasJavascriptPackage;
@property(nonatomic) _Bool hasObjcClassPrefix; // @dynamic hasObjcClassPrefix;
@property(nonatomic) _Bool hasOptimizeFor; // @dynamic hasOptimizeFor;
@property(nonatomic) _Bool hasPhpClassPrefix; // @dynamic hasPhpClassPrefix;
@property(nonatomic) _Bool hasPhpGenericServices; // @dynamic hasPhpGenericServices;
@property(nonatomic) _Bool hasPhpMetadataNamespace; // @dynamic hasPhpMetadataNamespace;
@property(nonatomic) _Bool hasPhpNamespace; // @dynamic hasPhpNamespace;
@property(nonatomic) _Bool hasPyApiVersion; // @dynamic hasPyApiVersion;
@property(nonatomic) _Bool hasPyGenericServices; // @dynamic hasPyGenericServices;
@property(nonatomic) _Bool hasRubyPackage; // @dynamic hasRubyPackage;
@property(nonatomic) _Bool hasSwiftPrefix; // @dynamic hasSwiftPrefix;
@property(nonatomic) _Bool hasSzlApiVersion; // @dynamic hasSzlApiVersion;
@property(nonatomic) _Bool hasUseCcStubbyLibrary; // @dynamic hasUseCcStubbyLibrary;
@property(copy, nonatomic) NSString *javaAltApiPackage; // @dynamic javaAltApiPackage;
@property(nonatomic) int javaApiVersion; // @dynamic javaApiVersion;
@property(nonatomic) _Bool javaEnableDualGenerateMutableApi; // @dynamic javaEnableDualGenerateMutableApi;
@property(nonatomic) _Bool javaGenericServices; // @dynamic javaGenericServices;
@property(nonatomic) _Bool javaJava5Enums; // @dynamic javaJava5Enums;
@property(nonatomic) _Bool javaMultipleFiles; // @dynamic javaMultipleFiles;
@property(copy, nonatomic) NSString *javaMultipleFilesMutablePackage; // @dynamic javaMultipleFilesMutablePackage;
@property(nonatomic) _Bool javaMutableApi; // @dynamic javaMutableApi;
@property(copy, nonatomic) NSString *javaOuterClassname; // @dynamic javaOuterClassname;
@property(copy, nonatomic) NSString *javaPackage; // @dynamic javaPackage;
@property(nonatomic) _Bool javaStringCheckUtf8; // @dynamic javaStringCheckUtf8;
@property(nonatomic) _Bool javaUseJavaproto2; // @dynamic javaUseJavaproto2;
@property(nonatomic) _Bool javaUseJavastrings; // @dynamic javaUseJavastrings;
@property(copy, nonatomic) NSString *javascriptPackage; // @dynamic javascriptPackage;
@property(copy, nonatomic) NSString *objcClassPrefix; // @dynamic objcClassPrefix;
@property(nonatomic) int optimizeFor; // @dynamic optimizeFor;
@property(copy, nonatomic) NSString *phpClassPrefix; // @dynamic phpClassPrefix;
@property(nonatomic) _Bool phpGenericServices; // @dynamic phpGenericServices;
@property(copy, nonatomic) NSString *phpMetadataNamespace; // @dynamic phpMetadataNamespace;
@property(copy, nonatomic) NSString *phpNamespace; // @dynamic phpNamespace;
@property(nonatomic) int pyApiVersion; // @dynamic pyApiVersion;
@property(nonatomic) _Bool pyGenericServices; // @dynamic pyGenericServices;
@property(copy, nonatomic) NSString *rubyPackage; // @dynamic rubyPackage;
@property(copy, nonatomic) NSString *swiftPrefix; // @dynamic swiftPrefix;
@property(nonatomic) int szlApiVersion; // @dynamic szlApiVersion;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;
@property(nonatomic) _Bool useCcStubbyLibrary; // @dynamic useCcStubbyLibrary;

@end

@interface GPBMessageOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(retain, nonatomic) NSMutableArray *experimentalJavaBuilderInterfaceArray; // @dynamic experimentalJavaBuilderInterfaceArray;
@property(readonly, nonatomic) unsigned long long experimentalJavaBuilderInterfaceArray_Count; // @dynamic experimentalJavaBuilderInterfaceArray_Count;
@property(retain, nonatomic) NSMutableArray *experimentalJavaInterfaceExtendsArray; // @dynamic experimentalJavaInterfaceExtendsArray;
@property(readonly, nonatomic) unsigned long long experimentalJavaInterfaceExtendsArray_Count; // @dynamic experimentalJavaInterfaceExtendsArray_Count;
@property(retain, nonatomic) NSMutableArray *experimentalJavaMessageInterfaceArray; // @dynamic experimentalJavaMessageInterfaceArray;
@property(readonly, nonatomic) unsigned long long experimentalJavaMessageInterfaceArray_Count; // @dynamic experimentalJavaMessageInterfaceArray_Count;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasMapEntry; // @dynamic hasMapEntry;
@property(nonatomic) _Bool hasMessageSetWireFormat; // @dynamic hasMessageSetWireFormat;
@property(nonatomic) _Bool hasNoStandardDescriptorAccessor; // @dynamic hasNoStandardDescriptorAccessor;
@property(nonatomic) _Bool mapEntry; // @dynamic mapEntry;
@property(nonatomic) _Bool messageSetWireFormat; // @dynamic messageSetWireFormat;
@property(nonatomic) _Bool noStandardDescriptorAccessor; // @dynamic noStandardDescriptorAccessor;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBFieldOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ctype; // @dynamic ctype;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool deprecatedRawMessage; // @dynamic deprecatedRawMessage;
@property(nonatomic) _Bool enforceUtf8; // @dynamic enforceUtf8;
@property(nonatomic) _Bool hasCtype; // @dynamic hasCtype;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasDeprecatedRawMessage; // @dynamic hasDeprecatedRawMessage;
@property(nonatomic) _Bool hasEnforceUtf8; // @dynamic hasEnforceUtf8;
@property(nonatomic) _Bool hasJstype; // @dynamic hasJstype;
@property(nonatomic) _Bool hasLazy; // @dynamic hasLazy;
@property(nonatomic) _Bool hasPacked; // @dynamic hasPacked;
@property(nonatomic) _Bool hasWeak; // @dynamic hasWeak;
@property(nonatomic) int jstype; // @dynamic jstype;
@property(nonatomic) _Bool lazy; // @dynamic lazy;
@property(nonatomic) _Bool packed; // @dynamic packed;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;
@property(retain, nonatomic) NSMutableArray *upgradedOptionArray; // @dynamic upgradedOptionArray;
@property(readonly, nonatomic) unsigned long long upgradedOptionArray_Count; // @dynamic upgradedOptionArray_Count;
@property(nonatomic) _Bool weak; // @dynamic weak;

@end

@interface GPBFieldOptions_UpgradedOption : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GPBOneofOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBEnumOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool allowAlias; // @dynamic allowAlias;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool hasAllowAlias; // @dynamic hasAllowAlias;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasProto1Name; // @dynamic hasProto1Name;
@property(copy, nonatomic) NSString *proto1Name; // @dynamic proto1Name;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBEnumValueOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBServiceOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) double failureDetectionDelay; // @dynamic failureDetectionDelay;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasFailureDetectionDelay; // @dynamic hasFailureDetectionDelay;
@property(nonatomic) _Bool hasMulticastStub; // @dynamic hasMulticastStub;
@property(nonatomic) _Bool multicastStub; // @dynamic multicastStub;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBMethodOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int clientLogging; // @dynamic clientLogging;
@property(nonatomic) _Bool clientStreaming; // @dynamic clientStreaming;
@property(nonatomic) double deadline; // @dynamic deadline;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool duplicateSuppression; // @dynamic duplicateSuppression;
@property(nonatomic) _Bool endUserCredsRequested; // @dynamic endUserCredsRequested;
@property(nonatomic) _Bool failFast; // @dynamic failFast;
@property(nonatomic) _Bool goLegacyChannelApi; // @dynamic goLegacyChannelApi;
@property(nonatomic) _Bool hasClientLogging; // @dynamic hasClientLogging;
@property(nonatomic) _Bool hasClientStreaming; // @dynamic hasClientStreaming;
@property(nonatomic) _Bool hasDeadline; // @dynamic hasDeadline;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasDuplicateSuppression; // @dynamic hasDuplicateSuppression;
@property(nonatomic) _Bool hasEndUserCredsRequested; // @dynamic hasEndUserCredsRequested;
@property(nonatomic) _Bool hasFailFast; // @dynamic hasFailFast;
@property(nonatomic) _Bool hasGoLegacyChannelApi; // @dynamic hasGoLegacyChannelApi;
@property(nonatomic) _Bool hasIdempotencyLevel; // @dynamic hasIdempotencyLevel;
@property(nonatomic) _Bool hasLegacyClientInitialTokens; // @dynamic hasLegacyClientInitialTokens;
@property(nonatomic) _Bool hasLegacyResultType; // @dynamic hasLegacyResultType;
@property(nonatomic) _Bool hasLegacyServerInitialTokens; // @dynamic hasLegacyServerInitialTokens;
@property(nonatomic) _Bool hasLegacyStreamType; // @dynamic hasLegacyStreamType;
@property(nonatomic) _Bool hasLegacyTokenUnit; // @dynamic hasLegacyTokenUnit;
@property(nonatomic) _Bool hasLogLevel; // @dynamic hasLogLevel;
@property(nonatomic) _Bool hasProtocol; // @dynamic hasProtocol;
@property(nonatomic) _Bool hasRequestFormat; // @dynamic hasRequestFormat;
@property(nonatomic) _Bool hasResponseFormat; // @dynamic hasResponseFormat;
@property(nonatomic) _Bool hasSecurityLabel; // @dynamic hasSecurityLabel;
@property(nonatomic) _Bool hasSecurityLevel; // @dynamic hasSecurityLevel;
@property(nonatomic) _Bool hasServerLogging; // @dynamic hasServerLogging;
@property(nonatomic) _Bool hasServerStreaming; // @dynamic hasServerStreaming;
@property(nonatomic) _Bool hasStreamType; // @dynamic hasStreamType;
@property(nonatomic) int idempotencyLevel; // @dynamic idempotencyLevel;
@property(nonatomic) long long legacyClientInitialTokens; // @dynamic legacyClientInitialTokens;
@property(copy, nonatomic) NSString *legacyResultType; // @dynamic legacyResultType;
@property(nonatomic) long long legacyServerInitialTokens; // @dynamic legacyServerInitialTokens;
@property(copy, nonatomic) NSString *legacyStreamType; // @dynamic legacyStreamType;
@property(nonatomic) int legacyTokenUnit; // @dynamic legacyTokenUnit;
@property(nonatomic) int logLevel; // @dynamic logLevel;
@property(nonatomic) int protocol; // @dynamic protocol;
@property(nonatomic) int requestFormat; // @dynamic requestFormat;
@property(nonatomic) int responseFormat; // @dynamic responseFormat;
@property(copy, nonatomic) NSString *securityLabel; // @dynamic securityLabel;
@property(nonatomic) int securityLevel; // @dynamic securityLevel;
@property(nonatomic) int serverLogging; // @dynamic serverLogging;
@property(nonatomic) _Bool serverStreaming; // @dynamic serverStreaming;
@property(copy, nonatomic) NSString *streamType; // @dynamic streamType;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBStreamOptions : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long clientInitialTokens; // @dynamic clientInitialTokens;
@property(nonatomic) int clientLogging; // @dynamic clientLogging;
@property(nonatomic) double deadline; // @dynamic deadline;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool endUserCredsRequested; // @dynamic endUserCredsRequested;
@property(nonatomic) _Bool failFast; // @dynamic failFast;
@property(nonatomic) _Bool hasClientInitialTokens; // @dynamic hasClientInitialTokens;
@property(nonatomic) _Bool hasClientLogging; // @dynamic hasClientLogging;
@property(nonatomic) _Bool hasDeadline; // @dynamic hasDeadline;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasEndUserCredsRequested; // @dynamic hasEndUserCredsRequested;
@property(nonatomic) _Bool hasFailFast; // @dynamic hasFailFast;
@property(nonatomic) _Bool hasLogLevel; // @dynamic hasLogLevel;
@property(nonatomic) _Bool hasSecurityLabel; // @dynamic hasSecurityLabel;
@property(nonatomic) _Bool hasSecurityLevel; // @dynamic hasSecurityLevel;
@property(nonatomic) _Bool hasServerInitialTokens; // @dynamic hasServerInitialTokens;
@property(nonatomic) _Bool hasServerLogging; // @dynamic hasServerLogging;
@property(nonatomic) _Bool hasTokenUnit; // @dynamic hasTokenUnit;
@property(nonatomic) int logLevel; // @dynamic logLevel;
@property(copy, nonatomic) NSString *securityLabel; // @dynamic securityLabel;
@property(nonatomic) int securityLevel; // @dynamic securityLevel;
@property(nonatomic) long long serverInitialTokens; // @dynamic serverInitialTokens;
@property(nonatomic) int serverLogging; // @dynamic serverLogging;
@property(nonatomic) int tokenUnit; // @dynamic tokenUnit;
@property(retain, nonatomic) NSMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(readonly, nonatomic) unsigned long long uninterpretedOptionArray_Count; // @dynamic uninterpretedOptionArray_Count;

@end

@interface GPBUninterpretedOption : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *aggregateValue; // @dynamic aggregateValue;
@property(nonatomic) double doubleValue; // @dynamic doubleValue;
@property(nonatomic) _Bool hasAggregateValue; // @dynamic hasAggregateValue;
@property(nonatomic) _Bool hasDoubleValue; // @dynamic hasDoubleValue;
@property(nonatomic) _Bool hasIdentifierValue; // @dynamic hasIdentifierValue;
@property(nonatomic) _Bool hasNegativeIntValue; // @dynamic hasNegativeIntValue;
@property(nonatomic) _Bool hasPositiveIntValue; // @dynamic hasPositiveIntValue;
@property(nonatomic) _Bool hasStringValue; // @dynamic hasStringValue;
@property(copy, nonatomic) NSString *identifierValue; // @dynamic identifierValue;
@property(retain, nonatomic) NSMutableArray *nameArray; // @dynamic nameArray;
@property(readonly, nonatomic) unsigned long long nameArray_Count; // @dynamic nameArray_Count;
@property(nonatomic) long long negativeIntValue; // @dynamic negativeIntValue;
@property(nonatomic) unsigned long long positiveIntValue; // @dynamic positiveIntValue;
@property(copy, nonatomic) NSData *stringValue; // @dynamic stringValue;

@end

@interface GPBUninterpretedOption_NamePart : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIsExtension; // @dynamic hasIsExtension;
@property(nonatomic) _Bool hasNamePart; // @dynamic hasNamePart;
@property(nonatomic) _Bool isExtension; // @dynamic isExtension;
@property(copy, nonatomic) NSString *namePart; // @dynamic namePart;

@end

@interface GPBSourceCodeInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *locationArray; // @dynamic locationArray;
@property(readonly, nonatomic) unsigned long long locationArray_Count; // @dynamic locationArray_Count;

@end

@interface GPBSourceCodeInfo_Location : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLeadingComments; // @dynamic hasLeadingComments;
@property(nonatomic) _Bool hasTrailingComments; // @dynamic hasTrailingComments;
@property(copy, nonatomic) NSString *leadingComments; // @dynamic leadingComments;
@property(retain, nonatomic) NSMutableArray *leadingDetachedCommentsArray; // @dynamic leadingDetachedCommentsArray;
@property(readonly, nonatomic) unsigned long long leadingDetachedCommentsArray_Count; // @dynamic leadingDetachedCommentsArray_Count;
@property(retain, nonatomic) GPBInt32Array *pathArray; // @dynamic pathArray;
@property(readonly, nonatomic) unsigned long long pathArray_Count; // @dynamic pathArray_Count;
@property(retain, nonatomic) GPBInt32Array *spanArray; // @dynamic spanArray;
@property(readonly, nonatomic) unsigned long long spanArray_Count; // @dynamic spanArray_Count;
@property(copy, nonatomic) NSString *trailingComments; // @dynamic trailingComments;

@end

@interface GPBGeneratedCodeInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *annotationArray; // @dynamic annotationArray;
@property(readonly, nonatomic) unsigned long long annotationArray_Count; // @dynamic annotationArray_Count;

@end

@interface GPBGeneratedCodeInfo_Annotation : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int begin; // @dynamic begin;
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasBegin; // @dynamic hasBegin;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasSourceFile; // @dynamic hasSourceFile;
@property(retain, nonatomic) GPBInt32Array *pathArray; // @dynamic pathArray;
@property(readonly, nonatomic) unsigned long long pathArray_Count; // @dynamic pathArray_Count;
@property(copy, nonatomic) NSString *sourceFile; // @dynamic sourceFile;

@end

@interface RetentionAnnotationsRoot : GPBRootObject
{
}

@end

@interface RetentionSpec : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *context; // @dynamic context;
@property(nonatomic) int desiredRetention; // @dynamic desiredRetention;
@property(nonatomic) _Bool hasContext; // @dynamic hasContext;
@property(nonatomic) _Bool hasDesiredRetention; // @dynamic hasDesiredRetention;

@end

@interface SemanticAnnotationsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface Qualifier : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool autoDeleteWithin180Days; // @dynamic autoDeleteWithin180Days;
@property(nonatomic) _Bool autoDeleteWithinWipeout; // @dynamic autoDeleteWithinWipeout;
@property(nonatomic) _Bool hasAutoDeleteWithin180Days; // @dynamic hasAutoDeleteWithin180Days;
@property(nonatomic) _Bool hasAutoDeleteWithinWipeout; // @dynamic hasAutoDeleteWithinWipeout;
@property(nonatomic) _Bool hasExplicitConsent; // @dynamic hasExplicitConsent;
@property(nonatomic) _Bool hasHasExplicitConsent; // @dynamic hasHasExplicitConsent;
@property(nonatomic) _Bool hasIsAccessTarget; // @dynamic hasIsAccessTarget;
@property(nonatomic) _Bool hasIsEncrypted; // @dynamic hasIsEncrypted;
@property(nonatomic) _Bool hasIsGoogle; // @dynamic hasIsGoogle;
@property(nonatomic) _Bool hasIsPartner; // @dynamic hasIsPartner;
@property(nonatomic) _Bool hasIsPublic; // @dynamic hasIsPublic;
@property(nonatomic) _Bool hasIsPublisher; // @dynamic hasIsPublisher;
@property(nonatomic) _Bool hasLimitedAccess; // @dynamic hasLimitedAccess;
@property(nonatomic) _Bool hasNonUserLocation; // @dynamic hasNonUserLocation;
@property(nonatomic) _Bool hasOtherUser; // @dynamic hasOtherUser;
@property(nonatomic) _Bool hasRelatedField; // @dynamic hasRelatedField;
@property(nonatomic) _Bool isAccessTarget; // @dynamic isAccessTarget;
@property(nonatomic) _Bool isEncrypted; // @dynamic isEncrypted;
@property(nonatomic) _Bool isGoogle; // @dynamic isGoogle;
@property(nonatomic) _Bool isPartner; // @dynamic isPartner;
@property(nonatomic) _Bool isPublic; // @dynamic isPublic;
@property(nonatomic) _Bool isPublisher; // @dynamic isPublisher;
@property(nonatomic) _Bool limitedAccess; // @dynamic limitedAccess;
@property(nonatomic) _Bool nonUserLocation; // @dynamic nonUserLocation;
@property(nonatomic) _Bool otherUser; // @dynamic otherUser;
@property(nonatomic) int relatedField; // @dynamic relatedField;

@end

@interface LocationQualifier : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasNonUserLocation; // @dynamic hasNonUserLocation;
@property(nonatomic) _Bool hasPreciseLocation; // @dynamic hasPreciseLocation;
@property(nonatomic) _Bool nonUserLocation; // @dynamic nonUserLocation;
@property(nonatomic) _Bool preciseLocation; // @dynamic preciseLocation;

@end

@interface FieldDetails : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBEnumArray *semanticTypeArray; // @dynamic semanticTypeArray;
@property(readonly, nonatomic) unsigned long long semanticTypeArray_Count; // @dynamic semanticTypeArray_Count;

@end

@interface MessageDetails : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GPBEnumArray *semanticTypeArray; // @dynamic semanticTypeArray;
@property(readonly, nonatomic) unsigned long long semanticTypeArray_Count; // @dynamic semanticTypeArray_Count;

@end

@interface ClientanalyticsRoot : GPBRootObject
{
}

+ (id)extensionRegistry;

@end

@interface LogEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long bootCount; // @dynamic bootCount;
@property(copy, nonatomic) NSData *clientVe; // @dynamic clientVe;
@property(copy, nonatomic) NSString *clientVeJs; // @dynamic clientVeJs;
@property(copy, nonatomic) NSString *componentId; // @dynamic componentId;
@property(nonatomic) int eventCode; // @dynamic eventCode;
@property(nonatomic) int eventFlowId; // @dynamic eventFlowId;
@property(nonatomic) long long eventTimeMs; // @dynamic eventTimeMs;
@property(nonatomic) long long eventUptimeMs; // @dynamic eventUptimeMs;
@property(retain, nonatomic) ExperimentIds *experimentIds; // @dynamic experimentIds;
@property(retain, nonatomic) GPBInt32Array *genericDimensionsArray; // @dynamic genericDimensionsArray;
@property(readonly, nonatomic) unsigned long long genericDimensionsArray_Count; // @dynamic genericDimensionsArray_Count;
@property(nonatomic) _Bool hasBootCount; // @dynamic hasBootCount;
@property(nonatomic) _Bool hasClientVe; // @dynamic hasClientVe;
@property(nonatomic) _Bool hasClientVeJs; // @dynamic hasClientVeJs;
@property(nonatomic) _Bool hasComponentId; // @dynamic hasComponentId;
@property(nonatomic) _Bool hasEventCode; // @dynamic hasEventCode;
@property(nonatomic) _Bool hasEventFlowId; // @dynamic hasEventFlowId;
@property(nonatomic) _Bool hasEventTimeMs; // @dynamic hasEventTimeMs;
@property(nonatomic) _Bool hasEventUptimeMs; // @dynamic hasEventUptimeMs;
@property(nonatomic) _Bool hasExperimentIds; // @dynamic hasExperimentIds;
@property(nonatomic) _Bool hasInDirectBootMode; // @dynamic hasInDirectBootMode;
@property(nonatomic) _Bool hasIsUserInitiated; // @dynamic hasIsUserInitiated;
@property(nonatomic) _Bool hasNetworkConnectionInfo; // @dynamic hasNetworkConnectionInfo;
@property(nonatomic) _Bool hasSequencePosition; // @dynamic hasSequencePosition;
@property(nonatomic) _Bool hasSourceExtension; // @dynamic hasSourceExtension;
@property(nonatomic) _Bool hasSourceExtensionJs; // @dynamic hasSourceExtensionJs;
@property(nonatomic) _Bool hasSourceExtensionJson; // @dynamic hasSourceExtensionJson;
@property(nonatomic) _Bool hasStore; // @dynamic hasStore;
@property(nonatomic) _Bool hasTag; // @dynamic hasTag;
@property(nonatomic) _Bool hasTestId; // @dynamic hasTestId;
@property(nonatomic) _Bool hasTimezoneOffsetSeconds; // @dynamic hasTimezoneOffsetSeconds;
@property(nonatomic) _Bool inDirectBootMode; // @dynamic inDirectBootMode;
@property(nonatomic) _Bool isUserInitiated; // @dynamic isUserInitiated;
@property(retain, nonatomic) NetworkConnectionInfo *networkConnectionInfo; // @dynamic networkConnectionInfo;
@property(nonatomic) long long sequencePosition; // @dynamic sequencePosition;
@property(copy, nonatomic) NSData *sourceExtension; // @dynamic sourceExtension;
@property(copy, nonatomic) NSString *sourceExtensionJs; // @dynamic sourceExtensionJs;
@property(copy, nonatomic) NSString *sourceExtensionJson; // @dynamic sourceExtensionJson;
@property(copy, nonatomic) NSData *store; // @dynamic store;
@property(copy, nonatomic) NSString *tag; // @dynamic tag;
@property(retain, nonatomic) GPBInt32Array *testCodeArray; // @dynamic testCodeArray;
@property(readonly, nonatomic) unsigned long long testCodeArray_Count; // @dynamic testCodeArray_Count;
@property(copy, nonatomic) NSString *testId; // @dynamic testId;
@property(nonatomic) long long timezoneOffsetSeconds; // @dynamic timezoneOffsetSeconds;

@end

@interface NetworkConnectionInfo : GPBMessage
{
}

+ (id)descriptor;

@end

@interface ExperimentIds : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSData *clearBlob; // @dynamic clearBlob;
@property(copy, nonatomic) NSString *clearBlobJs; // @dynamic clearBlobJs;
@property(retain, nonatomic) NSMutableArray *encryptedBlobArray; // @dynamic encryptedBlobArray;
@property(readonly, nonatomic) unsigned long long encryptedBlobArray_Count; // @dynamic encryptedBlobArray_Count;
@property(nonatomic) _Bool hasClearBlob; // @dynamic hasClearBlob;
@property(nonatomic) _Bool hasClearBlobJs; // @dynamic hasClearBlobJs;
@property(nonatomic) _Bool hasUsersMatch; // @dynamic hasUsersMatch;
@property(nonatomic) _Bool usersMatch; // @dynamic usersMatch;

@end

@interface DesktopClientInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *applicationBuild; // @dynamic applicationBuild;
@property(nonatomic) int applicationBuildCl; // @dynamic applicationBuildCl;
@property(nonatomic) int clearcutVersion; // @dynamic clearcutVersion;
@property(copy, nonatomic) NSString *clientId; // @dynamic clientId;
@property(copy, nonatomic) NSString *country; // @dynamic country;
@property(nonatomic) _Bool hasApplicationBuild; // @dynamic hasApplicationBuild;
@property(nonatomic) _Bool hasApplicationBuildCl; // @dynamic hasApplicationBuildCl;
@property(nonatomic) _Bool hasClearcutVersion; // @dynamic hasClearcutVersion;
@property(nonatomic) _Bool hasClientId; // @dynamic hasClientId;
@property(nonatomic) _Bool hasCountry; // @dynamic hasCountry;
@property(nonatomic) _Bool hasLoggingId; // @dynamic hasLoggingId;
@property(nonatomic) _Bool hasOs; // @dynamic hasOs;
@property(nonatomic) _Bool hasOsFullVersion; // @dynamic hasOsFullVersion;
@property(nonatomic) _Bool hasOsMajorVersion; // @dynamic hasOsMajorVersion;
@property(copy, nonatomic) NSString *loggingId; // @dynamic loggingId;
@property(copy, nonatomic) NSString *os; // @dynamic os;
@property(copy, nonatomic) NSString *osFullVersion; // @dynamic osFullVersion;
@property(copy, nonatomic) NSString *osMajorVersion; // @dynamic osMajorVersion;

@end

@interface IosClientInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *applicationBuild; // @dynamic applicationBuild;
@property(nonatomic) int applicationBuildCl; // @dynamic applicationBuildCl;
@property(copy, nonatomic) NSString *applicationBundleId; // @dynamic applicationBundleId;
@property(copy, nonatomic) NSString *applicationVersion; // @dynamic applicationVersion;
@property(nonatomic) int clearcutVersion; // @dynamic clearcutVersion;
@property(copy, nonatomic) NSString *clientId; // @dynamic clientId;
@property(copy, nonatomic) NSString *country; // @dynamic country;
@property(nonatomic) _Bool hasApplicationBuild; // @dynamic hasApplicationBuild;
@property(nonatomic) _Bool hasApplicationBuildCl; // @dynamic hasApplicationBuildCl;
@property(nonatomic) _Bool hasApplicationBundleId; // @dynamic hasApplicationBundleId;
@property(nonatomic) _Bool hasApplicationVersion; // @dynamic hasApplicationVersion;
@property(nonatomic) _Bool hasClearcutVersion; // @dynamic hasClearcutVersion;
@property(nonatomic) _Bool hasClientId; // @dynamic hasClientId;
@property(nonatomic) _Bool hasCountry; // @dynamic hasCountry;
@property(nonatomic) _Bool hasLanguageCode; // @dynamic hasLanguageCode;
@property(nonatomic) _Bool hasLoggingId; // @dynamic hasLoggingId;
@property(nonatomic) _Bool hasModel; // @dynamic hasModel;
@property(nonatomic) _Bool hasOsFullVersion; // @dynamic hasOsFullVersion;
@property(nonatomic) _Bool hasOsMajorVersion; // @dynamic hasOsMajorVersion;
@property(copy, nonatomic) NSString *languageCode; // @dynamic languageCode;
@property(copy, nonatomic) NSString *loggingId; // @dynamic loggingId;
@property(copy, nonatomic) NSString *model; // @dynamic model;
@property(copy, nonatomic) NSString *osFullVersion; // @dynamic osFullVersion;
@property(copy, nonatomic) NSString *osMajorVersion; // @dynamic osMajorVersion;

@end

@interface ClientInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int clientType; // @dynamic clientType;
@property(retain, nonatomic) DesktopClientInfo *desktopClientInfo; // @dynamic desktopClientInfo;
@property(nonatomic) _Bool hasClientType; // @dynamic hasClientType;
@property(nonatomic) _Bool hasDesktopClientInfo; // @dynamic hasDesktopClientInfo;
@property(nonatomic) _Bool hasHeterodyneConfigVersion; // @dynamic hasHeterodyneConfigVersion;
@property(nonatomic) _Bool hasIosClientInfo; // @dynamic hasIosClientInfo;
@property(nonatomic) _Bool hasRemoteHost; // @dynamic hasRemoteHost;
@property(nonatomic) _Bool hasRemoteHost6; // @dynamic hasRemoteHost6;
@property(nonatomic) long long heterodyneConfigVersion; // @dynamic heterodyneConfigVersion;
@property(retain, nonatomic) IosClientInfo *iosClientInfo; // @dynamic iosClientInfo;
@property(copy, nonatomic) NSString *remoteHost; // @dynamic remoteHost;
@property(copy, nonatomic) NSString *remoteHost6; // @dynamic remoteHost6;

@end

@interface BatchedLogRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool enablePerRequestStatus; // @dynamic enablePerRequestStatus;
@property(nonatomic) _Bool hasEnablePerRequestStatus; // @dynamic hasEnablePerRequestStatus;
@property(nonatomic) _Bool hasInDirectBootMode; // @dynamic hasInDirectBootMode;
@property(nonatomic) _Bool hasLastZwiebackResetWallTimeMs; // @dynamic hasLastZwiebackResetWallTimeMs;
@property(nonatomic) _Bool inDirectBootMode; // @dynamic inDirectBootMode;
@property(nonatomic) long long lastZwiebackResetWallTimeMs; // @dynamic lastZwiebackResetWallTimeMs;
@property(retain, nonatomic) NSMutableArray *logRequestArray; // @dynamic logRequestArray;
@property(readonly, nonatomic) unsigned long long logRequestArray_Count; // @dynamic logRequestArray_Count;

@end

@interface LogRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) ClientInfo *clientInfo; // @dynamic clientInfo;
@property(retain, nonatomic) CollectForDebug *collectForDebug; // @dynamic collectForDebug;
@property(nonatomic) _Bool hasClientInfo; // @dynamic hasClientInfo;
@property(nonatomic) _Bool hasCollectForDebug; // @dynamic hasCollectForDebug;
@property(nonatomic) _Bool hasLogEventDroppedCount; // @dynamic hasLogEventDroppedCount;
@property(nonatomic) _Bool hasLogSource; // @dynamic hasLogSource;
@property(nonatomic) _Bool hasLogSourceName; // @dynamic hasLogSourceName;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(nonatomic) _Bool hasRequestTimeMs; // @dynamic hasRequestTimeMs;
@property(nonatomic) _Bool hasRequestUptimeMs; // @dynamic hasRequestUptimeMs;
@property(nonatomic) _Bool hasZwiebackCookie; // @dynamic hasZwiebackCookie;
@property(retain, nonatomic) NSMutableArray *logEventArray; // @dynamic logEventArray;
@property(readonly, nonatomic) unsigned long long logEventArray_Count; // @dynamic logEventArray_Count;
@property(nonatomic) long long logEventDroppedCount; // @dynamic logEventDroppedCount;
@property(nonatomic) int logSource; // @dynamic logSource;
@property(copy, nonatomic) NSString *logSourceName; // @dynamic logSourceName;
@property(nonatomic) int qosTier; // @dynamic qosTier;
@property(nonatomic) long long requestTimeMs; // @dynamic requestTimeMs;
@property(nonatomic) long long requestUptimeMs; // @dynamic requestUptimeMs;
@property(retain, nonatomic) NSMutableArray *serializedLogEventsArray; // @dynamic serializedLogEventsArray;
@property(readonly, nonatomic) unsigned long long serializedLogEventsArray_Count; // @dynamic serializedLogEventsArray_Count;
@property(copy, nonatomic) NSString *zwiebackCookie; // @dynamic zwiebackCookie;

@end

@interface CollectForDebug : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long collectStartMs; // @dynamic collectStartMs;
@property(nonatomic) long long collectUntilMs; // @dynamic collectUntilMs;
@property(nonatomic) _Bool hasCollectStartMs; // @dynamic hasCollectStartMs;
@property(nonatomic) _Bool hasCollectUntilMs; // @dynamic hasCollectUntilMs;
@property(nonatomic) _Bool hasSkipPersistentLogStorage; // @dynamic hasSkipPersistentLogStorage;
@property(nonatomic) _Bool skipPersistentLogStorage; // @dynamic skipPersistentLogStorage;

@end

@interface QosTierConfiguration : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLogSource; // @dynamic hasLogSource;
@property(nonatomic) _Bool hasLogSourceName; // @dynamic hasLogSourceName;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(nonatomic) int logSource; // @dynamic logSource;
@property(copy, nonatomic) NSString *logSourceName; // @dynamic logSourceName;
@property(nonatomic) int qosTier; // @dynamic qosTier;

@end

@interface QosTiersOverride : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasQosTierFingerprint; // @dynamic hasQosTierFingerprint;
@property(retain, nonatomic) NSMutableArray *qosTierConfigurationArray; // @dynamic qosTierConfigurationArray;
@property(readonly, nonatomic) unsigned long long qosTierConfigurationArray_Count; // @dynamic qosTierConfigurationArray_Count;
@property(nonatomic) long long qosTierFingerprint; // @dynamic qosTierFingerprint;

@end

@interface LogResponseDetails : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLogRequestIndex; // @dynamic hasLogRequestIndex;
@property(nonatomic) _Bool hasResponseAction; // @dynamic hasResponseAction;
@property(nonatomic) int logRequestIndex; // @dynamic logRequestIndex;
@property(nonatomic) int responseAction; // @dynamic responseAction;

@end

@interface LogResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasNextRequestWaitMillis; // @dynamic hasNextRequestWaitMillis;
@property(nonatomic) _Bool hasQosTier; // @dynamic hasQosTier;
@property(retain, nonatomic) NSMutableArray *logResponseDetailsArray; // @dynamic logResponseDetailsArray;
@property(readonly, nonatomic) unsigned long long logResponseDetailsArray_Count; // @dynamic logResponseDetailsArray_Count;
@property(nonatomic) long long nextRequestWaitMillis; // @dynamic nextRequestWaitMillis;
@property(retain, nonatomic) QosTiersOverride *qosTier; // @dynamic qosTier;

@end

@interface LogSamplingRulesRoot : GPBRootObject
{
}

@end

@interface LogSamplingRules : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *rulesArray; // @dynamic rulesArray;
@property(readonly, nonatomic) unsigned long long rulesArray_Count; // @dynamic rulesArray_Count;

@end

@interface LogSamplingRules_Rule : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *correlationToken; // @dynamic correlationToken;
@property(nonatomic) int eventCode; // @dynamic eventCode;
@property(nonatomic) _Bool hasCorrelationToken; // @dynamic hasCorrelationToken;
@property(nonatomic) _Bool hasEventCode; // @dynamic hasEventCode;
@property(nonatomic) _Bool hasKeepDenominator; // @dynamic hasKeepDenominator;
@property(nonatomic) _Bool hasKeepNumerator; // @dynamic hasKeepNumerator;
@property(nonatomic) long long keepDenominator; // @dynamic keepDenominator;
@property(nonatomic) long long keepNumerator; // @dynamic keepNumerator;

@end

@interface PodsDummy_Pods_SwipeShared_Swipe : NSObject
{
}

@end

@interface _TtC5Swipe26PhotoCaptureViewController (Swipe) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
@end

@interface _TtC5Swipe28EpisodeWinnersViewController (Swipe) <UICollectionViewDelegate, UIDocumentInteractionControllerDelegate>
- (void)scrollViewDidScroll:(id)arg1;
@end

@interface _TtC5Swipe25YourResultsViewController (Swipe) <UIDocumentInteractionControllerDelegate>
@end

@interface _TtC5Swipe18HeartAnimationView (Swipe) <SLCoreAnimationBuildDelegate>
- (void)squallCoreAnimation:(id)arg1 willBuildAnimationsForLayer:(id)arg2 withName:(id)arg3;
- (void)squallCoreAnimationDidLayoutAnimationLayers:(id)arg1;
@end

@interface NSError (APMAdditions)
+ (id)apm_errorWithCode:(long long)arg1 description:(id)arg2 monitorContext:(id)arg3;
+ (id)apm_errorWithCode:(long long)arg1 description:(id)arg2;
@end

@interface NSData (MD5)
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 isRawData:(_Bool)arg3 error:(id *)arg4;
+ (id)gtm_dataByCompressingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 mode:(int)arg4 error:(id *)arg5;
+ (id)gtm_dataByRawInflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByRawInflatingData:(id)arg1;
+ (id)gtm_dataByRawInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByRawDeflatingData:(id)arg1;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByInflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByInflatingData:(id)arg1;
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByDeflatingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByDeflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByDeflatingData:(id)arg1;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByGzippingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByGzippingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByGzippingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByGzippingData:(id)arg1;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (long long)apm_64LeastSignificantBits;
- (long long)apm_64LSBMD5;
- (id)apm_MD5Data;
@end

@interface NSDictionary (APMNSDictionaryQuery)
+ (id)apm_dictionaryWithHttpArgumentsString:(id)arg1;
+ (id)gtm_dictionaryWithHttpArgumentsString:(id)arg1;
- (id)apm_queryString;
- (id)gtm_httpArgumentsString;
@end

@interface NSString (APMD5Additions)
- (id)apm_MD5String;
- (id)apm_stringByUnescapingFromURLArgument;
- (void)apm_getUTF32Bytes:(void *)arg1 maxBytes:(unsigned long long)arg2;
- (unsigned long long)apm_UTF32Length;
- (id)gtm_stringByUnescapingFromURLArgument;
- (id)gtm_stringByEscapingForURLArgument;
@end

@interface UIViewController (APMScreenClassName)
+ (void)load;
@property(retain, nonatomic) APMScreen *apmScreen;
@end

@interface UIWindow (APMScreenClassName)
@property(retain, nonatomic) NSPointerArray *apmStack;
@end

@interface NSURL (GIPAppGroups)
+ (id)gip_googleSharedAppGroupContainer;
@end

@interface NSUserDefaults (GIPAppGroups)
+ (id)gip_googleCommonDefaults;
@end

